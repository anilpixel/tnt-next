"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4255],{12666:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>o,contentTitle:()=>s,metadata:()=>d,toc:()=>c,default:()=>m});var a=n(7896),r=n(31461),l=(n(2784),n(30876)),i=["components"],o={tags:["Components"],subtitle:"\u7a7f\u68ad\u6846",type:"\u6570\u636e\u5f55\u5165",cols:1,title:"Transfer \u7a7f\u68ad\u6846"},s=void 0,d={unversionedId:"components/data-entry/transfer",id:"components/data-entry/transfer",isDocsHomePage:!1,title:"Transfer \u7a7f\u68ad\u6846",description:"---",source:"@site/docs/components/data-entry/transfer.md",sourceDirName:"components/data-entry",slug:"/components/data-entry/transfer",permalink:"/tnt-next/docs/components/data-entry/transfer",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/components/data-entry/transfer.md",tags:[{label:"Components",permalink:"/tnt-next/docs/tags/components"}],version:"current",frontMatter:{tags:["Components"],subtitle:"\u7a7f\u68ad\u6846",type:"\u6570\u636e\u5f55\u5165",cols:1,title:"Transfer \u7a7f\u68ad\u6846"},sidebar:"componentsSidebar",previous:{title:"TimePicker \u65f6\u95f4\u9009\u62e9\u6846",permalink:"/tnt-next/docs/components/data-entry/time-picker"},next:{title:"TreeSelect \u6811\u9009\u62e9",permalink:"/tnt-next/docs/components/data-entry/tree-select"}},c=[{value:"\u4f55\u65f6\u4f7f\u7528",id:"\u4f55\u65f6\u4f7f\u7528",children:[],level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",children:[{value:"\u57fa\u672c\u7528\u6cd5",id:"\u57fa\u672c\u7528\u6cd5",children:[],level:3},{value:"\u5e26\u641c\u7d22\u6846",id:"\u5e26\u641c\u7d22\u6846",children:[],level:3},{value:"\u9ad8\u7ea7\u7528\u6cd5",id:"\u9ad8\u7ea7\u7528\u6cd5",children:[],level:3},{value:"\u81ea\u5b9a\u4e49\u6e32\u67d3\u884c\u6570\u636e",id:"\u81ea\u5b9a\u4e49\u6e32\u67d3\u884c\u6570\u636e",children:[],level:3},{value:"\u5927\u6570\u636e\u6027\u80fd\u6d4b\u8bd5",id:"\u5927\u6570\u636e\u6027\u80fd\u6d4b\u8bd5",children:[],level:3},{value:"\u8868\u683c\u7a7f\u68ad\u6846",id:"\u8868\u683c\u7a7f\u68ad\u6846",children:[],level:3},{value:"\u6811\u7a7f\u68ad\u6846",id:"\u6811\u7a7f\u68ad\u6846",children:[],level:3}],level:2},{value:"API",id:"api",children:[{value:"Transfer",id:"transfer",children:[],level:3},{value:"Render Props",id:"render-props",children:[{value:"\u53c2\u8003\u793a\u4f8b",id:"\u53c2\u8003\u793a\u4f8b",children:[],level:4}],level:3}],level:2},{value:"\u6ce8\u610f",id:"\u6ce8\u610f",children:[],level:2},{value:"FAQ",id:"faq",children:[{value:"\u600e\u6837\u8ba9 Transfer \u7a7f\u68ad\u6846\u5217\u8868\u652f\u6301\u5f02\u6b65\u6570\u636e\u52a0\u8f7d",id:"\u600e\u6837\u8ba9-transfer-\u7a7f\u68ad\u6846\u5217\u8868\u652f\u6301\u5f02\u6b65\u6570\u636e\u52a0\u8f7d",children:[],level:3}],level:2}],p={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("hr",null),(0,l.kt)("p",null,"\u53cc\u680f\u7a7f\u68ad\u9009\u62e9\u6846\u3002"),(0,l.kt)("h2",{id:"\u4f55\u65f6\u4f7f\u7528"},"\u4f55\u65f6\u4f7f\u7528"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u9700\u8981\u5728\u591a\u4e2a\u53ef\u9009\u9879\u4e2d\u8fdb\u884c\u591a\u9009\u65f6\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6bd4\u8d77 Select \u548c TreeSelect\uff0c\u7a7f\u68ad\u6846\u5360\u636e\u66f4\u5927\u7684\u7a7a\u95f4\uff0c\u53ef\u4ee5\u5c55\u793a\u53ef\u9009\u9879\u7684\u66f4\u591a\u4fe1\u606f\u3002")),(0,l.kt)("p",null,"\u7a7f\u68ad\u9009\u62e9\u6846\u7528\u76f4\u89c2\u7684\u65b9\u5f0f\u5728\u4e24\u680f\u4e2d\u79fb\u52a8\u5143\u7d20\uff0c\u5b8c\u6210\u9009\u62e9\u884c\u4e3a\u3002"),(0,l.kt)("p",null,"\u9009\u62e9\u4e00\u4e2a\u6216\u4ee5\u4e0a\u7684\u9009\u9879\u540e\uff0c\u70b9\u51fb\u5bf9\u5e94\u7684\u65b9\u5411\u952e\uff0c\u53ef\u4ee5\u628a\u9009\u4e2d\u7684\u9009\u9879\u79fb\u52a8\u5230\u53e6\u4e00\u680f\u3002\u5176\u4e2d\uff0c\u5de6\u8fb9\u4e00\u680f\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"source"),"\uff0c\u53f3\u8fb9\u4e00\u680f\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"target"),"\uff0cAPI \u7684\u8bbe\u8ba1\u4e5f\u53cd\u6620\u4e86\u8fd9\u4e24\u4e2a\u6982\u5ff5\u3002"),(0,l.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,l.kt)("h3",{id:"\u57fa\u672c\u7528\u6cd5"},"\u57fa\u672c\u7528\u6cd5"),(0,l.kt)("p",null,"\u6700\u57fa\u672c\u7684\u7528\u6cd5\uff0c\u5c55\u793a\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"dataSource"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"targetKeys"),"\u3001\u6bcf\u884c\u7684\u6e32\u67d3\u51fd\u6570 ",(0,l.kt)("inlineCode",{parentName:"p"},"render")," \u4ee5\u53ca\u56de\u8c03\u51fd\u6570 ",(0,l.kt)("inlineCode",{parentName:"p"},"onChange")," ",(0,l.kt)("inlineCode",{parentName:"p"},"onSelectChange")," ",(0,l.kt)("inlineCode",{parentName:"p"},"onScroll")," \u7684\u7528\u6cd5\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const mockData = [];\nfor (let i = 0; i < 20; i++) {\n  mockData.push({\n    key: i.toString(),\n    title: `content${i + 1}`,\n    description: `description of content${i + 1}`,\n    disabled: i % 3 < 1,\n  });\n}\n\nconst oriTargetKeys = mockData.filter(item => +item.key % 3 > 1).map(item => item.key);\n\nclass App extends React.Component {\n  state = {\n    targetKeys: oriTargetKeys,\n    selectedKeys: [],\n    disabled: false,\n  };\n\n  handleChange = (nextTargetKeys, direction, moveKeys) => {\n    this.setState({ targetKeys: nextTargetKeys });\n\n    console.log('targetKeys: ', nextTargetKeys);\n    console.log('direction: ', direction);\n    console.log('moveKeys: ', moveKeys);\n  };\n\n  handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\n    this.setState({ selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys] });\n\n    console.log('sourceSelectedKeys: ', sourceSelectedKeys);\n    console.log('targetSelectedKeys: ', targetSelectedKeys);\n  };\n\n  handleScroll = (direction, e) => {\n    console.log('direction:', direction);\n    console.log('target:', e.target);\n  };\n\n  handleDisable = disabled => {\n    this.setState({ disabled });\n  };\n\n  render() {\n    const { targetKeys, selectedKeys, disabled } = this.state;\n    return (\n      <div>\n        <Transfer\n          dataSource={mockData}\n          titles={['Source', 'Target']}\n          targetKeys={targetKeys}\n          selectedKeys={selectedKeys}\n          onChange={this.handleChange}\n          onSelectChange={this.handleSelectChange}\n          onScroll={this.handleScroll}\n          render={item => item.title}\n          disabled={disabled}\n        />\n        <Switch\n          unCheckedChildren=\"disabled\"\n          checkedChildren=\"disabled\"\n          checked={disabled}\n          onChange={this.handleDisable}\n          style={{ marginTop: 16 }}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,l.kt)("h3",{id:"\u5e26\u641c\u7d22\u6846"},"\u5e26\u641c\u7d22\u6846"),(0,l.kt)("p",null,"\u5e26\u641c\u7d22\u6846\u7684\u7a7f\u68ad\u6846\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u641c\u7d22\u51fd\u6570\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"class App extends React.Component {\n  state = {\n    mockData: [],\n    targetKeys: [],\n  };\n\n  componentDidMount() {\n    this.getMock();\n  }\n\n  getMock = () => {\n    const targetKeys = [];\n    const mockData = [];\n    for (let i = 0; i < 20; i++) {\n      const data = {\n        key: i.toString(),\n        title: `content${i + 1}`,\n        description: `description of content${i + 1}`,\n        chosen: Math.random() * 2 > 1,\n      };\n      if (data.chosen) {\n        targetKeys.push(data.key);\n      }\n      mockData.push(data);\n    }\n    this.setState({ mockData, targetKeys });\n  };\n\n  filterOption = (inputValue, option) => option.description.indexOf(inputValue) > -1;\n\n  handleChange = targetKeys => {\n    this.setState({ targetKeys });\n  };\n\n  handleSearch = (dir, value) => {\n    console.log('search:', dir, value);\n  };\n\n  render() {\n    return (\n      <Transfer\n        dataSource={this.state.mockData}\n        showSearch\n        filterOption={this.filterOption}\n        targetKeys={this.state.targetKeys}\n        onChange={this.handleChange}\n        onSearch={this.handleSearch}\n        render={item => item.title}\n      />\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,l.kt)("h3",{id:"\u9ad8\u7ea7\u7528\u6cd5"},"\u9ad8\u7ea7\u7528\u6cd5"),(0,l.kt)("p",null,"\u7a7f\u68ad\u6846\u9ad8\u7ea7\u7528\u6cd5\uff0c\u53ef\u914d\u7f6e\u64cd\u4f5c\u6587\u6848\uff0c\u53ef\u5b9a\u5236\u5bbd\u9ad8\uff0c\u53ef\u5bf9\u5e95\u90e8\u8fdb\u884c\u81ea\u5b9a\u4e49\u6e32\u67d3\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"class App extends React.Component {\n  state = {\n    mockData: [],\n    targetKeys: [],\n  };\n\n  componentDidMount() {\n    this.getMock();\n  }\n\n  getMock = () => {\n    const targetKeys = [];\n    const mockData = [];\n    for (let i = 0; i < 20; i++) {\n      const data = {\n        key: i.toString(),\n        title: `content${i + 1}`,\n        description: `description of content${i + 1}`,\n        chosen: Math.random() * 2 > 1,\n      };\n      if (data.chosen) {\n        targetKeys.push(data.key);\n      }\n      mockData.push(data);\n    }\n    this.setState({ mockData, targetKeys });\n  };\n\n  handleChange = targetKeys => {\n    this.setState({ targetKeys });\n  };\n\n  renderFooter = () => (\n    <Button size=\"small\" style={{ float: 'right', margin: 5 }} onClick={this.getMock}>\n      reload\n    </Button>\n  );\n\n  render() {\n    return (\n      <Transfer\n        dataSource={this.state.mockData}\n        showSearch\n        listStyle={{\n          width: 250,\n          height: 300,\n        }}\n        operations={['to right', 'to left']}\n        targetKeys={this.state.targetKeys}\n        onChange={this.handleChange}\n        render={item => `${item.title}-${item.description}`}\n        footer={this.renderFooter}\n      />\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,l.kt)("h3",{id:"\u81ea\u5b9a\u4e49\u6e32\u67d3\u884c\u6570\u636e"},"\u81ea\u5b9a\u4e49\u6e32\u67d3\u884c\u6570\u636e"),(0,l.kt)("p",null,"\u81ea\u5b9a\u4e49\u6e32\u67d3\u6bcf\u4e00\u4e2a Transfer Item\uff0c\u53ef\u7528\u4e8e\u6e32\u67d3\u590d\u6742\u6570\u636e\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'class App extends React.Component {\n  state = {\n    mockData: [],\n    targetKeys: [],\n  };\n\n  componentDidMount() {\n    this.getMock();\n  }\n\n  getMock = () => {\n    const targetKeys = [];\n    const mockData = [];\n    for (let i = 0; i < 20; i++) {\n      const data = {\n        key: i.toString(),\n        title: `content${i + 1}`,\n        description: `description of content${i + 1}`,\n        chosen: Math.random() * 2 > 1,\n      };\n      if (data.chosen) {\n        targetKeys.push(data.key);\n      }\n      mockData.push(data);\n    }\n    this.setState({ mockData, targetKeys });\n  };\n\n  handleChange = (targetKeys, direction, moveKeys) => {\n    console.log(targetKeys, direction, moveKeys);\n    this.setState({ targetKeys });\n  };\n\n  renderItem = item => {\n    const customLabel = (\n      <span className="custom-item">\n        {item.title} - {item.description}\n      </span>\n    );\n\n    return {\n      label: customLabel, // for displayed item\n      value: item.title, // for title and filter matching\n    };\n  };\n\n  render() {\n    return (\n      <Transfer\n        dataSource={this.state.mockData}\n        listStyle={{\n          width: 300,\n          height: 300,\n        }}\n        targetKeys={this.state.targetKeys}\n        onChange={this.handleChange}\n        render={this.renderItem}\n      />\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n')),(0,l.kt)("h3",{id:"\u5927\u6570\u636e\u6027\u80fd\u6d4b\u8bd5"},"\u5927\u6570\u636e\u6027\u80fd\u6d4b\u8bd5"),(0,l.kt)("p",null,"2000 \u6761\u6570\u636e\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"class App extends React.Component {\n  state = {\n    mockData: [],\n    targetKeys: [],\n  };\n\n  componentDidMount() {\n    this.getMock();\n  }\n\n  getMock = () => {\n    const targetKeys = [];\n    const mockData = [];\n    for (let i = 0; i < 2000; i++) {\n      const data = {\n        key: i.toString(),\n        title: `content${i + 1}`,\n        description: `description of content${i + 1}`,\n        chosen: Math.random() * 2 > 1,\n      };\n      if (data.chosen) {\n        targetKeys.push(data.key);\n      }\n      mockData.push(data);\n    }\n    this.setState({ mockData, targetKeys });\n  };\n\n  handleChange = (targetKeys, direction, moveKeys) => {\n    console.log(targetKeys, direction, moveKeys);\n    this.setState({ targetKeys });\n  };\n\n  render() {\n    return (\n      <Transfer\n        dataSource={this.state.mockData}\n        targetKeys={this.state.targetKeys}\n        onChange={this.handleChange}\n        render={item => item.title}\n      />\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,l.kt)("h3",{id:"\u8868\u683c\u7a7f\u68ad\u6846"},"\u8868\u683c\u7a7f\u68ad\u6846"),(0,l.kt)("p",null,"\u4f7f\u7528 Table \u7ec4\u4ef6\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u6e32\u67d3\u5217\u8868\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// Customize Table Transfer\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }) => (\n  <Transfer {...restProps} showSelectAll={false}>\n    {({\n      direction,\n      filteredItems,\n      onItemSelectAll,\n      onItemSelect,\n      selectedKeys: listSelectedKeys,\n      disabled: listDisabled,\n    }) => {\n      const columns = direction === 'left' ? leftColumns : rightColumns;\n\n      const rowSelection = {\n        getCheckboxProps: item => ({ disabled: listDisabled || item.disabled }),\n        onSelectAll(selected, selectedRows) {\n          const treeSelectedKeys = selectedRows\n            .filter(item => !item.disabled)\n            .map(({ key }) => key);\n          const diffKeys = selected\n            ? difference(treeSelectedKeys, listSelectedKeys)\n            : difference(listSelectedKeys, treeSelectedKeys);\n          onItemSelectAll(diffKeys, selected);\n        },\n        onSelect({ key }, selected) {\n          onItemSelect(key, selected);\n        },\n        selectedRowKeys: listSelectedKeys,\n      };\n\n      return (\n        <Table\n          rowSelection={rowSelection}\n          columns={columns}\n          dataSource={filteredItems}\n          size=\"small\"\n          style={{ pointerEvents: listDisabled ? 'none' : null }}\n          onRow={({ key, disabled: itemDisabled }) => ({\n            onClick: () => {\n              if (itemDisabled || listDisabled) return;\n              onItemSelect(key, !listSelectedKeys.includes(key));\n            },\n          })}\n        />\n      );\n    }}\n  </Transfer>\n);\n\nconst mockTags = ['cat', 'dog', 'bird'];\n\nconst mockData = [];\nfor (let i = 0; i < 20; i++) {\n  mockData.push({\n    key: i.toString(),\n    title: `content${i + 1}`,\n    description: `description of content${i + 1}`,\n    disabled: i % 4 === 0,\n    tag: mockTags[i % 3],\n  });\n}\n\nconst originTargetKeys = mockData.filter(item => +item.key % 3 > 1).map(item => item.key);\n\nconst leftTableColumns = [\n  {\n    dataIndex: 'title',\n    title: 'Name',\n  },\n  {\n    dataIndex: 'tag',\n    title: 'Tag',\n    render: tag => <Tag>{tag}</Tag>,\n  },\n  {\n    dataIndex: 'description',\n    title: 'Description',\n  },\n];\nconst rightTableColumns = [\n  {\n    dataIndex: 'title',\n    title: 'Name',\n  },\n];\n\nclass App extends React.Component {\n  state = {\n    targetKeys: originTargetKeys,\n    disabled: false,\n    showSearch: false,\n  };\n\n  onChange = nextTargetKeys => {\n    this.setState({ targetKeys: nextTargetKeys });\n  };\n\n  triggerDisable = disabled => {\n    this.setState({ disabled });\n  };\n\n  triggerShowSearch = showSearch => {\n    this.setState({ showSearch });\n  };\n\n  render() {\n    const { targetKeys, disabled, showSearch } = this.state;\n    return (\n      <div>\n        <TableTransfer\n          dataSource={mockData}\n          targetKeys={targetKeys}\n          disabled={disabled}\n          showSearch={showSearch}\n          onChange={this.onChange}\n          filterOption={(inputValue, item) =>\n            item.title.indexOf(inputValue) !== -1 || item.tag.indexOf(inputValue) !== -1\n          }\n          leftColumns={leftTableColumns}\n          rightColumns={rightTableColumns}\n        />\n        <Switch\n          unCheckedChildren=\"disabled\"\n          checkedChildren=\"disabled\"\n          checked={disabled}\n          onChange={this.triggerDisable}\n          style={{ marginTop: 16 }}\n        />\n        <Switch\n          unCheckedChildren=\"showSearch\"\n          checkedChildren=\"showSearch\"\n          checked={showSearch}\n          onChange={this.triggerShowSearch}\n          style={{ marginTop: 16 }}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,l.kt)("h3",{id:"\u6811\u7a7f\u68ad\u6846"},"\u6811\u7a7f\u68ad\u6846"),(0,l.kt)("p",null,"\u4f7f\u7528 Tree \u7ec4\u4ef6\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u6e32\u67d3\u5217\u8868\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const { TreeNode } = Tree;\n\n// Customize Table Transfer\nconst isChecked = (selectedKeys, eventKey) => {\n  return selectedKeys.indexOf(eventKey) !== -1;\n};\n\nconst generateTree = (treeNodes = [], checkedKeys = []) => {\n  return treeNodes.map(({ children, ...props }) => (\n    <TreeNode {...props} disabled={checkedKeys.includes(props.key)} key={props.key}>\n      {generateTree(children, checkedKeys)}\n    </TreeNode>\n  ));\n};\n\nconst TreeTransfer = ({ dataSource, targetKeys, ...restProps }) => {\n  const transferDataSource = [];\n  function flatten(list = []) {\n    list.forEach(item => {\n      transferDataSource.push(item);\n      flatten(item.children);\n    });\n  }\n  flatten(dataSource);\n\n  return (\n    <Transfer\n      {...restProps}\n      targetKeys={targetKeys}\n      dataSource={transferDataSource}\n      className=\"tree-transfer\"\n      render={item => item.title}\n      showSelectAll={false}\n    >\n      {({ direction, onItemSelect, selectedKeys }) => {\n        if (direction === 'left') {\n          const checkedKeys = [...selectedKeys, ...targetKeys];\n          return (\n            <Tree\n              blockNode\n              checkable\n              checkStrictly\n              defaultExpandAll\n              checkedKeys={checkedKeys}\n              onCheck={(\n                _,\n                {\n                  node: {\n                    props: { eventKey },\n                  },\n                },\n              ) => {\n                onItemSelect(eventKey, !isChecked(checkedKeys, eventKey));\n              }}\n              onSelect={(\n                _,\n                {\n                  node: {\n                    props: { eventKey },\n                  },\n                },\n              ) => {\n                onItemSelect(eventKey, !isChecked(checkedKeys, eventKey));\n              }}\n            >\n              {generateTree(dataSource, targetKeys)}\n            </Tree>\n          );\n        }\n      }}\n    </Transfer>\n  );\n};\n\nconst treeData = [\n  { key: '0-0', title: '0-0' },\n  {\n    key: '0-1',\n    title: '0-1',\n    children: [{ key: '0-1-0', title: '0-1-0' }, { key: '0-1-1', title: '0-1-1' }],\n  },\n  { key: '0-2', title: '0-3' },\n];\n\nclass App extends React.Component {\n  state = {\n    targetKeys: [],\n  };\n\n  onChange = targetKeys => {\n    console.log('Target Keys:', targetKeys);\n    this.setState({ targetKeys });\n  };\n\n  render() {\n    const { targetKeys } = this.state;\n    return (\n      <div>\n        <TreeTransfer dataSource={treeData} targetKeys={targetKeys} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("h3",{id:"transfer"},"Transfer"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7248\u672c"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"className"),(0,l.kt)("td",{parentName:"tr",align:null},"\u81ea\u5b9a\u4e49\u7c7b"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dataSource"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u636e\u6e90\uff0c\u5176\u4e2d\u7684\u6570\u636e\u5c06\u4f1a\u88ab\u6e32\u67d3\u5230\u5de6\u8fb9\u4e00\u680f\u4e2d\uff0c",(0,l.kt)("inlineCode",{parentName:"td"},"targetKeys")," \u4e2d\u6307\u5b9a\u7684\u9664\u5916\u3002"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://git.io/vMM64"},"TransferItem"),"[","]"),(0,l.kt)("td",{parentName:"tr",align:null},"[","]"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"disabled"),(0,l.kt)("td",{parentName:"tr",align:null},"\u662f\u5426\u7981\u7528"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"3.10.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"filterOption"),(0,l.kt)("td",{parentName:"tr",align:null},"\u63a5\u6536 ",(0,l.kt)("inlineCode",{parentName:"td"},"inputValue")," ",(0,l.kt)("inlineCode",{parentName:"td"},"option")," \u4e24\u4e2a\u53c2\u6570\uff0c\u5f53 ",(0,l.kt)("inlineCode",{parentName:"td"},"option")," \u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u65f6\uff0c\u5e94\u8fd4\u56de ",(0,l.kt)("inlineCode",{parentName:"td"},"true"),"\uff0c\u53cd\u4e4b\u5219\u8fd4\u56de ",(0,l.kt)("inlineCode",{parentName:"td"},"false"),"\u3002"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"(inputValue, option): boolean"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"footer"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5e95\u90e8\u6e32\u67d3\u51fd\u6570"),(0,l.kt)("td",{parentName:"tr",align:null},"(props) => ReactNode"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lazy"),(0,l.kt)("td",{parentName:"tr",align:null},"Transfer \u4f7f\u7528\u4e86 ",(0,l.kt)("a",{parentName:"td",href:"https://github.com/loktar00/react-lazy-load"},"react-lazy-load")," \u4f18\u5316\u6027\u80fd\uff0c\u8fd9\u91cc\u53ef\u4ee5\u8bbe\u7f6e\u76f8\u5173\u53c2\u6570\u3002\u8bbe\u4e3a ",(0,l.kt)("inlineCode",{parentName:"td"},"false")," \u53ef\u4ee5\u5173\u95ed\u61d2\u52a0\u8f7d\u3002"),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"{ height: 32, offset: 32 }"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"listStyle"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e24\u4e2a\u7a7f\u68ad\u6846\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f"),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"({direction: 'left'"),(0,l.kt)("td",{parentName:"tr",align:null},"'right'}) => object")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"locale"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5404\u79cd\u8bed\u8a00"),(0,l.kt)("td",{parentName:"tr",align:null},"{ itemUnit: string; itemsUnit: string; searchPlaceholder: string; notFoundContent: ReactNode; }"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"{ itemUnit: '\u9879', itemsUnit: '\u9879', searchPlaceholder: '\u8bf7\u8f93\u5165\u641c\u7d22\u5185\u5bb9' }")),(0,l.kt)("td",{parentName:"tr",align:null},"3.9.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"operations"),(0,l.kt)("td",{parentName:"tr",align:null},"\u64cd\u4f5c\u6587\u6848\u96c6\u5408\uff0c\u987a\u5e8f\u4ece\u4e0a\u81f3\u4e0b"),(0,l.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,l.kt)("td",{parentName:"tr",align:null},"[","'>', '<']"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"render"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6bcf\u884c\u6570\u636e\u6e32\u67d3\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u5165\u53c2\u4e3a ",(0,l.kt)("inlineCode",{parentName:"td"},"dataSource")," \u4e2d\u7684\u9879\uff0c\u8fd4\u56de\u503c\u4e3a ReactElement\u3002\u6216\u8005\u8fd4\u56de\u4e00\u4e2a\u666e\u901a\u5bf9\u8c61\uff0c\u5176\u4e2d ",(0,l.kt)("inlineCode",{parentName:"td"},"label")," \u5b57\u6bb5\u4e3a ReactElement\uff0c",(0,l.kt)("inlineCode",{parentName:"td"},"value")," \u5b57\u6bb5\u4e3a title"),(0,l.kt)("td",{parentName:"tr",align:null},"(record) => ReactNode"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"selectedKeys"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u54ea\u4e9b\u9879\u5e94\u8be5\u88ab\u9009\u4e2d"),(0,l.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,l.kt)("td",{parentName:"tr",align:null},"[","]"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"showSearch"),(0,l.kt)("td",{parentName:"tr",align:null},"\u662f\u5426\u663e\u793a\u641c\u7d22\u6846"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"showSelectAll"),(0,l.kt)("td",{parentName:"tr",align:null},"\u662f\u5426\u5c55\u793a\u5168\u9009\u52fe\u9009\u6846"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"3.18.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"style"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5bb9\u5668\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f"),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"3.6.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"targetKeys"),(0,l.kt)("td",{parentName:"tr",align:null},"\u663e\u793a\u5728\u53f3\u4fa7\u6846\u6570\u636e\u7684 key \u96c6\u5408"),(0,l.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,l.kt)("td",{parentName:"tr",align:null},"[","]"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"titles"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6807\u9898\u96c6\u5408\uff0c\u987a\u5e8f\u4ece\u5de6\u81f3\u53f3"),(0,l.kt)("td",{parentName:"tr",align:null},"ReactNode","[","]"),(0,l.kt)("td",{parentName:"tr",align:null},"[","'', '']"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onChange"),(0,l.kt)("td",{parentName:"tr",align:null},"\u9009\u9879\u5728\u4e24\u680f\u4e4b\u95f4\u8f6c\u79fb\u65f6\u7684\u56de\u8c03\u51fd\u6570"),(0,l.kt)("td",{parentName:"tr",align:null},"(targetKeys, direction, moveKeys): void"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onScroll"),(0,l.kt)("td",{parentName:"tr",align:null},"\u9009\u9879\u5217\u8868\u6eda\u52a8\u65f6\u7684\u56de\u8c03\u51fd\u6570"),(0,l.kt)("td",{parentName:"tr",align:null},"(direction, event): void"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onSearch"),(0,l.kt)("td",{parentName:"tr",align:null},"\u641c\u7d22\u6846\u5185\u5bb9\u65f6\u6539\u53d8\u65f6\u7684\u56de\u8c03\u51fd\u6570"),(0,l.kt)("td",{parentName:"tr",align:null},"(direction: 'left'"),(0,l.kt)("td",{parentName:"tr",align:null},"'right', value: string): void"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onSelectChange"),(0,l.kt)("td",{parentName:"tr",align:null},"\u9009\u4e2d\u9879\u53d1\u751f\u6539\u53d8\u65f6\u7684\u56de\u8c03\u51fd\u6570"),(0,l.kt)("td",{parentName:"tr",align:null},"(sourceSelectedKeys, targetSelectedKeys): void"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"render-props"},"Render Props"),(0,l.kt)("p",null,"3.18.0 \u65b0\u589e\u3002Transfer \u652f\u6301\u63a5\u6536 ",(0,l.kt)("inlineCode",{parentName:"p"},"children")," \u81ea\u5b9a\u4e49\u6e32\u67d3\u5217\u8868\uff0c\u5e76\u8fd4\u56de\u4ee5\u4e0b\u53c2\u6570\uff1a"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,l.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7248\u672c"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"direction"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6e32\u67d3\u5217\u8868\u7684\u65b9\u5411"),(0,l.kt)("td",{parentName:"tr",align:null},"'left'"),(0,l.kt)("td",{parentName:"tr",align:null},"'right'")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"disabled"),(0,l.kt)("td",{parentName:"tr",align:null},"\u662f\u5426\u7981\u7528\u5217\u8868"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"3.18.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"filteredItems"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8fc7\u6ee4\u540e\u7684\u6570\u636e"),(0,l.kt)("td",{parentName:"tr",align:null},"TransferItem","[","]"),(0,l.kt)("td",{parentName:"tr",align:null},"3.18.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onItemSelect"),(0,l.kt)("td",{parentName:"tr",align:null},"\u52fe\u9009\u6761\u76ee"),(0,l.kt)("td",{parentName:"tr",align:null},"(key: string, selected: boolean)"),(0,l.kt)("td",{parentName:"tr",align:null},"3.18.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onItemSelectAll"),(0,l.kt)("td",{parentName:"tr",align:null},"\u52fe\u9009\u4e00\u7ec4\u6761\u76ee"),(0,l.kt)("td",{parentName:"tr",align:null},"(keys: string","[","], selected: boolean)"),(0,l.kt)("td",{parentName:"tr",align:null},"3.18.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"selectedKeys"),(0,l.kt)("td",{parentName:"tr",align:null},"\u9009\u4e2d\u7684\u6761\u76ee"),(0,l.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,l.kt)("td",{parentName:"tr",align:null},"3.18.0")))),(0,l.kt)("h4",{id:"\u53c2\u8003\u793a\u4f8b"},"\u53c2\u8003\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<Transfer {...props}>{listProps => <YourComponent {...listProps} />}</Transfer>\n")),(0,l.kt)("h2",{id:"\u6ce8\u610f"},"\u6ce8\u610f"),(0,l.kt)("p",null,"\u6309\u7167 React \u7684",(0,l.kt)("a",{parentName:"p",href:"http://facebook.github.io/react/docs/lists-and-keys.html#keys"},"\u89c4\u8303"),"\uff0c\u6240\u6709\u7684\u7ec4\u4ef6\u6570\u7ec4\u5fc5\u987b\u7ed1\u5b9a key\u3002\u5728 Transfer \u4e2d\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"dataSource"),"\u91cc\u7684\u6570\u636e\u503c\u9700\u8981\u6307\u5b9a ",(0,l.kt)("inlineCode",{parentName:"p"},"key")," \u503c\u3002\u5bf9\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"dataSource")," \u9ed8\u8ba4\u5c06\u6bcf\u5217\u6570\u636e\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"key")," \u5c5e\u6027\u4f5c\u4e3a\u552f\u4e00\u7684\u6807\u8bc6\u3002"),(0,l.kt)("p",null,"\u5982\u679c\u4f60\u7684\u6570\u636e\u6ca1\u6709\u8fd9\u4e2a\u5c5e\u6027\uff0c\u52a1\u5fc5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"rowKey")," \u6765\u6307\u5b9a\u6570\u636e\u5217\u7684\u4e3b\u952e\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"// \u6bd4\u5982\u4f60\u7684\u6570\u636e\u4e3b\u952e\u662f uid\nreturn <Transfer rowKey={record => record.uid} />;\n")),(0,l.kt)("h2",{id:"faq"},"FAQ"),(0,l.kt)("h3",{id:"\u600e\u6837\u8ba9-transfer-\u7a7f\u68ad\u6846\u5217\u8868\u652f\u6301\u5f02\u6b65\u6570\u636e\u52a0\u8f7d"},"\u600e\u6837\u8ba9 Transfer \u7a7f\u68ad\u6846\u5217\u8868\u652f\u6301\u5f02\u6b65\u6570\u636e\u52a0\u8f7d"),(0,l.kt)("p",null,"\u4e3a\u4e86\u4fdd\u6301\u9875\u7801\u540c\u6b65\uff0c\u5728\u52fe\u9009\u65f6\u53ef\u4ee5\u4e0d\u79fb\u9664\u9009\u9879\u800c\u4ee5\u7981\u7528\u4ee3\u66ff\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/93xeb"},"https://codesandbox.io/s/93xeb")))}m.isMDXComponent=!0},30876:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=d(n),g=r,k=m["".concat(s,".").concat(g)]||m[g]||p[g]||l;return n?a.createElement(k,i(i({ref:t},c),{},{components:n})):a.createElement(k,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);