"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4490],{17378:(n,e,t)=>{t.r(e),t.d(e,{frontMatter:()=>i,contentTitle:()=>o,metadata:()=>s,toc:()=>m,default:()=>u});var a=t(7896),l=t(31461),r=(t(2784),t(30876)),d=["components"],i={tags:["Components"],cols:1,type:"\u6570\u636e\u5c55\u793a",title:"Table \u8868\u683c"},o=void 0,s={unversionedId:"components/data-display/table",id:"components/data-display/table",isDocsHomePage:!1,title:"Table \u8868\u683c",description:"---",source:"@site/docs/components/data-display/table.md",sourceDirName:"components/data-display",slug:"/components/data-display/table",permalink:"/tnt-next/docs/components/data-display/table",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/components/data-display/table.md",tags:[{label:"Components",permalink:"/tnt-next/docs/tags/components"}],version:"current",frontMatter:{tags:["Components"],cols:1,type:"\u6570\u636e\u5c55\u793a",title:"Table \u8868\u683c"},sidebar:"componentsSidebar",previous:{title:"Statistic \u7edf\u8ba1\u6570\u503c",permalink:"/tnt-next/docs/components/data-display/statistic"},next:{title:"Tabs \u6807\u7b7e\u9875",permalink:"/tnt-next/docs/components/data-display/tabs"}},m=[{value:"\u8bbe\u8ba1\u5e08\u4e13\u5c5e",id:"\u8bbe\u8ba1\u5e08\u4e13\u5c5e",children:[],level:2},{value:"\u4f55\u65f6\u4f7f\u7528",id:"\u4f55\u65f6\u4f7f\u7528",children:[],level:2},{value:"\u5982\u4f55\u4f7f\u7528",id:"\u5982\u4f55\u4f7f\u7528",children:[],level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",children:[{value:"\u57fa\u672c\u7528\u6cd5",id:"\u57fa\u672c\u7528\u6cd5",children:[],level:3},{value:"JSX \u98ce\u683c\u7684 API",id:"jsx-\u98ce\u683c\u7684-api",children:[],level:3},{value:"\u53ef\u9009\u62e9",id:"\u53ef\u9009\u62e9",children:[],level:3},{value:"\u9009\u62e9\u548c\u64cd\u4f5c",id:"\u9009\u62e9\u548c\u64cd\u4f5c",children:[],level:3},{value:"\u81ea\u5b9a\u4e49\u9009\u62e9\u9879",id:"\u81ea\u5b9a\u4e49\u9009\u62e9\u9879",children:[],level:3},{value:"\u7b5b\u9009\u548c\u6392\u5e8f",id:"\u7b5b\u9009\u548c\u6392\u5e8f",children:[],level:3},{value:"\u53ef\u63a7\u7684\u7b5b\u9009\u548c\u6392\u5e8f",id:"\u53ef\u63a7\u7684\u7b5b\u9009\u548c\u6392\u5e8f",children:[],level:3},{value:"\u81ea\u5b9a\u4e49\u7b5b\u9009\u83dc\u5355",id:"\u81ea\u5b9a\u4e49\u7b5b\u9009\u83dc\u5355",children:[],level:3},{value:"\u8fdc\u7a0b\u52a0\u8f7d\u6570\u636e",id:"\u8fdc\u7a0b\u52a0\u8f7d\u6570\u636e",children:[],level:3},{value:"\u7d27\u51d1\u578b",id:"\u7d27\u51d1\u578b",children:[],level:3},{value:"\u5e26\u8fb9\u6846",id:"\u5e26\u8fb9\u6846",children:[],level:3},{value:"\u53ef\u5c55\u5f00",id:"\u53ef\u5c55\u5f00",children:[],level:3},{value:"\u8868\u683c\u884c/\u5217\u5408\u5e76",id:"\u8868\u683c\u884c\u5217\u5408\u5e76",children:[],level:3},{value:"\u6811\u5f62\u6570\u636e\u5c55\u793a",id:"\u6811\u5f62\u6570\u636e\u5c55\u793a",children:[],level:3},{value:"\u56fa\u5b9a\u8868\u5934",id:"\u56fa\u5b9a\u8868\u5934",children:[],level:3},{value:"\u56fa\u5b9a\u5217",id:"\u56fa\u5b9a\u5217",children:[],level:3},{value:"\u56fa\u5b9a\u5934\u548c\u5217",id:"\u56fa\u5b9a\u5934\u548c\u5217",children:[],level:3},{value:"\u8868\u5934\u5206\u7ec4",id:"\u8868\u5934\u5206\u7ec4",children:[],level:3},{value:"\u53ef\u7f16\u8f91\u5355\u5143\u683c",id:"\u53ef\u7f16\u8f91\u5355\u5143\u683c",children:[],level:3},{value:"\u53ef\u7f16\u8f91\u884c",id:"\u53ef\u7f16\u8f91\u884c",children:[],level:3},{value:"\u5d4c\u5957\u5b50\u8868\u683c",id:"\u5d4c\u5957\u5b50\u8868\u683c",children:[],level:3},{value:"\u62d6\u62fd\u6392\u5e8f",id:"\u62d6\u62fd\u6392\u5e8f",children:[],level:3},{value:"\u53ef\u4f38\u7f29\u5217",id:"\u53ef\u4f38\u7f29\u5217",children:[],level:3},{value:"\u5355\u5143\u683c\u81ea\u52a8\u7701\u7565",id:"\u5355\u5143\u683c\u81ea\u52a8\u7701\u7565",children:[],level:3},{value:"\u52a8\u6001\u63a7\u5236\u8868\u683c\u5c5e\u6027",id:"\u52a8\u6001\u63a7\u5236\u8868\u683c\u5c5e\u6027",children:[],level:3}],level:2},{value:"API",id:"api",children:[{value:"Table",id:"table",children:[{value:"onRow \u7528\u6cd5",id:"onrow-\u7528\u6cd5",children:[],level:4}],level:3},{value:"Column",id:"column",children:[],level:3},{value:"ColumnGroup",id:"columngroup",children:[],level:3},{value:"pagination",id:"pagination",children:[],level:3},{value:"rowSelection",id:"rowselection",children:[],level:3},{value:"scroll",id:"scroll",children:[],level:3},{value:"selection",id:"selection",children:[],level:3}],level:2},{value:"\u5728 TypeScript \u4e2d\u4f7f\u7528",id:"\u5728-typescript-\u4e2d\u4f7f\u7528",children:[],level:2},{value:"\u6ce8\u610f",id:"\u6ce8\u610f",children:[],level:2}],p={toc:m};function u(n){var e=n.components,t=(0,l.Z)(n,d);return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("p",null,"\u5c55\u793a\u884c\u5217\u6570\u636e\u3002"),(0,r.kt)("h2",{id:"\u8bbe\u8ba1\u5e08\u4e13\u5c5e"},"\u8bbe\u8ba1\u5e08\u4e13\u5c5e"),(0,r.kt)("p",null,"\u5b89\u88c5 ",(0,r.kt)("a",{parentName:"p",href:"https://kitchen.alipay.com/"},"Kitchen Sketch \u63d2\u4ef6 \ud83d\udc8e"),"\uff0c\u4e24\u6b65\u5c31\u53ef\u4ee5\u81ea\u52a8\u751f\u6210 Ant Design \u8868\u683c\u7ec4\u4ef6\u3002"),(0,r.kt)("h2",{id:"\u4f55\u65f6\u4f7f\u7528"},"\u4f55\u65f6\u4f7f\u7528"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5f53\u6709\u5927\u91cf\u7ed3\u6784\u5316\u7684\u6570\u636e\u9700\u8981\u5c55\u73b0\u65f6\uff1b"),(0,r.kt)("li",{parentName:"ul"},"\u5f53\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3001\u641c\u7d22\u3001\u5206\u9875\u3001\u81ea\u5b9a\u4e49\u64cd\u4f5c\u7b49\u590d\u6742\u884c\u4e3a\u65f6\u3002")),(0,r.kt)("h2",{id:"\u5982\u4f55\u4f7f\u7528"},"\u5982\u4f55\u4f7f\u7528"),(0,r.kt)("p",null,"\u6307\u5b9a\u8868\u683c\u7684\u6570\u636e\u6e90 ",(0,r.kt)("inlineCode",{parentName:"p"},"dataSource")," \u4e3a\u4e00\u4e2a\u6570\u7ec4\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const dataSource = [\n  {\n    key: '1',\n    name: '\u80e1\u5f66\u658c',\n    age: 32,\n    address: '\u897f\u6e56\u533a\u6e56\u5e95\u516c\u56ed1\u53f7',\n  },\n  {\n    key: '2',\n    name: '\u80e1\u5f66\u7956',\n    age: 42,\n    address: '\u897f\u6e56\u533a\u6e56\u5e95\u516c\u56ed1\u53f7',\n  },\n];\n\nconst columns = [\n  {\n    title: '\u59d3\u540d',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: '\u5e74\u9f84',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: '\u4f4f\u5740',\n    dataIndex: 'address',\n    key: 'address',\n  },\n];\n\n<Table dataSource={dataSource} columns={columns} />;\n")),(0,r.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,r.kt)("h3",{id:"\u57fa\u672c\u7528\u6cd5"},"\u57fa\u672c\u7528\u6cd5"),(0,r.kt)("p",null,"\u7b80\u5355\u7684\u8868\u683c\uff0c\u6700\u540e\u4e00\u5217\u662f\u5404\u79cd\u64cd\u4f5c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (text) => <a>{text}</a>,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'Tags',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: (tags) => (\n      <span>\n        {tags.map((tag) => {\n          let color = tag.length > 5 ? 'geekblue' : 'green';\n          if (tag === 'loser') {\n            color = 'volcano';\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </span>\n    ),\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => (\n      <span>\n        <a>Invite {record.name}</a>\n        <Divider type=\"vertical\" />\n        <a>Delete</a>\n      </span>\n    ),\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer'],\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    tags: ['loser'],\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    tags: ['cool', 'teacher'],\n  },\n];\n\nReactDOM.render(<Table columns={columns} dataSource={data} />, mountNode);\n")),(0,r.kt)("h3",{id:"jsx-\u98ce\u683c\u7684-api"},"JSX \u98ce\u683c\u7684 API"),(0,r.kt)("p",null,"\u4f7f\u7528 JSX \u98ce\u683c\u7684 API\uff082.5.0 \u4ee5\u540e\u5f15\u5165\uff09"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Column, ColumnGroup } = Table;\n\nconst data = [\n  {\n    key: \'1\',\n    firstName: \'John\',\n    lastName: \'Brown\',\n    age: 32,\n    address: \'New York No. 1 Lake Park\',\n    tags: [\'nice\', \'developer\'],\n  },\n  {\n    key: \'2\',\n    firstName: \'Jim\',\n    lastName: \'Green\',\n    age: 42,\n    address: \'London No. 1 Lake Park\',\n    tags: [\'loser\'],\n  },\n  {\n    key: \'3\',\n    firstName: \'Joe\',\n    lastName: \'Black\',\n    age: 32,\n    address: \'Sidney No. 1 Lake Park\',\n    tags: [\'cool\', \'teacher\'],\n  },\n];\n\nReactDOM.render(\n  <Table dataSource={data}>\n    <ColumnGroup title="Name">\n      <Column title="First Name" dataIndex="firstName" key="firstName" />\n      <Column title="Last Name" dataIndex="lastName" key="lastName" />\n    </ColumnGroup>\n    <Column title="Age" dataIndex="age" key="age" />\n    <Column title="Address" dataIndex="address" key="address" />\n    <Column\n      title="Tags"\n      dataIndex="tags"\n      key="tags"\n      render={(tags) => (\n        <span>\n          {tags.map((tag) => (\n            <Tag color="blue" key={tag}>\n              {tag}\n            </Tag>\n          ))}\n        </span>\n      )}\n    />\n    <Column\n      title="Action"\n      key="action"\n      render={(text, record) => (\n        <span>\n          <a>Invite {record.lastName}</a>\n          <Divider type="vertical" />\n          <a>Delete</a>\n        </span>\n      )}\n    />\n  </Table>,\n  mountNode\n);\n')),(0,r.kt)("h3",{id:"\u53ef\u9009\u62e9"},"\u53ef\u9009\u62e9"),(0,r.kt)("p",null,"\u7b2c\u4e00\u5217\u662f\u8054\u52a8\u7684\u9009\u62e9\u6846\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    render: (text) => <a>{text}</a>,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n  },\n];\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n  },\n  {\n    key: '4',\n    name: 'Disabled User',\n    age: 99,\n    address: 'Sidney No. 1 Lake Park',\n  },\n];\n\n// rowSelection object indicates the need for row selection\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\n      `selectedRowKeys: ${selectedRowKeys}`,\n      'selectedRows: ',\n      selectedRows\n    );\n  },\n  getCheckboxProps: (record) => ({\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\n    name: record.name,\n  }),\n};\n\nReactDOM.render(\n  <Table rowSelection={rowSelection} columns={columns} dataSource={data} />,\n  mountNode\n);\n")),(0,r.kt)("h3",{id:"\u9009\u62e9\u548c\u64cd\u4f5c"},"\u9009\u62e9\u548c\u64cd\u4f5c"),(0,r.kt)("p",null,"\u9009\u62e9\u540e\u8fdb\u884c\u64cd\u4f5c\uff0c\u5b8c\u6210\u540e\u6e05\u7a7a\u9009\u62e9\uff0c\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"rowSelection.selectedRowKeys")," \u6765\u63a7\u5236\u9009\u4e2d\u9879\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n  },\n];\n\nconst data = [];\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`,\n  });\n}\n\nclass App extends React.Component {\n  state = {\n    selectedRowKeys: [], // Check here to configure the default column\n    loading: false,\n  };\n\n  start = () => {\n    this.setState({ loading: true });\n    // ajax request after empty completing\n    setTimeout(() => {\n      this.setState({\n        selectedRowKeys: [],\n        loading: false,\n      });\n    }, 1000);\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n\n  render() {\n    const { loading, selectedRowKeys } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    return (\n      <div>\n        <div style={{ marginBottom: 16 }}>\n          <Button\n            type=\"primary\"\n            onClick={this.start}\n            disabled={!hasSelected}\n            loading={loading}\n          >\n            Reload\n          </Button>\n          <span style={{ marginLeft: 8 }}>\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n          </span>\n        </div>\n        <Table\n          rowSelection={rowSelection}\n          columns={columns}\n          dataSource={data}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,r.kt)("h3",{id:"\u81ea\u5b9a\u4e49\u9009\u62e9\u9879"},"\u81ea\u5b9a\u4e49\u9009\u62e9\u9879"),(0,r.kt)("p",null,"\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"rowSelection.selections")," \u81ea\u5b9a\u4e49\u9009\u62e9\u9879\uff0c\u9ed8\u8ba4\u4e0d\u663e\u793a\u4e0b\u62c9\u9009\u9879\uff0c\u8bbe\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," \u65f6\u663e\u793a\u9ed8\u8ba4\u9009\u62e9\u9879\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n  },\n];\n\nconst data = [];\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`,\n  });\n}\n\nclass App extends React.Component {\n  state = {\n    selectedRowKeys: [], // Check here to configure the default column\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n\n  render() {\n    const { selectedRowKeys } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n      hideDefaultSelections: true,\n      selections: [\n        {\n          key: 'all-data',\n          text: 'Select All Data',\n          onSelect: () => {\n            this.setState({\n              selectedRowKeys: [...Array(46).keys()], // 0...45\n            });\n          },\n        },\n        {\n          key: 'odd',\n          text: 'Select Odd Row',\n          onSelect: (changableRowKeys) => {\n            let newSelectedRowKeys = [];\n            newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n              if (index % 2 !== 0) {\n                return false;\n              }\n              return true;\n            });\n            this.setState({ selectedRowKeys: newSelectedRowKeys });\n          },\n        },\n        {\n          key: 'even',\n          text: 'Select Even Row',\n          onSelect: (changableRowKeys) => {\n            let newSelectedRowKeys = [];\n            newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n              if (index % 2 !== 0) {\n                return true;\n              }\n              return false;\n            });\n            this.setState({ selectedRowKeys: newSelectedRowKeys });\n          },\n        },\n      ],\n    };\n    return (\n      <Table rowSelection={rowSelection} columns={columns} dataSource={data} />\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,r.kt)("h3",{id:"\u7b5b\u9009\u548c\u6392\u5e8f"},"\u7b5b\u9009\u548c\u6392\u5e8f"),(0,r.kt)("p",null,"\u5bf9\u67d0\u4e00\u5217\u6570\u636e\u8fdb\u884c\u7b5b\u9009\uff0c\u4f7f\u7528\u5217\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"filters")," \u5c5e\u6027\u6765\u6307\u5b9a\u9700\u8981\u7b5b\u9009\u83dc\u5355\u7684\u5217\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"onFilter")," \u7528\u4e8e\u7b5b\u9009\u5f53\u524d\u6570\u636e\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"filterMultiple")," \u7528\u4e8e\u6307\u5b9a\u591a\u9009\u548c\u5355\u9009\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    filters: [\n      {\n        text: 'Joe',\n        value: 'Joe',\n      },\n      {\n        text: 'Jim',\n        value: 'Jim',\n      },\n      {\n        text: 'Submenu',\n        value: 'Submenu',\n        children: [\n          {\n            text: 'Green',\n            value: 'Green',\n          },\n          {\n            text: 'Black',\n            value: 'Black',\n          },\n        ],\n      },\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value, record) => record.name.indexOf(value) === 0,\n    sorter: (a, b) => a.name.length - b.name.length,\n    sortDirections: ['descend'],\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.age - b.age,\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    filters: [\n      {\n        text: 'London',\n        value: 'London',\n      },\n      {\n        text: 'New York',\n        value: 'New York',\n      },\n    ],\n    filterMultiple: false,\n    onFilter: (value, record) => record.address.indexOf(value) === 0,\n    sorter: (a, b) => a.address.length - b.address.length,\n    sortDirections: ['descend', 'ascend'],\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n  },\n  {\n    key: '4',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n];\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nReactDOM.render(\n  <Table columns={columns} dataSource={data} onChange={onChange} />,\n  mountNode\n);\n")),(0,r.kt)("h3",{id:"\u53ef\u63a7\u7684\u7b5b\u9009\u548c\u6392\u5e8f"},"\u53ef\u63a7\u7684\u7b5b\u9009\u548c\u6392\u5e8f"),(0,r.kt)("p",null,"\u4f7f\u7528\u53d7\u63a7\u5c5e\u6027\u5bf9\u7b5b\u9009\u548c\u6392\u5e8f\u72b6\u6001\u8fdb\u884c\u63a7\u5236\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n  },\n  {\n    key: '4',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n];\n\nclass App extends React.Component {\n  state = {\n    filteredInfo: null,\n    sortedInfo: null,\n  };\n\n  handleChange = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  };\n\n  clearFilters = () => {\n    this.setState({ filteredInfo: null });\n  };\n\n  clearAll = () => {\n    this.setState({\n      filteredInfo: null,\n      sortedInfo: null,\n    });\n  };\n\n  setAgeSort = () => {\n    this.setState({\n      sortedInfo: {\n        order: 'descend',\n        columnKey: 'age',\n      },\n    });\n  };\n\n  render() {\n    let { sortedInfo, filteredInfo } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        filters: [{ text: 'Joe', value: 'Joe' }, { text: 'Jim', value: 'Jim' }],\n        filteredValue: filteredInfo.name || null,\n        onFilter: (value, record) => record.name.includes(value),\n        sorter: (a, b) => a.name.length - b.name.length,\n        sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n        ellipsis: true,\n      },\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        sorter: (a, b) => a.age - b.age,\n        sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\n        ellipsis: true,\n      },\n      {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n        filters: [{ text: 'London', value: 'London' }, { text: 'New York', value: 'New York' }],\n        filteredValue: filteredInfo.address || null,\n        onFilter: (value, record) => record.address.includes(value),\n        sorter: (a, b) => a.address.length - b.address.length,\n        sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\n        ellipsis: true,\n      },\n    ];\n    return (\n      <div>\n        <div className=\"table-operations\">\n          <Button onClick={this.setAgeSort}>Sort age</Button>\n          <Button onClick={this.clearFilters}>Clear filters</Button>\n          <Button onClick={this.clearAll}>Clear filters and sorters</Button>\n        </div>\n        <Table columns={columns} dataSource={data} onChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,r.kt)("h3",{id:"\u81ea\u5b9a\u4e49\u7b5b\u9009\u83dc\u5355"},"\u81ea\u5b9a\u4e49\u7b5b\u9009\u83dc\u5355"),(0,r.kt)("p",null,"\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"filterDropdown")," \u81ea\u5b9a\u4e49\u7684\u5217\u7b5b\u9009\u529f\u80fd\uff0c\u5e76\u5b9e\u73b0\u4e00\u4e2a\u641c\u7d22\u5217\u7684\u793a\u4f8b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    name: 'Joe Black',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    name: 'Jim Green',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n  },\n  {\n    key: '4',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park',\n  },\n];\n\nclass App extends React.Component {\n  state = {\n    searchText: '',\n    searchedColumn: '',\n  };\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  render() {\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        width: '30%',\n        ...this.getColumnSearchProps('name'),\n      },\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        width: '20%',\n        ...this.getColumnSearchProps('age'),\n      },\n      {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n        ...this.getColumnSearchProps('address'),\n      },\n    ];\n    return <Table columns={columns} dataSource={data} />;\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,r.kt)("h3",{id:"\u8fdc\u7a0b\u52a0\u8f7d\u6570\u636e"},"\u8fdc\u7a0b\u52a0\u8f7d\u6570\u636e"),(0,r.kt)("p",null,"\u8fd9\u4e2a\u4f8b\u5b50\u901a\u8fc7\u7b80\u5355\u7684 ajax \u8bfb\u53d6\u65b9\u5f0f\uff0c\u6f14\u793a\u4e86\u5982\u4f55\u4ece\u670d\u52a1\u7aef\u8bfb\u53d6\u5e76\u5c55\u73b0\u6570\u636e\uff0c\u5177\u6709\u7b5b\u9009\u3001\u6392\u5e8f\u7b49\u529f\u80fd\u4ee5\u53ca\u9875\u9762 loading \u6548\u679c\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u81ea\u884c\u63a5\u5165\u5176\u4ed6\u6570\u636e\u5904\u7406\u65b9\u5f0f\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    sorter: true,\n    render: (name) => `${name.first} ${name.last}`,\n    width: '20%',\n  },\n  {\n    title: 'Gender',\n    dataIndex: 'gender',\n    filters: [\n      { text: 'Male', value: 'male' },\n      { text: 'Female', value: 'female' },\n    ],\n    width: '20%',\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n  },\n];\n\nclass App extends React.Component {\n  state = {\n    data: [],\n    pagination: {},\n    loading: false,\n  };\n\n  componentDidMount() {\n    this.fetch();\n  }\n\n  handleTableChange = (pagination, filters, sorter) => {\n    const pager = { ...this.state.pagination };\n    pager.current = pagination.current;\n    this.setState({\n      pagination: pager,\n    });\n    this.fetch({\n      results: pagination.pageSize,\n      page: pagination.current,\n      sortField: sorter.field,\n      sortOrder: sorter.order,\n      ...filters,\n    });\n  };\n\n  fetch = (params = {}) => {\n    console.log('params:', params);\n    this.setState({ loading: true });\n    axios({\n      url: 'https://randomuser.me/api',\n      method: 'get',\n      data: {\n        results: 10,\n        ...params,\n      },\n      type: 'json',\n    }).then(({ data }) => {\n      const pagination = { ...this.state.pagination };\n      // Read total count from server\n      // pagination.total = data.totalCount;\n      pagination.total = 200;\n      this.setState({\n        loading: false,\n        data: data.results,\n        pagination,\n      });\n    });\n  };\n\n  render() {\n    return (\n      <Table\n        columns={columns}\n        rowKey={(record) => record.login.uuid}\n        dataSource={this.state.data}\n        pagination={this.state.pagination}\n        loading={this.state.loading}\n        onChange={this.handleTableChange}\n      />\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,r.kt)("h3",{id:"\u7d27\u51d1\u578b"},"\u7d27\u51d1\u578b"),(0,r.kt)("p",null,"\u4e24\u79cd\u7d27\u51d1\u578b\u7684\u5217\u8868\uff0c\u5c0f\u578b\u5217\u8868\u53ea\u7528\u4e8e\u5bf9\u8bdd\u6846\u5185\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n  },\n];\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n  },\n];\n\nReactDOM.render(\n  <div>\n    <h4>Middle size table</h4>\n    <Table columns={columns} dataSource={data} size=\"middle\" />\n    <h4>Small size table</h4>\n    <Table columns={columns} dataSource={data} size=\"small\" />\n  </div>,\n  mountNode\n);\n")),(0,r.kt)("h3",{id:"\u5e26\u8fb9\u6846"},"\u5e26\u8fb9\u6846"),(0,r.kt)("p",null,"\u6dfb\u52a0\u8868\u683c\u8fb9\u6846\u7ebf\uff0c\u9875\u5934\u548c\u9875\u811a\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    render: text => <a>{text}</a>,\n  },\n  {\n    title: 'Cash Assets',\n    className: 'column-money',\n    dataIndex: 'money',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    money: '\uffe5300,000.00',\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    money: '\uffe51,256,000.00',\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    money: '\uffe5120,000.00',\n    address: 'Sidney No. 1 Lake Park',\n  },\n];\n\nReactDOM.render(\n  <Table\n    columns={columns}\n    dataSource={data}\n    bordered\n    title={() => 'Header'}\n    footer={() => 'Footer'}\n  />,\n  mountNode,\n);\n")),(0,r.kt)("h3",{id:"\u53ef\u5c55\u5f00"},"\u53ef\u5c55\u5f00"),(0,r.kt)("p",null,"\u5f53\u8868\u683c\u5185\u5bb9\u8f83\u591a\u4e0d\u80fd\u4e00\u6b21\u6027\u5b8c\u5168\u5c55\u793a\u65f6\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  { title: 'Name', dataIndex: 'name', key: 'name' },\n  { title: 'Age', dataIndex: 'age', key: 'age' },\n  { title: 'Address', dataIndex: 'address', key: 'address' },\n  {\n    title: 'Action',\n    dataIndex: '',\n    key: 'x',\n    render: () => <a>Delete</a>,\n  },\n];\n\nconst data = [\n  {\n    key: 1,\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    description:\n      'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.',\n  },\n  {\n    key: 2,\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    description:\n      'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.',\n  },\n  {\n    key: 3,\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    description:\n      'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\n  },\n];\n\nReactDOM.render(\n  <Table\n    columns={columns}\n    expandedRowRender={(record) => (\n      <p style={{ margin: 0 }}>{record.description}</p>\n    )}\n    dataSource={data}\n  />,\n  mountNode\n);\n")),(0,r.kt)("h3",{id:"\u8868\u683c\u884c\u5217\u5408\u5e76"},"\u8868\u683c\u884c/\u5217\u5408\u5e76"),(0,r.kt)("p",null,"\u8868\u5934\u53ea\u652f\u6301\u5217\u5408\u5e76\uff0c\u4f7f\u7528 column \u91cc\u7684 colSpan \u8fdb\u884c\u8bbe\u7f6e\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// In the fifth row, other columns are merged into first column\n// by setting it's colSpan to be 0\nconst renderContent = (value, row, index) => {\n  const obj = {\n    children: value,\n    props: {},\n  };\n  if (index === 4) {\n    obj.props.colSpan = 0;\n  }\n  return obj;\n};\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    render: (text, row, index) => {\n      if (index < 4) {\n        return <a>{text}</a>;\n      }\n      return {\n        children: <a>{text}</a>,\n        props: {\n          colSpan: 5,\n        },\n      };\n    },\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    render: renderContent,\n  },\n  {\n    title: 'Home phone',\n    colSpan: 2,\n    dataIndex: 'tel',\n    render: (value, row, index) => {\n      const obj = {\n        children: value,\n        props: {},\n      };\n      if (index === 2) {\n        obj.props.rowSpan = 2;\n      }\n      // These two are merged into above cell\n      if (index === 3) {\n        obj.props.rowSpan = 0;\n      }\n      if (index === 4) {\n        obj.props.colSpan = 0;\n      }\n      return obj;\n    },\n  },\n  {\n    title: 'Phone',\n    colSpan: 0,\n    dataIndex: 'phone',\n    render: renderContent,\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    render: renderContent,\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    tel: '0571-22098909',\n    phone: 18889898989,\n    address: 'New York No. 1 Lake Park',\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    tel: '0571-22098333',\n    phone: 18889898888,\n    age: 42,\n    address: 'London No. 1 Lake Park',\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    tel: '0575-22098909',\n    phone: 18900010002,\n    address: 'Sidney No. 1 Lake Park',\n  },\n  {\n    key: '4',\n    name: 'Jim Red',\n    age: 18,\n    tel: '0575-22098909',\n    phone: 18900010002,\n    address: 'London No. 2 Lake Park',\n  },\n  {\n    key: '5',\n    name: 'Jake White',\n    age: 18,\n    tel: '0575-22098909',\n    phone: 18900010002,\n    address: 'Dublin No. 2 Lake Park',\n  },\n];\n\nReactDOM.render(\n  <Table columns={columns} dataSource={data} bordered />,\n  mountNode\n);\n")),(0,r.kt)("h3",{id:"\u6811\u5f62\u6570\u636e\u5c55\u793a"},"\u6811\u5f62\u6570\u636e\u5c55\u793a"),(0,r.kt)("p",null,"\u8868\u683c\u652f\u6301\u6811\u5f62\u6570\u636e\u7684\u5c55\u793a\uff0c\u5f53\u6570\u636e\u4e2d\u6709 ",(0,r.kt)("inlineCode",{parentName:"p"},"children")," \u5b57\u6bb5\u65f6\u4f1a\u81ea\u52a8\u5c55\u793a\u4e3a\u6811\u5f62\u8868\u683c\uff0c\u5982\u679c\u4e0d\u9700\u8981\u6216\u914d\u7f6e\u4e3a\u5176\u4ed6\u5b57\u6bb5\u53ef\u4ee5\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"childrenColumnName")," \u8fdb\u884c\u914d\u7f6e\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n    width: '12%',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    width: '30%',\n    key: 'address',\n  },\n];\n\nconst data = [\n  {\n    key: 1,\n    name: 'John Brown sr.',\n    age: 60,\n    address: 'New York No. 1 Lake Park',\n    children: [\n      {\n        key: 11,\n        name: 'John Brown',\n        age: 42,\n        address: 'New York No. 2 Lake Park',\n      },\n      {\n        key: 12,\n        name: 'John Brown jr.',\n        age: 30,\n        address: 'New York No. 3 Lake Park',\n        children: [\n          {\n            key: 121,\n            name: 'Jimmy Brown',\n            age: 16,\n            address: 'New York No. 3 Lake Park',\n          },\n        ],\n      },\n      {\n        key: 13,\n        name: 'Jim Green sr.',\n        age: 72,\n        address: 'London No. 1 Lake Park',\n        children: [\n          {\n            key: 131,\n            name: 'Jim Green',\n            age: 42,\n            address: 'London No. 2 Lake Park',\n            children: [\n              {\n                key: 1311,\n                name: 'Jim Green jr.',\n                age: 25,\n                address: 'London No. 3 Lake Park',\n              },\n              {\n                key: 1312,\n                name: 'Jimmy Green sr.',\n                age: 18,\n                address: 'London No. 4 Lake Park',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: 2,\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n  },\n];\n\n// rowSelection objects indicates the need for row selection\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\n      `selectedRowKeys: ${selectedRowKeys}`,\n      'selectedRows: ',\n      selectedRows\n    );\n  },\n  onSelect: (record, selected, selectedRows) => {\n    console.log(record, selected, selectedRows);\n  },\n  onSelectAll: (selected, selectedRows, changeRows) => {\n    console.log(selected, selectedRows, changeRows);\n  },\n};\n\nReactDOM.render(\n  <Table columns={columns} rowSelection={rowSelection} dataSource={data} />,\n  mountNode\n);\n")),(0,r.kt)("h3",{id:"\u56fa\u5b9a\u8868\u5934"},"\u56fa\u5b9a\u8868\u5934"),(0,r.kt)("p",null,"\u65b9\u4fbf\u4e00\u9875\u5185\u5c55\u793a\u5927\u91cf\u6570\u636e\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    width: 150,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    width: 150,\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n  },\n];\n\nconst data = [];\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`,\n  });\n}\n\nReactDOM.render(\n  <Table\n    columns={columns}\n    dataSource={data}\n    pagination={{ pageSize: 50 }}\n    scroll={{ y: 240 }}\n  />,\n  mountNode\n);\n")),(0,r.kt)("h3",{id:"\u56fa\u5b9a\u5217"},"\u56fa\u5b9a\u5217"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u5217\u6570\u5f88\u591a\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u56fa\u5b9a\u524d\u540e\u7684\u5217\uff0c\u6a2a\u5411\u6eda\u52a8\u67e5\u770b\u5176\u5b83\u6570\u636e\uff0c\u9700\u8981\u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"scroll.x")," \u914d\u5408\u4f7f\u7528\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Full Name',\n    width: 100,\n    dataIndex: 'name',\n    key: 'name',\n    fixed: 'left',\n  },\n  {\n    title: 'Age',\n    width: 100,\n    dataIndex: 'age',\n    key: 'age',\n    fixed: 'left',\n  },\n  { title: 'Column 1', dataIndex: 'address', key: '1' },\n  { title: 'Column 2', dataIndex: 'address', key: '2' },\n  { title: 'Column 3', dataIndex: 'address', key: '3' },\n  { title: 'Column 4', dataIndex: 'address', key: '4' },\n  { title: 'Column 5', dataIndex: 'address', key: '5' },\n  { title: 'Column 6', dataIndex: 'address', key: '6' },\n  { title: 'Column 7', dataIndex: 'address', key: '7' },\n  { title: 'Column 8', dataIndex: 'address', key: '8' },\n  {\n    title: 'Action',\n    key: 'operation',\n    fixed: 'right',\n    width: 100,\n    render: () => <a>action</a>,\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York Park',\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 40,\n    address: 'London Park',\n  },\n];\n\nReactDOM.render(\n  <Table columns={columns} dataSource={data} scroll={{ x: 1300 }} />,\n  mountNode\n);\n")),(0,r.kt)("h3",{id:"\u56fa\u5b9a\u5934\u548c\u5217"},"\u56fa\u5b9a\u5934\u548c\u5217"),(0,r.kt)("p",null,"\u9002\u5408\u540c\u65f6\u5c55\u793a\u6709\u5927\u91cf\u6570\u636e\u548c\u6570\u636e\u5217\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Full Name',\n    width: 100,\n    dataIndex: 'name',\n    key: 'name',\n    fixed: 'left',\n  },\n  {\n    title: 'Age',\n    width: 100,\n    dataIndex: 'age',\n    key: 'age',\n    fixed: 'left',\n  },\n  {\n    title: 'Column 1',\n    dataIndex: 'address',\n    key: '1',\n    width: 150,\n  },\n  {\n    title: 'Column 2',\n    dataIndex: 'address',\n    key: '2',\n    width: 150,\n  },\n  {\n    title: 'Column 3',\n    dataIndex: 'address',\n    key: '3',\n    width: 150,\n  },\n  {\n    title: 'Column 4',\n    dataIndex: 'address',\n    key: '4',\n    width: 150,\n  },\n  {\n    title: 'Column 5',\n    dataIndex: 'address',\n    key: '5',\n    width: 150,\n  },\n  {\n    title: 'Column 6',\n    dataIndex: 'address',\n    key: '6',\n    width: 150,\n  },\n  {\n    title: 'Column 7',\n    dataIndex: 'address',\n    key: '7',\n    width: 150,\n  },\n  { title: 'Column 8', dataIndex: 'address', key: '8' },\n  {\n    title: 'Action',\n    key: 'operation',\n    fixed: 'right',\n    width: 100,\n    render: () => <a>action</a>,\n  },\n];\n\nconst data = [];\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`,\n  });\n}\n\nReactDOM.render(\n  <Table columns={columns} dataSource={data} scroll={{ x: 1500, y: 300 }} />,\n  mountNode\n);\n")),(0,r.kt)("h3",{id:"\u8868\u5934\u5206\u7ec4"},"\u8868\u5934\u5206\u7ec4"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"columns")," \u53ef\u4ee5\u5185\u5d4c ",(0,r.kt)("inlineCode",{parentName:"p"},"children"),"\uff0c\u4ee5\u6e32\u67d3\u5206\u7ec4\u8868\u5934\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    width: 100,\n    fixed: 'left',\n    filters: [\n      {\n        text: 'Joe',\n        value: 'Joe',\n      },\n      {\n        text: 'John',\n        value: 'John',\n      },\n    ],\n    onFilter: (value, record) => record.name.indexOf(value) === 0,\n  },\n  {\n    title: 'Other',\n    children: [\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        width: 150,\n        sorter: (a, b) => a.age - b.age,\n      },\n      {\n        title: 'Address',\n        children: [\n          {\n            title: 'Street',\n            dataIndex: 'street',\n            key: 'street',\n            width: 150,\n          },\n          {\n            title: 'Block',\n            children: [\n              {\n                title: 'Building',\n                dataIndex: 'building',\n                key: 'building',\n                width: 100,\n              },\n              {\n                title: 'Door No.',\n                dataIndex: 'number',\n                key: 'number',\n                width: 100,\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    title: 'Company',\n    children: [\n      {\n        title: 'Company Address',\n        dataIndex: 'companyAddress',\n        key: 'companyAddress',\n        width: 200,\n      },\n      {\n        title: 'Company Name',\n        dataIndex: 'companyName',\n        key: 'companyName',\n      },\n    ],\n  },\n  {\n    title: 'Gender',\n    dataIndex: 'gender',\n    key: 'gender',\n    width: 80,\n    fixed: 'right',\n  },\n];\n\nconst data = [];\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: 'John Brown',\n    age: i + 1,\n    street: 'Lake Park',\n    building: 'C',\n    number: 2035,\n    companyAddress: 'Lake Street 42',\n    companyName: 'SoftLake Co',\n    gender: 'M',\n  });\n}\n\nReactDOM.render(\n  <Table\n    columns={columns}\n    dataSource={data}\n    bordered\n    size=\"middle\"\n    scroll={{ x: 'calc(700px + 50%)', y: 240 }}\n  />,\n  mountNode\n);\n")),(0,r.kt)("h3",{id:"\u53ef\u7f16\u8f91\u5355\u5143\u683c"},"\u53ef\u7f16\u8f91\u5355\u5143\u683c"),(0,r.kt)("p",null,"\u5e26\u5355\u5143\u683c\u7f16\u8f91\u529f\u80fd\u7684\u8868\u683c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: 'name',\n        dataIndex: 'name',\n        width: '30%',\n        editable: true,\n      },\n      {\n        title: 'age',\n        dataIndex: 'age',\n      },\n      {\n        title: 'address',\n        dataIndex: 'address',\n      },\n      {\n        title: 'operation',\n        dataIndex: 'operation',\n        render: (text, record) =>\n          this.state.dataSource.length >= 1 ? (\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\n              <a>Delete</a>\n            </Popconfirm>\n          ) : null,\n      },\n    ];\n\n    this.state = {\n      dataSource: [\n        {\n          key: '0',\n          name: 'Edward King 0',\n          age: '32',\n          address: 'London, Park Lane no. 0',\n        },\n        {\n          key: '1',\n          name: 'Edward King 1',\n          age: '32',\n          address: 'London, Park Lane no. 1',\n        },\n      ],\n      count: 2,\n    };\n  }\n\n  handleDelete = key => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\n  };\n\n  handleAdd = () => {\n    const { count, dataSource } = this.state;\n    const newData = {\n      key: count,\n      name: `Edward King ${count}`,\n      age: 32,\n      address: `London, Park Lane no. ${count}`,\n    };\n    this.setState({\n      dataSource: [...dataSource, newData],\n      count: count + 1,\n    });\n  };\n\n  handleSave = row => {\n    const newData = [...this.state.dataSource];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row,\n    });\n    this.setState({ dataSource: newData });\n  };\n\n  render() {\n    const { dataSource } = this.state;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n    return (\n      <div>\n        <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n          Add a row\n        </Button>\n        <Table\n          components={components}\n          rowClassName={() => 'editable-row'}\n          bordered\n          dataSource={dataSource}\n          columns={columns}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<EditableTable />, mountNode);\n")),(0,r.kt)("h3",{id:"\u53ef\u7f16\u8f91\u884c"},"\u53ef\u7f16\u8f91\u884c"),(0,r.kt)("p",null,"\u5e26\u884c\u7f16\u8f91\u529f\u80fd\u7684\u8868\u683c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const data = [];\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i.toString(),\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`,\n  });\n}\nconst EditableContext = React.createContext();\n\nclass EditableCell extends React.Component {\n  getInput = () => {\n    if (this.props.inputType === 'number') {\n      return <InputNumber />;\n    }\n    return <Input />;\n  };\n\n  renderCell = ({ getFieldDecorator }) => {\n    const {\n      editing,\n      dataIndex,\n      title,\n      inputType,\n      record,\n      index,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(dataIndex, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`,\n                },\n              ],\n              initialValue: record[dataIndex],\n            })(this.getInput())}\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  render() {\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\n  }\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { data, editingKey: '' };\n    this.columns = [\n      {\n        title: 'name',\n        dataIndex: 'name',\n        width: '25%',\n        editable: true,\n      },\n      {\n        title: 'age',\n        dataIndex: 'age',\n        width: '15%',\n        editable: true,\n      },\n      {\n        title: 'address',\n        dataIndex: 'address',\n        width: '40%',\n        editable: true,\n      },\n      {\n        title: 'operation',\n        dataIndex: 'operation',\n        render: (text, record) => {\n          const { editingKey } = this.state;\n          const editable = this.isEditing(record);\n          return editable ? (\n            <span>\n              <EditableContext.Consumer>\n                {form => (\n                  <a\n                    onClick={() => this.save(form, record.key)}\n                    style={{ marginRight: 8 }}\n                  >\n                    Save\n                  </a>\n                )}\n              </EditableContext.Consumer>\n              <Popconfirm title=\"Sure to cancel?\" onConfirm={() => this.cancel(record.key)}>\n                <a>Cancel</a>\n              </Popconfirm>\n            </span>\n          ) : (\n            <a disabled={editingKey !== ''} onClick={() => this.edit(record.key)}>\n              Edit\n            </a>\n          );\n        },\n      },\n    ];\n  }\n\n  isEditing = record => record.key === this.state.editingKey;\n\n  cancel = () => {\n    this.setState({ editingKey: '' });\n  };\n\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const newData = [...this.state.data];\n      const index = newData.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        this.setState({ data: newData, editingKey: '' });\n      } else {\n        newData.push(row);\n        this.setState({ data: newData, editingKey: '' });\n      }\n    });\n  }\n\n  edit(key) {\n    this.setState({ editingKey: key });\n  }\n\n  render() {\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    };\n\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          inputType: col.dataIndex === 'age' ? 'number' : 'text',\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record),\n        }),\n      };\n    });\n\n    return (\n      <EditableContext.Provider value={this.props.form}>\n        <Table\n          components={components}\n          bordered\n          dataSource={this.state.data}\n          columns={columns}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: this.cancel,\n          }}\n        />\n      </EditableContext.Provider>\n    );\n  }\n}\n\nconst EditableFormTable = Form.create()(EditableTable);\n\nReactDOM.render(<EditableFormTable />, mountNode);\n")),(0,r.kt)("h3",{id:"\u5d4c\u5957\u5b50\u8868\u683c"},"\u5d4c\u5957\u5b50\u8868\u683c"),(0,r.kt)("p",null,"\u5c55\u793a\u6bcf\u884c\u6570\u636e\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const menu = (\n  <Menu>\n    <Menu.Item>Action 1</Menu.Item>\n    <Menu.Item>Action 2</Menu.Item>\n  </Menu>\n);\n\nfunction NestedTable() {\n  const expandedRowRender = () => {\n    const columns = [\n      { title: 'Date', dataIndex: 'date', key: 'date' },\n      { title: 'Name', dataIndex: 'name', key: 'name' },\n      {\n        title: 'Status',\n        key: 'state',\n        render: () => (\n          <span>\n            <Badge status=\"success\" />\n            Finished\n          </span>\n        ),\n      },\n      { title: 'Upgrade Status', dataIndex: 'upgradeNum', key: 'upgradeNum' },\n      {\n        title: 'Action',\n        dataIndex: 'operation',\n        key: 'operation',\n        render: () => (\n          <span className=\"table-operation\">\n            <a>Pause</a>\n            <a>Stop</a>\n            <Dropdown overlay={menu}>\n              <a>\n                More <Icon type=\"down\" />\n              </a>\n            </Dropdown>\n          </span>\n        ),\n      },\n    ];\n\n    const data = [];\n    for (let i = 0; i < 3; ++i) {\n      data.push({\n        key: i,\n        date: '2014-12-24 23:12:00',\n        name: 'This is production name',\n        upgradeNum: 'Upgraded: 56',\n      });\n    }\n    return <Table columns={columns} dataSource={data} pagination={false} />;\n  };\n\n  const columns = [\n    { title: 'Name', dataIndex: 'name', key: 'name' },\n    { title: 'Platform', dataIndex: 'platform', key: 'platform' },\n    { title: 'Version', dataIndex: 'version', key: 'version' },\n    { title: 'Upgraded', dataIndex: 'upgradeNum', key: 'upgradeNum' },\n    { title: 'Creator', dataIndex: 'creator', key: 'creator' },\n    { title: 'Date', dataIndex: 'createdAt', key: 'createdAt' },\n    { title: 'Action', key: 'operation', render: () => <a>Publish</a> },\n  ];\n\n  const data = [];\n  for (let i = 0; i < 3; ++i) {\n    data.push({\n      key: i,\n      name: 'Screem',\n      platform: 'iOS',\n      version: '10.3.4.5654',\n      upgradeNum: 500,\n      creator: 'Jack',\n      createdAt: '2014-12-24 23:12:00',\n    });\n  }\n\n  return (\n    <Table\n      className=\"components-table-demo-nested\"\n      columns={columns}\n      expandedRowRender={expandedRowRender}\n      dataSource={data}\n    />\n  );\n}\n\nReactDOM.render(<NestedTable />, mountNode);\n")),(0,r.kt)("h3",{id:"\u62d6\u62fd\u6392\u5e8f"},"\u62d6\u62fd\u6392\u5e8f"),(0,r.kt)("p",null,"\u4f7f\u7528\u81ea\u5b9a\u4e49\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u96c6\u6210 react-dnd \u6765\u5b9e\u73b0\u62d6\u62fd\u6392\u5e8f\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"let dragingIndex = -1;\n\nclass BodyRow extends React.Component {\n  render() {\n    const { isOver, connectDragSource, connectDropTarget, moveRow, ...restProps } = this.props;\n    const style = { ...restProps.style, cursor: 'move' };\n\n    let { className } = restProps;\n    if (isOver) {\n      if (restProps.index > dragingIndex) {\n        className += ' drop-over-downward';\n      }\n      if (restProps.index < dragingIndex) {\n        className += ' drop-over-upward';\n      }\n    }\n\n    return connectDragSource(\n      connectDropTarget(<tr {...restProps} className={className} style={style} />),\n    );\n  }\n}\n\nconst rowSource = {\n  beginDrag(props) {\n    dragingIndex = props.index;\n    return {\n      index: props.index,\n    };\n  },\n};\n\nconst rowTarget = {\n  drop(props, monitor) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.moveRow(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  },\n};\n\nconst DragableBodyRow = DropTarget('row', rowTarget, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n}))(\n  DragSource('row', rowSource, connect => ({\n    connectDragSource: connect.dragSource(),\n  }))(BodyRow),\n);\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n  },\n];\n\nclass DragSortingTable extends React.Component {\n  state = {\n    data: [\n      {\n        key: '1',\n        name: 'John Brown',\n        age: 32,\n        address: 'New York No. 1 Lake Park',\n      },\n      {\n        key: '2',\n        name: 'Jim Green',\n        age: 42,\n        address: 'London No. 1 Lake Park',\n      },\n      {\n        key: '3',\n        name: 'Joe Black',\n        age: 32,\n        address: 'Sidney No. 1 Lake Park',\n      },\n    ],\n  };\n\n  components = {\n    body: {\n      row: DragableBodyRow,\n    },\n  };\n\n  moveRow = (dragIndex, hoverIndex) => {\n    const { data } = this.state;\n    const dragRow = data[dragIndex];\n\n    this.setState(\n      immutabilityHelper(this.state, {\n        data: {\n          $splice: [[dragIndex, 1], [hoverIndex, 0, dragRow]],\n        },\n      }),\n    );\n  };\n\n  render() {\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <Table\n          columns={columns}\n          dataSource={this.state.data}\n          components={this.components}\n          onRow={(record, index) => ({\n            index,\n            moveRow: this.moveRow,\n          })}\n        />\n      </DndProvider>\n    );\n  }\n}\n\nReactDOM.render(<DragSortingTable />, mountNode);\n")),(0,r.kt)("h3",{id:"\u53ef\u4f38\u7f29\u5217"},"\u53ef\u4f38\u7f29\u5217"),(0,r.kt)("p",null,"\u96c6\u6210 ","[","react-resizable]","(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/STRML/react-resizable"},"https://github.com/STRML/react-resizable"),") \u6765\u5b9e\u73b0\u53ef\u4f38\u7f29\u5217\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const ResizeableTitle = props => {\n  const { onResize, width, ...restProps } = props;\n\n  if (!width) {\n    return <th {...restProps} />;\n  }\n\n  return (\n    <Resizable\n      width={width}\n      height={0}\n      onResize={onResize}\n      draggableOpts={{ enableUserSelectHack: false }}\n    >\n      <th {...restProps} />\n    </Resizable>\n  );\n};\n\nclass Demo extends React.Component {\n  state = {\n    columns: [\n      {\n        title: 'Date',\n        dataIndex: 'date',\n        width: 200,\n      },\n      {\n        title: 'Amount',\n        dataIndex: 'amount',\n        width: 100,\n      },\n      {\n        title: 'Type',\n        dataIndex: 'type',\n        width: 100,\n      },\n      {\n        title: 'Note',\n        dataIndex: 'note',\n        width: 100,\n      },\n      {\n        title: 'Action',\n        key: 'action',\n        render: () => <a>Delete</a>,\n      },\n    ],\n  };\n\n  components = {\n    header: {\n      cell: ResizeableTitle,\n    },\n  };\n\n  data = [\n    {\n      key: 0,\n      date: '2018-02-11',\n      amount: 120,\n      type: 'income',\n      note: 'transfer',\n    },\n    {\n      key: 1,\n      date: '2018-03-11',\n      amount: 243,\n      type: 'income',\n      note: 'transfer',\n    },\n    {\n      key: 2,\n      date: '2018-04-11',\n      amount: 98,\n      type: 'income',\n      note: 'transfer',\n    },\n  ];\n\n  handleResize = index => (e, { size }) => {\n    this.setState(({ columns }) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width,\n      };\n      return { columns: nextColumns };\n    });\n  };\n\n  render() {\n    const columns = this.state.columns.map((col, index) => ({\n      ...col,\n      onHeaderCell: column => ({\n        width: column.width,\n        onResize: this.handleResize(index),\n      }),\n    }));\n\n    return <Table bordered components={this.components} columns={columns} dataSource={this.data} />;\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n")),(0,r.kt)("h3",{id:"\u5355\u5143\u683c\u81ea\u52a8\u7701\u7565"},"\u5355\u5143\u683c\u81ea\u52a8\u7701\u7565"),(0,r.kt)("p",null,"\u8bbe\u7f6e ",(0,r.kt)("inlineCode",{parentName:"p"},"column.ellipsis")," \u53ef\u4ee5\u8ba9\u5355\u5143\u683c\u5185\u5bb9\u6839\u636e\u5bbd\u5ea6\u81ea\u52a8\u7701\u7565\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (text) => <a>{text}</a>,\n    width: 150,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n    width: 80,\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address 1',\n    ellipsis: true,\n  },\n  {\n    title: 'Long Column Long Column Long Column',\n    dataIndex: 'address',\n    key: 'address 2',\n    ellipsis: true,\n  },\n  {\n    title: 'Long Column Long Column',\n    dataIndex: 'address',\n    key: 'address 3',\n    ellipsis: true,\n  },\n  {\n    title: 'Long Column',\n    dataIndex: 'address',\n    key: 'address 4',\n    ellipsis: true,\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park, New York No. 1 Lake Park',\n    tags: ['nice', 'developer'],\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 2 Lake Park, London No. 2 Lake Park',\n    tags: ['loser'],\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park, Sidney No. 1 Lake Park',\n    tags: ['cool', 'teacher'],\n  },\n];\n\nReactDOM.render(<Table columns={columns} dataSource={data} />, mountNode);\n")),(0,r.kt)("h3",{id:"\u52a8\u6001\u63a7\u5236\u8868\u683c\u5c5e\u6027"},"\u52a8\u6001\u63a7\u5236\u8868\u683c\u5c5e\u6027"),(0,r.kt)("p",null,"\u9009\u62e9\u4e0d\u540c\u914d\u7f6e\u7ec4\u5408\u67e5\u770b\u6548\u679c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const columns = [\n  {\n    title: \'Name\',\n    dataIndex: \'name\',\n    key: \'name\',\n    render: (text) => <a>{text}</a>,\n  },\n  {\n    title: \'Age\',\n    dataIndex: \'age\',\n    key: \'age\',\n  },\n  {\n    title: \'Address\',\n    dataIndex: \'address\',\n    key: \'address\',\n  },\n  {\n    title: \'Action\',\n    key: \'action\',\n    render: (text, record) => (\n      <span>\n        <a>Action \u4e00 {record.name}</a>\n        <Divider type="vertical" />\n        <a>Delete</a>\n        <Divider type="vertical" />\n        <a className="ant-dropdown-link">\n          More actions <Icon type="down" />\n        </a>\n      </span>\n    ),\n  },\n];\n\nconst data = [];\nfor (let i = 1; i <= 10; i++) {\n  data.push({\n    key: i,\n    name: \'John Brown\',\n    age: `${i}2`,\n    address: `New York No. ${i} Lake Park`,\n    description: `My name is John Brown, I am ${i}2 years old, living in New York No. ${i} Lake Park.`,\n  });\n}\n\nconst expandedRowRender = (record) => <p>{record.description}</p>;\nconst title = () => \'Here is title\';\nconst showHeader = true;\nconst footer = () => \'Here is footer\';\nconst scroll = { y: 240 };\nconst pagination = { position: \'bottom\' };\n\nclass Demo extends React.Component {\n  state = {\n    bordered: false,\n    loading: false,\n    pagination,\n    size: \'default\',\n    expandedRowRender,\n    title: undefined,\n    showHeader,\n    footer,\n    rowSelection: {},\n    scroll: undefined,\n    hasData: true,\n    tableLayout: undefined,\n  };\n\n  handleToggle = (prop) => (enable) => {\n    this.setState({ [prop]: enable });\n  };\n\n  handleSizeChange = (e) => {\n    this.setState({ size: e.target.value });\n  };\n\n  handleTableLayoutChange = (e) => {\n    this.setState({ tableLayout: e.target.value });\n  };\n\n  handleExpandChange = (enable) => {\n    this.setState({\n      expandedRowRender: enable ? expandedRowRender : undefined,\n    });\n  };\n\n  handleEllipsisChange = (enable) => {\n    this.setState({ ellipsis: enable });\n  };\n\n  handleTitleChange = (enable) => {\n    this.setState({ title: enable ? title : undefined });\n  };\n\n  handleHeaderChange = (enable) => {\n    this.setState({ showHeader: enable ? showHeader : false });\n  };\n\n  handleFooterChange = (enable) => {\n    this.setState({ footer: enable ? footer : undefined });\n  };\n\n  handleRowSelectionChange = (enable) => {\n    this.setState({ rowSelection: enable ? {} : undefined });\n  };\n\n  handleScollChange = (enable) => {\n    this.setState({ scroll: enable ? scroll : undefined });\n  };\n\n  handleDataChange = (hasData) => {\n    this.setState({ hasData });\n  };\n\n  handlePaginationChange = (e) => {\n    const { value } = e.target;\n    this.setState({\n      pagination: value === \'none\' ? false : { position: value },\n    });\n  };\n\n  render() {\n    const { state } = this;\n    return (\n      <div>\n        <Form\n          layout="inline"\n          className="components-table-demo-control-bar"\n          style={{ marginBottom: 16 }}\n        >\n          <Form.Item label="Bordered">\n            <Switch\n              checked={state.bordered}\n              onChange={this.handleToggle(\'bordered\')}\n            />\n          </Form.Item>\n          <Form.Item label="loading">\n            <Switch\n              checked={state.loading}\n              onChange={this.handleToggle(\'loading\')}\n            />\n          </Form.Item>\n          <Form.Item label="Title">\n            <Switch checked={!!state.title} onChange={this.handleTitleChange} />\n          </Form.Item>\n          <Form.Item label="Column Header">\n            <Switch\n              checked={!!state.showHeader}\n              onChange={this.handleHeaderChange}\n            />\n          </Form.Item>\n          <Form.Item label="Footer">\n            <Switch\n              checked={!!state.footer}\n              onChange={this.handleFooterChange}\n            />\n          </Form.Item>\n          <Form.Item label="Expandable">\n            <Switch\n              checked={!!state.expandedRowRender}\n              onChange={this.handleExpandChange}\n            />\n          </Form.Item>\n          <Form.Item label="Checkbox">\n            <Switch\n              checked={!!state.rowSelection}\n              onChange={this.handleRowSelectionChange}\n            />\n          </Form.Item>\n          <Form.Item label="Fixed Header">\n            <Switch\n              checked={!!state.scroll}\n              onChange={this.handleScollChange}\n            />\n          </Form.Item>\n          <Form.Item label="Has Data">\n            <Switch\n              checked={!!state.hasData}\n              onChange={this.handleDataChange}\n            />\n          </Form.Item>\n          <Form.Item label="Ellipsis">\n            <Switch\n              checked={!!state.ellipsis}\n              onChange={this.handleEllipsisChange}\n            />\n          </Form.Item>\n          <Form.Item label="Size">\n            <Radio.Group value={state.size} onChange={this.handleSizeChange}>\n              <Radio.Button value="default">Default</Radio.Button>\n              <Radio.Button value="middle">Middle</Radio.Button>\n              <Radio.Button value="small">Small</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item label="Table Layout">\n            <Radio.Group\n              value={state.tableLayout}\n              onChange={this.handleTableLayoutChange}\n            >\n              <Radio.Button value={undefined}>Unset</Radio.Button>\n              <Radio.Button value="fixed">Fixed</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item label="Pagination">\n            <Radio.Group\n              value={state.pagination ? state.pagination.position : \'none\'}\n              onChange={this.handlePaginationChange}\n            >\n              <Radio.Button value="top">Top</Radio.Button>\n              <Radio.Button value="bottom">Bottom</Radio.Button>\n              <Radio.Button value="both">Both</Radio.Button>\n              <Radio.Button value="none">None</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n        </Form>\n        <Table\n          {...this.state}\n          columns={columns.map((item) => ({\n            ...item,\n            ellipsis: state.ellipsis,\n          }))}\n          dataSource={state.hasData ? data : null}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n')),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("h3",{id:"table"},"Table"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7248\u672c"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tableLayout"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8868\u683c\u5143\u7d20\u7684 ",(0,r.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/table-layout"},"table-layout")," \u5c5e\u6027\uff0c\u8bbe\u4e3a ",(0,r.kt)("inlineCode",{parentName:"td"},"fixed")," \u8868\u793a\u5185\u5bb9\u4e0d\u4f1a\u5f71\u54cd\u5217\u7684\u5e03\u5c40"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"'auto'"),(0,r.kt)("td",{parentName:"tr",align:null},"'fixed'"),(0,r.kt)("td",{parentName:"tr",align:null},"\u65e0",(0,r.kt)("hr",null),"\u56fa\u5b9a\u8868\u5934/\u5217\u6216\u4f7f\u7528\u4e86 ",(0,r.kt)("inlineCode",{parentName:"td"},"column.ellipsis")," \u65f6\uff0c\u9ed8\u8ba4\u503c\u4e3a ",(0,r.kt)("inlineCode",{parentName:"td"},"fixed")),(0,r.kt)("td",{parentName:"tr",align:null},"3.24.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bordered"),(0,r.kt)("td",{parentName:"tr",align:null},"\u662f\u5426\u5c55\u793a\u5916\u8fb9\u6846\u548c\u5217\u8fb9\u6846"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"childrenColumnName"),(0,r.kt)("td",{parentName:"tr",align:null},"\u6307\u5b9a\u6811\u5f62\u7ed3\u6784\u7684\u5217\u540d"),(0,r.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,r.kt)("td",{parentName:"tr",align:null},"children"),(0,r.kt)("td",{parentName:"tr",align:null},"3.4.2"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"columns"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8868\u683c\u5217\u7684\u914d\u7f6e\u63cf\u8ff0\uff0c\u5177\u4f53\u9879\u89c1\u4e0b\u8868"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://git.io/JeKZW"},"ColumnProps"),"[","]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"components"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8986\u76d6\u9ed8\u8ba4\u7684 table \u5143\u7d20"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://git.io/fANxz"},"TableComponents")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dataSource"),(0,r.kt)("td",{parentName:"tr",align:null},"\u6570\u636e\u6570\u7ec4"),(0,r.kt)("td",{parentName:"tr",align:null},"any","[","]"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"defaultExpandAllRows"),(0,r.kt)("td",{parentName:"tr",align:null},"\u521d\u59cb\u65f6\uff0c\u662f\u5426\u5c55\u5f00\u6240\u6709\u884c"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"defaultExpandedRowKeys"),(0,r.kt)("td",{parentName:"tr",align:null},"\u9ed8\u8ba4\u5c55\u5f00\u7684\u884c"),(0,r.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"expandedRowKeys"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5c55\u5f00\u7684\u884c\uff0c\u63a7\u5236\u5c5e\u6027"),(0,r.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"expandedRowRender"),(0,r.kt)("td",{parentName:"tr",align:null},"\u989d\u5916\u7684\u5c55\u5f00\u884c"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(record, index, indent, expanded):ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"expandIcon"),(0,r.kt)("td",{parentName:"tr",align:null},"\u81ea\u5b9a\u4e49\u5c55\u5f00\u56fe\u6807\uff0c\u53c2\u8003",(0,r.kt)("a",{parentName:"td",href:"http://react-component.github.io/table/examples/expandIcon.html"},"\u793a\u4f8b")),(0,r.kt)("td",{parentName:"tr",align:null},"Function(props):ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.11.3"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"expandRowByClick"),(0,r.kt)("td",{parentName:"tr",align:null},"\u901a\u8fc7\u70b9\u51fb\u884c\u6765\u5c55\u5f00\u5b50\u884c"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"3.0.1"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"expandIconColumnIndex"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5c55\u5f00\u7684\u56fe\u6807\u663e\u793a\u5728\u54ea\u4e00\u5217\uff0c\u5982\u679c\u6ca1\u6709 ",(0,r.kt)("inlineCode",{parentName:"td"},"rowSelection"),"\uff0c\u9ed8\u8ba4\u663e\u793a\u5728\u7b2c\u4e00\u5217\uff0c\u5426\u5219\u663e\u793a\u5728\u9009\u62e9\u6846\u540e\u9762"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"footer"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8868\u683c\u5c3e\u90e8"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(currentPageData)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"indentSize"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5c55\u793a\u6811\u5f62\u6570\u636e\u65f6\uff0c\u6bcf\u5c42\u7f29\u8fdb\u7684\u5bbd\u5ea6\uff0c\u4ee5 px \u4e3a\u5355\u4f4d"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"15"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"loading"),(0,r.kt)("td",{parentName:"tr",align:null},"\u9875\u9762\u662f\u5426\u52a0\u8f7d\u4e2d"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://ant.design/components/spin-cn/#API"},"object")," (",(0,r.kt)("a",{parentName:"td",href:"https://github.com/ant-design/ant-design/issues/4544#issuecomment-271533135"},"\u66f4\u591a"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"locale"),(0,r.kt)("td",{parentName:"tr",align:null},"\u9ed8\u8ba4\u6587\u6848\u8bbe\u7f6e\uff0c\u76ee\u524d\u5305\u62ec\u6392\u5e8f\u3001\u8fc7\u6ee4\u3001\u7a7a\u6570\u636e\u6587\u6848"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"filterConfirm: '\u786e\u5b9a' /",(0,r.kt)("br",null)," filterReset: '\u91cd\u7f6e' /",(0,r.kt)("br",null)," emptyText: '\u6682\u65e0\u6570\u636e' /",(0,r.kt)("br",null)," ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/ant-design/ant-design/issues/575#issuecomment-159169511"},"\u9ed8\u8ba4\u503c")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pagination"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5206\u9875\u5668\uff0c\u53c2\u8003",(0,r.kt)("a",{parentName:"td",href:"#pagination"},"\u914d\u7f6e\u9879"),"\u6216 ",(0,r.kt)("a",{parentName:"td",href:"/components/pagination/"},"pagination")," \u6587\u6863\uff0c\u8bbe\u4e3a false \u65f6\u4e0d\u5c55\u793a\u548c\u8fdb\u884c\u5206\u9875"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rowClassName"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8868\u683c\u884c\u7684\u7c7b\u540d"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(record, index):string"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rowKey"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8868\u683c\u884c key \u7684\u53d6\u503c\uff0c\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216\u4e00\u4e2a\u51fd\u6570"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(record):string"),(0,r.kt)("td",{parentName:"tr",align:null},"'key'"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rowSelection"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8868\u683c\u884c\u662f\u5426\u53ef\u9009\u62e9\uff0c",(0,r.kt)("a",{parentName:"td",href:"#rowSelection"},"\u914d\u7f6e\u9879")),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"scroll"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8868\u683c\u662f\u5426\u53ef\u6eda\u52a8\uff0c",(0,r.kt)("a",{parentName:"td",href:"#scroll"},"\u914d\u7f6e\u9879")),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"showHeader"),(0,r.kt)("td",{parentName:"tr",align:null},"\u662f\u5426\u663e\u793a\u8868\u5934"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"size"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8868\u683c\u5927\u5c0f"),(0,r.kt)("td",{parentName:"tr",align:null},"default"),(0,r.kt)("td",{parentName:"tr",align:null},"middle"),(0,r.kt)("td",{parentName:"tr",align:null},"small"),(0,r.kt)("td",{parentName:"tr",align:null},"default"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"title"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8868\u683c\u6807\u9898"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(currentPageData)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onChange"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5206\u9875\u3001\u6392\u5e8f\u3001\u7b5b\u9009\u53d8\u5316\u65f6\u89e6\u53d1"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(pagination, filters, sorter, extra: { currentDataSource: ","[","] })"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onExpand"),(0,r.kt)("td",{parentName:"tr",align:null},"\u70b9\u51fb\u5c55\u5f00\u56fe\u6807\u65f6\u89e6\u53d1"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(expanded, record)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onExpandedRowsChange"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5c55\u5f00\u7684\u884c\u53d8\u5316\u65f6\u89e6\u53d1"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(expandedRows)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onHeaderRow"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u5934\u90e8\u884c\u5c5e\u6027"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(column, index)"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onRow"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u884c\u5c5e\u6027"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(record, index)"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"getPopupContainer"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u8868\u683c\u5185\u5404\u7c7b\u6d6e\u5c42\u7684\u6e32\u67d3\u8282\u70b9\uff0c\u5982\u7b5b\u9009\u83dc\u5355"),(0,r.kt)("td",{parentName:"tr",align:null},"(triggerNode) => HTMLElement"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"() => TableHtmlElement")),(0,r.kt)("td",{parentName:"tr",align:null},"3.21.0"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h4",{id:"onrow-\u7528\u6cd5"},"onRow \u7528\u6cd5"),(0,r.kt)("p",null,"\u9002\u7528\u4e8e ",(0,r.kt)("inlineCode",{parentName:"p"},"onRow")," ",(0,r.kt)("inlineCode",{parentName:"p"},"onHeaderRow")," ",(0,r.kt)("inlineCode",{parentName:"p"},"onCell")," ",(0,r.kt)("inlineCode",{parentName:"p"},"onHeaderCell"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"<Table\n  onRow={(record) => {\n    return {\n      onClick: (event) => {}, // \u70b9\u51fb\u884c\n      onDoubleClick: (event) => {},\n      onContextMenu: (event) => {},\n      onMouseEnter: (event) => {}, // \u9f20\u6807\u79fb\u5165\u884c\n      onMouseLeave: (event) => {},\n    };\n  }}\n  onHeaderRow={(column) => {\n    return {\n      onClick: () => {}, // \u70b9\u51fb\u8868\u5934\u884c\n    };\n  }}\n/>\n")),(0,r.kt)("h3",{id:"column"},"Column"),(0,r.kt)("p",null,"\u5217\u63cf\u8ff0\u6570\u636e\u5bf9\u8c61\uff0c\u662f columns \u4e2d\u7684\u4e00\u9879\uff0cColumn \u4f7f\u7528\u76f8\u540c\u7684 API\u3002"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7248\u672c"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"align"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u5217\u7684\u5bf9\u9f50\u65b9\u5f0f"),(0,r.kt)("td",{parentName:"tr",align:null},"'left'"),(0,r.kt)("td",{parentName:"tr",align:null},"'right'"),(0,r.kt)("td",{parentName:"tr",align:null},"'center'"),(0,r.kt)("td",{parentName:"tr",align:null},"'left'"),(0,r.kt)("td",{parentName:"tr",align:null},"3.3.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ellipsis"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8d85\u8fc7\u5bbd\u5ea6\u5c06\u81ea\u52a8\u7701\u7565\uff0c\u6682\u4e0d\u652f\u6301\u548c\u6392\u5e8f\u7b5b\u9009\u4e00\u8d77\u4f7f\u7528\u3002",(0,r.kt)("br",null),"\u8bbe\u7f6e\u4e3a ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," \u65f6\uff0c\u8868\u683c\u5e03\u5c40\u5c06\u53d8\u6210 ",(0,r.kt)("inlineCode",{parentName:"td"},'tableLayout="fixed"'),"\u3002"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"3.24.0"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"className"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5217\u6837\u5f0f\u7c7b\u540d"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"colSpan"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8868\u5934\u5217\u5408\u5e76,\u8bbe\u7f6e\u4e3a 0 \u65f6\uff0c\u4e0d\u6e32\u67d3"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dataIndex"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5217\u6570\u636e\u5728\u6570\u636e\u9879\u4e2d\u5bf9\u5e94\u7684 key\uff0c\u652f\u6301 ",(0,r.kt)("inlineCode",{parentName:"td"},"a.b.c"),"\u3001",(0,r.kt)("inlineCode",{parentName:"td"},"a[0].b.c[1]")," \u7684\u5d4c\u5957\u5199\u6cd5"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"defaultFilteredValue"),(0,r.kt)("td",{parentName:"tr",align:null},"\u9ed8\u8ba4\u7b5b\u9009\u503c"),(0,r.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"defaultSortOrder"),(0,r.kt)("td",{parentName:"tr",align:null},"\u9ed8\u8ba4\u6392\u5e8f\u987a\u5e8f"),(0,r.kt)("td",{parentName:"tr",align:null},"'ascend'"),(0,r.kt)("td",{parentName:"tr",align:null},"'descend'"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.9.3"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filterDropdown"),(0,r.kt)("td",{parentName:"tr",align:null},"\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7b5b\u9009\u83dc\u5355\uff0c\u6b64\u51fd\u6570\u53ea\u8d1f\u8d23\u6e32\u67d3\u56fe\u5c42\uff0c\u9700\u8981\u81ea\u884c\u7f16\u5199\u5404\u79cd\u4ea4\u4e92"),(0,r.kt)("td",{parentName:"tr",align:null},"React.ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"(props: ",(0,r.kt)("a",{parentName:"td",href:"https://git.io/fjP5h"},"FilterDropdownProps"),") => React.ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filterDropdownVisible"),(0,r.kt)("td",{parentName:"tr",align:null},"\u7528\u4e8e\u63a7\u5236\u81ea\u5b9a\u4e49\u7b5b\u9009\u83dc\u5355\u662f\u5426\u53ef\u89c1"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filtered"),(0,r.kt)("td",{parentName:"tr",align:null},"\u6807\u8bc6\u6570\u636e\u662f\u5426\u7ecf\u8fc7\u8fc7\u6ee4\uff0c\u7b5b\u9009\u56fe\u6807\u4f1a\u9ad8\u4eae"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filteredValue"),(0,r.kt)("td",{parentName:"tr",align:null},"\u7b5b\u9009\u7684\u53d7\u63a7\u5c5e\u6027\uff0c\u5916\u754c\u53ef\u7528\u6b64\u63a7\u5236\u5217\u7684\u7b5b\u9009\u72b6\u6001\uff0c\u503c\u4e3a\u5df2\u7b5b\u9009\u7684 value \u6570\u7ec4"),(0,r.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filterIcon"),(0,r.kt)("td",{parentName:"tr",align:null},"\u81ea\u5b9a\u4e49 filter \u56fe\u6807\u3002"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"(filtered: boolean) => ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filterMultiple"),(0,r.kt)("td",{parentName:"tr",align:null},"\u662f\u5426\u591a\u9009"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filters"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8868\u5934\u7684\u7b5b\u9009\u83dc\u5355\u9879"),(0,r.kt)("td",{parentName:"tr",align:null},"object","[","]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fixed"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5217\u662f\u5426\u56fa\u5b9a\uff0c\u53ef\u9009 ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),"(\u7b49\u6548\u4e8e left) ",(0,r.kt)("inlineCode",{parentName:"td"},"'left'")," ",(0,r.kt)("inlineCode",{parentName:"td"},"'right'")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"key"),(0,r.kt)("td",{parentName:"tr",align:null},"React \u9700\u8981\u7684 key\uff0c\u5982\u679c\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u552f\u4e00\u7684 ",(0,r.kt)("inlineCode",{parentName:"td"},"dataIndex"),"\uff0c\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e2a\u5c5e\u6027"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"render"),(0,r.kt)("td",{parentName:"tr",align:null},"\u751f\u6210\u590d\u6742\u6570\u636e\u7684\u6e32\u67d3\u51fd\u6570\uff0c\u53c2\u6570\u5206\u522b\u4e3a\u5f53\u524d\u884c\u7684\u503c\uff0c\u5f53\u524d\u884c\u6570\u636e\uff0c\u884c\u7d22\u5f15\uff0c@return \u91cc\u9762\u53ef\u4ee5\u8bbe\u7f6e\u8868\u683c",(0,r.kt)("a",{parentName:"td",href:"#components-table-demo-colspan-rowspan"},"\u884c/\u5217\u5408\u5e76")),(0,r.kt)("td",{parentName:"tr",align:null},"Function(text, record, index) {}"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sorter"),(0,r.kt)("td",{parentName:"tr",align:null},"\u6392\u5e8f\u51fd\u6570\uff0c\u672c\u5730\u6392\u5e8f\u4f7f\u7528\u4e00\u4e2a\u51fd\u6570(\u53c2\u8003 ",(0,r.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort"},"Array.sort")," \u7684 compareFunction)\uff0c\u9700\u8981\u670d\u52a1\u7aef\u6392\u5e8f\u53ef\u8bbe\u4e3a true"),(0,r.kt)("td",{parentName:"tr",align:null},"Function"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sortOrder"),(0,r.kt)("td",{parentName:"tr",align:null},"\u6392\u5e8f\u7684\u53d7\u63a7\u5c5e\u6027\uff0c\u5916\u754c\u53ef\u7528\u6b64\u63a7\u5236\u5217\u7684\u6392\u5e8f\uff0c\u53ef\u8bbe\u7f6e\u4e3a ",(0,r.kt)("inlineCode",{parentName:"td"},"'ascend'")," ",(0,r.kt)("inlineCode",{parentName:"td"},"'descend'")," ",(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sortDirections"),(0,r.kt)("td",{parentName:"tr",align:null},"\u652f\u6301\u7684\u6392\u5e8f\u65b9\u5f0f\uff0c\u53d6\u503c\u4e3a ",(0,r.kt)("inlineCode",{parentName:"td"},"'ascend'")," ",(0,r.kt)("inlineCode",{parentName:"td"},"'descend'")),(0,r.kt)("td",{parentName:"tr",align:null},"Array"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"['ascend', 'descend']")),(0,r.kt)("td",{parentName:"tr",align:null},"3.15.2"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"title"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5217\u5934\u663e\u793a\u6587\u5b57\uff08\u51fd\u6570\u7528\u6cd5 ",(0,r.kt)("inlineCode",{parentName:"td"},"3.10.0")," \u540e\u652f\u6301\uff09"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"({ sortOrder, sortColumn, filters }) => ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"width"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5217\u5bbd\u5ea6\uff08",(0,r.kt)("a",{parentName:"td",href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"\u6307\u5b9a\u4e86\u4e5f\u4e0d\u751f\u6548\uff1f"),"\uff09"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onCell"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u5355\u5143\u683c\u5c5e\u6027"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(record, rowIndex)"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onFilter"),(0,r.kt)("td",{parentName:"tr",align:null},"\u672c\u5730\u6a21\u5f0f\u4e0b\uff0c\u786e\u5b9a\u7b5b\u9009\u7684\u8fd0\u884c\u51fd\u6570"),(0,r.kt)("td",{parentName:"tr",align:null},"Function"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onFilterDropdownVisibleChange"),(0,r.kt)("td",{parentName:"tr",align:null},"\u81ea\u5b9a\u4e49\u7b5b\u9009\u83dc\u5355\u53ef\u89c1\u53d8\u5316\u65f6\u8c03\u7528"),(0,r.kt)("td",{parentName:"tr",align:null},"function(visible) {}"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onHeaderCell"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u5934\u90e8\u5355\u5143\u683c\u5c5e\u6027"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(column)"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"columngroup"},"ColumnGroup"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7248\u672c"),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"title"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5217\u5934\u663e\u793a\u6587\u5b57"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"pagination"},"pagination"),(0,r.kt)("p",null,"\u5206\u9875\u7684\u914d\u7f6e\u9879\u3002"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7248\u672c"),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"position"),(0,r.kt)("td",{parentName:"tr",align:null},"\u6307\u5b9a\u5206\u9875\u663e\u793a\u7684\u4f4d\u7f6e"),(0,r.kt)("td",{parentName:"tr",align:null},"'top'"),(0,r.kt)("td",{parentName:"tr",align:null},"'bottom'"),(0,r.kt)("td",{parentName:"tr",align:null},"'both'"),(0,r.kt)("td",{parentName:"tr",align:null},"'bottom'"),(0,r.kt)("td",{parentName:"tr",align:null},"3.3.0")))),(0,r.kt)("p",null,"\u66f4\u591a\u914d\u7f6e\u9879\uff0c\u8bf7\u67e5\u770b ",(0,r.kt)("a",{parentName:"p",href:"/components/pagination/"},(0,r.kt)("inlineCode",{parentName:"a"},"Pagination")),"\u3002"),(0,r.kt)("h3",{id:"rowselection"},"rowSelection"),(0,r.kt)("p",null,"\u9009\u62e9\u529f\u80fd\u7684\u914d\u7f6e\u3002"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7248\u672c"),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"columnWidth"),(0,r.kt)("td",{parentName:"tr",align:null},"\u81ea\u5b9a\u4e49\u5217\u8868\u9009\u62e9\u6846\u5bbd\u5ea6"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"60px")),(0,r.kt)("td",{parentName:"tr",align:null},"3.3.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"columnTitle"),(0,r.kt)("td",{parentName:"tr",align:null},"\u81ea\u5b9a\u4e49\u5217\u8868\u9009\u62e9\u6846\u6807\u9898"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"React.ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.8.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fixed"),(0,r.kt)("td",{parentName:"tr",align:null},"\u628a\u9009\u62e9\u6846\u5217\u56fa\u5b9a\u5728\u5de6\u8fb9"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"getCheckboxProps"),(0,r.kt)("td",{parentName:"tr",align:null},"\u9009\u62e9\u6846\u7684\u9ed8\u8ba4\u5c5e\u6027\u914d\u7f6e"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(record)"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"hideDefaultSelections"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#components-table-demo-row-selection-custom"},"\u81ea\u5b9a\u4e49\u9009\u62e9\u9879"),"\u65f6\u53bb\u6389\u300e\u5168\u9009\u300f\u300e\u53cd\u9009\u300f\u4e24\u4e2a\u9ed8\u8ba4\u9009\u9879"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selectedRowKeys"),(0,r.kt)("td",{parentName:"tr",align:null},"\u6307\u5b9a\u9009\u4e2d\u9879\u7684 key \u6570\u7ec4\uff0c\u9700\u8981\u548c onChange \u8fdb\u884c\u914d\u5408"),(0,r.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,r.kt)("td",{parentName:"tr",align:null},"number","[","]"),(0,r.kt)("td",{parentName:"tr",align:null},"[","]"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"selections"),(0,r.kt)("td",{parentName:"tr",align:null},"\u81ea\u5b9a\u4e49\u9009\u62e9\u9879 ",(0,r.kt)("a",{parentName:"td",href:"#selection"},"\u914d\u7f6e\u9879"),", \u8bbe\u4e3a ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," \u65f6\u4f7f\u7528\u9ed8\u8ba4\u9009\u62e9\u9879"),(0,r.kt)("td",{parentName:"tr",align:null},"object","[","]"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"\u591a\u9009/\u5355\u9009\uff0c",(0,r.kt)("inlineCode",{parentName:"td"},"checkbox")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"radio")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"checkbox")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onChange"),(0,r.kt)("td",{parentName:"tr",align:null},"\u9009\u4e2d\u9879\u53d1\u751f\u53d8\u5316\u65f6\u7684\u56de\u8c03"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(selectedRowKeys, selectedRows)"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onSelect"),(0,r.kt)("td",{parentName:"tr",align:null},"\u7528\u6237\u624b\u52a8\u9009\u62e9/\u53d6\u6d88\u9009\u62e9\u67d0\u884c\u7684\u56de\u8c03"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(record, selected, selectedRows, nativeEvent)"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onSelectAll"),(0,r.kt)("td",{parentName:"tr",align:null},"\u7528\u6237\u624b\u52a8\u9009\u62e9/\u53d6\u6d88\u9009\u62e9\u6240\u6709\u884c\u7684\u56de\u8c03"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(selected, selectedRows, changeRows)"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onSelectInvert"),(0,r.kt)("td",{parentName:"tr",align:null},"\u7528\u6237\u624b\u52a8\u9009\u62e9\u53cd\u9009\u7684\u56de\u8c03"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(selectedRows)"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"scroll"},"scroll"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7248\u672c"),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u6a2a\u5411\u6eda\u52a8\uff0c\u4e5f\u53ef\u7528\u4e8e\u6307\u5b9a\u6eda\u52a8\u533a\u57df\u7684\u5bbd\u548c\u9ad8\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u50cf\u7d20\u503c\uff0c\u767e\u5206\u6bd4\uff0ctrue \u548c ",(0,r.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/width#max-content"},"'max-content'")),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"y"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u7eb5\u5411\u6eda\u52a8\uff0c\u4e5f\u53ef\u7528\u4e8e\u6307\u5b9a\u6eda\u52a8\u533a\u57df\u7684\u5bbd\u548c\u9ad8\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u50cf\u7d20\u503c\uff0c\u767e\u5206\u6bd4\uff0ctrue \u548c ",(0,r.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/width#max-content"},"'max-content'")),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"scrollToFirstRowOnChange"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5f53\u5206\u9875\u3001\u6392\u5e8f\u3001\u7b5b\u9009\u53d8\u5316\u540e\u662f\u5426\u6eda\u52a8\u5230\u8868\u683c\u9876\u90e8"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.24.0"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"selection"},"selection"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7248\u672c"),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"key"),(0,r.kt)("td",{parentName:"tr",align:null},"React \u9700\u8981\u7684 key\uff0c\u5efa\u8bae\u8bbe\u7f6e"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"\u9009\u62e9\u9879\u663e\u793a\u7684\u6587\u5b57"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"React.ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onSelect"),(0,r.kt)("td",{parentName:"tr",align:null},"\u9009\u62e9\u9879\u70b9\u51fb\u56de\u8c03"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(changeableRowKeys)"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"\u5728-typescript-\u4e2d\u4f7f\u7528"},"\u5728 TypeScript \u4e2d\u4f7f\u7528"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Table } from 'antd';\nimport { ColumnProps } from 'antd/es/table';\n\ninterface User {\n  key: number;\n  name: string;\n}\n\nconst columns: ColumnProps<User>[] = [{\n  key: 'name',\n  title: 'Name',\n  dataIndex: 'name',\n}];\n\nconst data: User[] = [{\n  key: 0,\n  name: 'Jack',\n}];\n\nclass UserTable extends Table<User> {}\n<UserTable columns={columns} dataSource={data} />\n\n// \u4f7f\u7528 JSX \u98ce\u683c\u7684 API\nclass NameColumn extends Table.Column<User> {}\n\n<UserTable dataSource={data}>\n  <NameColumn key=\"name\" title=\"Name\" dataIndex=\"name\" />\n</UserTable>\n\n// TypeScript 2.9 \u4e4b\u540e\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5199\n// https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-9.html#generic-type-arguments-in-jsx-elements\n<Table<User> columns={columns} dataSource={data} />\n<Table<User> dataSource={data}>\n  <Table.Column<User> key=\"name\" title=\"Name\" dataIndex=\"name\" />\n</Table>\n")),(0,r.kt)("h2",{id:"\u6ce8\u610f"},"\u6ce8\u610f"),(0,r.kt)("p",null,"\u6309\u7167 ",(0,r.kt)("a",{parentName:"p",href:"https://zh-hans.reactjs.org/docs/lists-and-keys.html#keys"},"React \u7684\u89c4\u8303"),"\uff0c\u6240\u6709\u7684\u6570\u7ec4\u7ec4\u4ef6\u5fc5\u987b\u7ed1\u5b9a ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),"\u3002\u5728 Table \u4e2d\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"dataSource")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"columns")," \u91cc\u7684\u6570\u636e\u503c\u90fd\u9700\u8981\u6307\u5b9a ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," \u503c\u3002\u5bf9\u4e8e ",(0,r.kt)("inlineCode",{parentName:"p"},"dataSource")," \u9ed8\u8ba4\u5c06\u6bcf\u5217\u6570\u636e\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," \u5c5e\u6027\u4f5c\u4e3a\u552f\u4e00\u7684\u6807\u8bc6\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://os.alipayobjects.com/rmsportal/luLdLvhPOiRpyss.png",alt:"\u63a7\u5236\u53f0\u8b66\u544a"})),(0,r.kt)("p",null,"\u5982\u679c ",(0,r.kt)("inlineCode",{parentName:"p"},"dataSource[i].key")," \u6ca1\u6709\u63d0\u4f9b\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"rowKey")," \u6765\u6307\u5b9a ",(0,r.kt)("inlineCode",{parentName:"p"},"dataSource")," \u7684\u4e3b\u952e\uff0c\u5982\u4e0b\u6240\u793a\u3002\u82e5\u6ca1\u6709\u6307\u5b9a\uff0c\u63a7\u5236\u53f0\u4f1a\u51fa\u73b0\u4ee5\u4e0a\u7684\u63d0\u793a\uff0c\u8868\u683c\u7ec4\u4ef6\u4e5f\u4f1a\u51fa\u73b0\u5404\u7c7b\u5947\u602a\u7684\u9519\u8bef\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'// \u6bd4\u5982\u4f60\u7684\u6570\u636e\u4e3b\u952e\u662f uid\nreturn <Table rowKey="uid" />;\n// \u6216\nreturn <Table rowKey={(record) => record.uid} />;\n')))}u.isMDXComponent=!0},30876:(n,e,t)=>{t.d(e,{Zo:()=>m,kt:()=>k});var a=t(2784);function l(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function d(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){l(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,a,l=function(n,e){if(null==n)return{};var t,a,l={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(l[t]=n[t]);return l}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(l[t]=n[t])}return l}var o=a.createContext({}),s=function(n){var e=a.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):d(d({},e),n)),t},m=function(n){var e=s(n.components);return a.createElement(o.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(n,e){var t=n.components,l=n.mdxType,r=n.originalType,o=n.parentName,m=i(n,["components","mdxType","originalType","parentName"]),u=s(t),k=l,c=u["".concat(o,".").concat(k)]||u[k]||p[k]||r;return t?a.createElement(c,d(d({ref:e},m),{},{components:t})):a.createElement(c,d({ref:e},m))}));function k(n,e){var t=arguments,l=e&&e.mdxType;if("string"==typeof n||l){var r=t.length,d=new Array(r);d[0]=u;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=n,i.mdxType="string"==typeof n?n:l,d[1]=i;for(var s=2;s<r;s++)d[s]=t[s];return a.createElement.apply(null,d)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);