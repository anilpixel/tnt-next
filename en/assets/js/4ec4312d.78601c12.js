"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9529],{68448:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>o,contentTitle:()=>s,metadata:()=>m,toc:()=>p,default:()=>u});var a=n(7896),l=n(31461),r=(n(2784),n(30876)),i=["components"],o={tags:["Components"],type:"Feedback",noinstant:!0,title:"Message"},s=void 0,m={unversionedId:"components/feedback/message",id:"components/feedback/message",isDocsHomePage:!1,title:"Message",description:"---",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/feedback/message.md",sourceDirName:"components/feedback",slug:"/components/feedback/message",permalink:"/tnt-next/en/docs/components/feedback/message",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/components/feedback/message.md",tags:[{label:"Components",permalink:"/tnt-next/en/docs/tags/components"}],version:"current",frontMatter:{tags:["Components"],type:"Feedback",noinstant:!0,title:"Message"},sidebar:"componentsSidebar",previous:{title:"Drawer",permalink:"/tnt-next/en/docs/components/feedback/drawer"},next:{title:"Modal",permalink:"/tnt-next/en/docs/components/feedback/modal"}},p=[{value:"When To Use",id:"when-to-use",children:[],level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",children:[{value:"Normal prompt",id:"normal-prompt",children:[],level:3},{value:"Other types of message",id:"other-types-of-message",children:[],level:3},{value:"Customize duration",id:"customize-duration",children:[],level:3},{value:"Message with loading indicator",id:"message-with-loading-indicator",children:[],level:3},{value:"Promise interface",id:"promise-interface",children:[],level:3},{value:"Update Message Content",id:"update-message-content",children:[],level:3}],level:2},{value:"API",id:"api",children:[{value:"Global static methods",id:"global-static-methods",children:[{value:"message.config",id:"messageconfig",children:[],level:4}],level:3}],level:2}],d={toc:p};function u(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Display global messages as feedback in response to user operations."),(0,r.kt)("h2",{id:"when-to-use"},"When To Use"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To provide feedback such as success, warning, error etc."),(0,r.kt)("li",{parentName:"ul"},"A message is displayed at top and center and will be dismissed automatically, as a non-interrupting light-weighted prompt.")),(0,r.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,r.kt)("h3",{id:"normal-prompt"},"Normal prompt"),(0,r.kt)("p",null,"Normal message for information."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const info = () => {\n  message.info('This is a normal message');\n};\n\nReactDOM.render(\n  <Button type=\"primary\" onClick={info}>\n    Display normal message\n  </Button>,\n  mountNode,\n);\n")),(0,r.kt)("h3",{id:"other-types-of-message"},"Other types of message"),(0,r.kt)("p",null,"Messages of success, error and warning types."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const success = () => {\n  message.success('This is a success message');\n};\n\nconst error = () => {\n  message.error('This is an error message');\n};\n\nconst warning = () => {\n  message.warning('This is a warning message');\n};\n\nReactDOM.render(\n  <div>\n    <Button onClick={success}>Success</Button>\n    <Button onClick={error}>Error</Button>\n    <Button onClick={warning}>Warning</Button>\n  </div>,\n  mountNode,\n);\n")),(0,r.kt)("h3",{id:"customize-duration"},"Customize duration"),(0,r.kt)("p",null,"Customize message display duration from default ",(0,r.kt)("inlineCode",{parentName:"p"},"3s")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"10s"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const success = () => {\n  message.success('This is a prompt message for success, and it will disappear in 10 seconds', 10);\n};\n\nReactDOM.render(<Button onClick={success}>Customized display duration</Button>, mountNode);\n")),(0,r.kt)("h3",{id:"message-with-loading-indicator"},"Message with loading indicator"),(0,r.kt)("p",null,"Display a global loading indicator, which is dismissed by itself asynchronously."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const success = () => {\n  const hide = message.loading('Action in progress..', 0);\n  // Dismiss manually and asynchronously\n  setTimeout(hide, 2500);\n};\n\nReactDOM.render(<Button onClick={success}>Display a loading indicator</Button>, mountNode);\n")),(0,r.kt)("h3",{id:"promise-interface"},"Promise interface"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"message")," provides a promise interface for ",(0,r.kt)("inlineCode",{parentName:"p"},"onClose"),". The above example will display a new message when the old message is about to close."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const success = () => {\n  message\n    .loading('Action in progress..', 2.5)\n    .then(() => message.success('Loading finished', 2.5))\n    .then(() => message.info('Loading finished is finished', 2.5));\n};\n\nReactDOM.render(<Button onClick={success}>Display sequential messages</Button>, mountNode);\n")),(0,r.kt)("h3",{id:"update-message-content"},"Update Message Content"),(0,r.kt)("p",null,"Update message content with unique ",(0,r.kt)("inlineCode",{parentName:"p"},"key"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const key = 'updatable';\n\nconst openMessage = () => {\n  message.loading({ content: 'Loading...', key });\n  setTimeout(() => {\n    message.success({ content: 'Loaded!', key, duration: 2 });\n  }, 1000);\n};\n\nReactDOM.render(\n  <Button type=\"primary\" onClick={openMessage}>\n    Open the message box\n  </Button>,\n  mountNode,\n);\n")),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("p",null,"This components provides some static methods, with usage and arguments as following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.success(content, [duration], onClose)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.error(content, [duration], onClose)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.info(content, [duration], onClose)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.warning(content, [duration], onClose)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.warn(content, [duration], onClose)")," // alias of warning"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.loading(content, [duration], onClose)"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"content"),(0,r.kt)("td",{parentName:"tr",align:null},"content of the message"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"config")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"duration"),(0,r.kt)("td",{parentName:"tr",align:null},"time(seconds) before auto-dismiss, don't dismiss if set to 0"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"1.5"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onClose"),(0,r.kt)("td",{parentName:"tr",align:null},"Specify a function that will be called when the message is closed"),(0,r.kt)("td",{parentName:"tr",align:null},"Function"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"afterClose")," can be called in thenable interface:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message[level](content, [duration]).then(afterClose)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message[level](content, [duration], onClose).then(afterClose)"))),(0,r.kt)("p",null,"where ",(0,r.kt)("inlineCode",{parentName:"p"},"level")," refers one static methods of ",(0,r.kt)("inlineCode",{parentName:"p"},"message"),". The result of ",(0,r.kt)("inlineCode",{parentName:"p"},"then")," method will be a Promise."),(0,r.kt)("p",null,"Supports passing parameters wrapped in an object:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.open(config)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.success(config)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.error(config)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.info(config)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.warning(config)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.warn(config)")," // alias of warning"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.loading(config)"))),(0,r.kt)("p",null,"The properties of config are as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"content"),(0,r.kt)("td",{parentName:"tr",align:null},"content of the message"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"duration"),(0,r.kt)("td",{parentName:"tr",align:null},"time(seconds) before auto-dismiss, don't dismiss if set to 0"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onClose"),(0,r.kt)("td",{parentName:"tr",align:null},"Specify a function that will be called when the message is closed"),(0,r.kt)("td",{parentName:"tr",align:null},"function"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"icon"),(0,r.kt)("td",{parentName:"tr",align:null},"Customized Icon"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.9.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"key"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier of the Message"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"-")))),(0,r.kt)("h3",{id:"global-static-methods"},"Global static methods"),(0,r.kt)("p",null,"Methods for global configuration and destruction are also provided:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.config(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"message.destroy()"))),(0,r.kt)("h4",{id:"messageconfig"},"message.config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"message.config({\n  top: 100,\n  duration: 2,\n  maxCount: 3,\n});\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"duration"),(0,r.kt)("td",{parentName:"tr",align:null},"time before auto-dismiss, in seconds"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"1.5"),(0,r.kt)("td",{parentName:"tr",align:null},"3.9.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"getContainer"),(0,r.kt)("td",{parentName:"tr",align:null},"Return the mount node for Message"),(0,r.kt)("td",{parentName:"tr",align:null},"() => HTMLElement"),(0,r.kt)("td",{parentName:"tr",align:null},"() => document.body"),(0,r.kt)("td",{parentName:"tr",align:null},"3.9.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"maxCount"),(0,r.kt)("td",{parentName:"tr",align:null},"max message show, drop oldest if exceed limit"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.9.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"top"),(0,r.kt)("td",{parentName:"tr",align:null},"distance from top"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"24"),(0,r.kt)("td",{parentName:"tr",align:null},"3.9.0")))))}u.isMDXComponent=!0},30876:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var a=n(2784);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=m(n),c=l,g=u["".concat(s,".").concat(c)]||u[c]||d[c]||r;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var m=2;m<r;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);