"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5717],{24037:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>i,contentTitle:()=>c,metadata:()=>p,toc:()=>d,default:()=>u});var a=t(7896),o=t(31461),r=(t(2784),t(30876)),l=["components"],i={tags:["Components"],type:"Other",cols:1,title:"ConfigProvider"},c=void 0,p={unversionedId:"components/other/config-provider",id:"components/other/config-provider",isDocsHomePage:!1,title:"ConfigProvider",description:"---",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/other/config-provider.md",sourceDirName:"components/other",slug:"/components/other/config-provider",permalink:"/tnt-next/en/docs/components/other/config-provider",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/components/other/config-provider.md",tags:[{label:"Components",permalink:"/tnt-next/en/docs/tags/components"}],version:"current",frontMatter:{tags:["Components"],type:"Other",cols:1,title:"ConfigProvider"},sidebar:"componentsSidebar",previous:{title:"BackTop",permalink:"/tnt-next/en/docs/components/other/back-top"},next:{title:"Divider",permalink:"/tnt-next/en/docs/components/other/divider"}},d=[{value:"Usage",id:"usage",children:[{value:"Content Security Policy",id:"content-security-policy",children:[],level:3}],level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",children:[{value:"Locale",id:"locale",children:[],level:3}],level:2},{value:"API",id:"api",children:[],level:2},{value:"FAQ",id:"faq",children:[{value:"Does the locale problem still exist in DatePicker even if ConfigProvider <code>locale</code> is used?",id:"does-the-locale-problem-still-exist-in-datepicker-even-if-configprovider-locale-is-used",children:[],level:4},{value:"Modal throw error when setting <code>getPopupContainer</code>?",id:"modal-throw-error-when-setting-getpopupcontainer",children:[],level:4}],level:2}],s={toc:d};function u(e){var n=e.components,t=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ConfigProvider")," provides a uniform configuration support for components."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"This component provides a configuration to all React components underneath itself via the ",(0,r.kt)("a",{parentName:"p",href:"https://facebook.github.io/react/docs/context.html"},"context API"),". In the render tree all components will have access to the provided config."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { ConfigProvider } from 'antd';\n\n// ...\n\nreturn (\n  <ConfigProvider {...yourConfig}>\n    <App />\n  </ConfigProvider>\n);\n")),(0,r.kt)("h3",{id:"content-security-policy"},"Content Security Policy"),(0,r.kt)("p",null,"Some components use dynamic style to support wave effect. You can config ",(0,r.kt)("inlineCode",{parentName:"p"},"csp")," prop if Content Security Policy (CSP) is enabled:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"<ConfigProvider csp={{ nonce: 'YourNonceCode' }}>\n  <Button>My Button</Button>\n</ConfigProvider>\n")),(0,r.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,r.kt)("h3",{id:"locale"},"Locale"),(0,r.kt)("p",null,"Components which need localization support are listed here, you can toggle the language in the demo."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst columns = [\n  {\n    title: \'Name\',\n    dataIndex: \'name\',\n    filters: [\n      {\n        text: \'filter1\',\n        value: \'filter1\',\n      },\n    ],\n  },\n  {\n    title: \'Age\',\n    dataIndex: \'age\',\n  },\n];\n\nclass Page extends React.Component {\n  state = {\n    visible: false,\n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  hideModal = () => {\n    this.setState({ visible: false });\n  };\n\n  render() {\n    const info = () => {\n      Modal.info({\n        title: \'some info\',\n        content: \'some info\',\n      });\n    };\n    const confirm = () => {\n      Modal.confirm({\n        title: \'some info\',\n        content: \'some info\',\n      });\n    };\n    return (\n      <div className="locale-components">\n        <div className="example">\n          <Pagination defaultCurrent={1} total={50} showSizeChanger />\n        </div>\n        <div className="example">\n          <Select showSearch style={{ width: 200 }}>\n            <Option value="jack">jack</Option>\n            <Option value="lucy">lucy</Option>\n          </Select>\n          <DatePicker />\n          <TimePicker />\n          <RangePicker style={{ width: 200 }} />\n        </div>\n        <div className="example">\n          <Button type="primary" onClick={this.showModal}>\n            Show Modal\n          </Button>\n          <Button onClick={info}>Show info</Button>\n          <Button onClick={confirm}>Show confirm</Button>\n          <Popconfirm title="Question?">\n            <a href="#">Click to confirm</a>\n          </Popconfirm>\n        </div>\n        <div className="example">\n          <Transfer dataSource={[]} showSearch targetKeys={[]} render={item => item.title} />\n        </div>\n        <div style={{ width: 319, border: \'1px solid #d9d9d9\', borderRadius: 4 }}>\n          <Calendar fullscreen={false} value={moment()} />\n        </div>\n        <div className="example">\n          <Table dataSource={[]} columns={columns} />\n        </div>\n        <Modal title="Locale Modal" visible={this.state.visible} onCancel={this.hideModal}>\n          <p>Locale Modal</p>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      locale: enUS,\n    };\n  }\n\n  changeLocale = e => {\n    const localeValue = e.target.value;\n    this.setState({ locale: localeValue });\n    if (!localeValue) {\n      moment.locale(\'en\');\n    } else {\n      moment.locale(\'zh-cn\');\n    }\n  };\n\n  render() {\n    const { locale } = this.state;\n    return (\n      <div>\n        <div className="change-locale">\n          <span style={{ marginRight: 16 }}>Change locale of components: </span>\n          <Radio.Group value={locale} onChange={this.changeLocale}>\n            <Radio.Button key="en" value={enUS}>\n              English\n            </Radio.Button>\n            <Radio.Button key="cn" value={zhCN}>\n              \u4e2d\u6587\n            </Radio.Button>\n          </Radio.Group>\n        </div>\n        <ConfigProvider locale={locale}>\n          <Page\n            key={locale ? locale.locale : \'en\' /* Have to refresh for production environment */}\n          />\n        </ConfigProvider>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n')),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"autoInsertSpaceInButton"),(0,r.kt)("td",{parentName:"tr",align:null},"Set ",(0,r.kt)("inlineCode",{parentName:"td"},"false")," to remove space between 2 chinese characters on Button"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"3.13.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"csp"),(0,r.kt)("td",{parentName:"tr",align:null},"Set ",(0,r.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"},"Content Security Policy")," config"),(0,r.kt)("td",{parentName:"tr",align:null},"{ nonce: string }"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.13.1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"renderEmpty"),(0,r.kt)("td",{parentName:"tr",align:null},"set empty content of components. Ref ",(0,r.kt)("a",{parentName:"td",href:"/components/empty/"},"Empty")),(0,r.kt)("td",{parentName:"tr",align:null},"Function(componentName: string): ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.12.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"getPopupContainer"),(0,r.kt)("td",{parentName:"tr",align:null},"to set the container of the popup element. The default is to create a ",(0,r.kt)("inlineCode",{parentName:"td"},"div")," element in ",(0,r.kt)("inlineCode",{parentName:"td"},"body"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"Function(triggerNode)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"() => document.body")),(0,r.kt)("td",{parentName:"tr",align:null},"3.11.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"locale"),(0,r.kt)("td",{parentName:"tr",align:null},"language package setting, you can find the packages in ",(0,r.kt)("a",{parentName:"td",href:"http://unpkg.com/antd/es/locale/"},"antd/es/locale")),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"3.21.0"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"prefixCls"),(0,r.kt)("td",{parentName:"tr",align:null},"set prefix class"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ant"),(0,r.kt)("td",{parentName:"tr",align:null},"3.12.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pageHeader"),(0,r.kt)("td",{parentName:"tr",align:null},"Unify the ghost of pageHeader ,Ref ","[","pageHeader]","(","<(/components/page-header)>"),(0,r.kt)("td",{parentName:"tr",align:null},"{ ghost:boolean }"),(0,r.kt)("td",{parentName:"tr",align:null},"'true'"),(0,r.kt)("td",{parentName:"tr",align:null},"3.24.0")))),(0,r.kt)("h2",{id:"faq"},"FAQ"),(0,r.kt)("h4",{id:"does-the-locale-problem-still-exist-in-datepicker-even-if-configprovider-locale-is-used"},"Does the locale problem still exist in DatePicker even if ConfigProvider ",(0,r.kt)("inlineCode",{parentName:"h4"},"locale")," is used?"),(0,r.kt)("p",null,"Please make sure you set moment locale by ",(0,r.kt)("inlineCode",{parentName:"p"},"moment.locale('zh-cn')")," or that you don't have two different versions of moment."),(0,r.kt)("h4",{id:"modal-throw-error-when-setting-getpopupcontainer"},"Modal throw error when setting ",(0,r.kt)("inlineCode",{parentName:"h4"},"getPopupContainer"),"?"),(0,r.kt)("p",null,"Related issue: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ant-design/ant-design/issues/19974"},"https://github.com/ant-design/ant-design/issues/19974")),(0,r.kt)("p",null,"When you config ",(0,r.kt)("inlineCode",{parentName:"p"},"getPopupContainer")," to parentNode globally, Modal will throw error of ",(0,r.kt)("inlineCode",{parentName:"p"},"triggerNode is undefined")," because it did not have a triggerNode. You can try the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/afc163/feedback-antd/commit/3e4d1ad1bc1a38460dc3bf3c56517f737fe7d44a"},"fix")," below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"}," <ConfigProvider\n-  getPopupContainer={triggerNode => triggerNode.parentNode}\n+  getPopupContainer={node => {\n+    if (node) {\n+      return node.parentNode;\n+    }\n+    return document.body;\n+  }}\n >\n   <App />\n </ConfigProvider>\n")))}u.isMDXComponent=!0},30876:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var a=t(2784);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=a.createContext({}),p=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(t),m=o,g=u["".concat(c,".").concat(m)]||u[m]||s[m]||r;return t?a.createElement(g,l(l({ref:n},d),{},{components:t})):a.createElement(g,l({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);