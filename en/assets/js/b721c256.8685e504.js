"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3914],{18746:(t,e,n)=>{n.r(e),n.d(e,{frontMatter:()=>o,contentTitle:()=>s,metadata:()=>d,toc:()=>p,default:()=>u});var a=n(7896),r=n(31461),l=(n(2784),n(30876)),i=["components"],o={tags:["Components"],type:"Data Display",title:"Avatar"},s=void 0,d={unversionedId:"components/data-display/avatar",id:"components/data-display/avatar",isDocsHomePage:!1,title:"Avatar",description:"---",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/data-display/avatar.md",sourceDirName:"components/data-display",slug:"/components/data-display/avatar",permalink:"/tnt-next/en/docs/components/data-display/avatar",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/components/data-display/avatar.md",tags:[{label:"Components",permalink:"/tnt-next/en/docs/tags/components"}],version:"current",frontMatter:{tags:["Components"],type:"Data Display",title:"Avatar"},sidebar:"componentsSidebar",previous:{title:"Upload",permalink:"/tnt-next/en/docs/components/data-entry/upload"},next:{title:"Badge",permalink:"/tnt-next/en/docs/components/data-display/badge"}},p=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",children:[{value:"Basic",id:"basic",children:[],level:3},{value:"Type",id:"type",children:[],level:3},{value:"Autoset Font Size",id:"autoset-font-size",children:[],level:3},{value:"With Badge",id:"with-badge",children:[],level:3}],level:2},{value:"API",id:"api",children:[],level:2}],c={toc:p};function u(t){var e=t.components,n=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Avatars can be used to represent people or objects. It supports images, ",(0,l.kt)("inlineCode",{parentName:"p"},"Icon"),"s, or letters."),(0,l.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,l.kt)("h3",{id:"basic"},"Basic"),(0,l.kt)("p",null,"Three sizes and two shapes are available."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'ReactDOM.render(\n  <div>\n    <div>\n      <Avatar size={64} icon="user" />\n      <Avatar size="large" icon="user" />\n      <Avatar icon="user" />\n      <Avatar size="small" icon="user" />\n    </div>\n    <div>\n      <Avatar shape="square" size={64} icon="user" />\n      <Avatar shape="square" size="large" icon="user" />\n      <Avatar shape="square" icon="user" />\n      <Avatar shape="square" size="small" icon="user" />\n    </div>\n  </div>,\n  mountNode,\n);\n')),(0,l.kt)("h3",{id:"type"},"Type"),(0,l.kt)("p",null,"Image, Icon and letter are supported, and the latter two kinds of avatar can have custom colors and background colors."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'ReactDOM.render(\n  <div>\n    <Avatar icon="user" />\n    <Avatar icon={<Icon type="user" />} />\n    <Avatar>U</Avatar>\n    <Avatar>USER</Avatar>\n    <Avatar src="https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png" />\n    <Avatar style={{ color: \'#f56a00\', backgroundColor: \'#fde3cf\' }}>U</Avatar>\n    <Avatar style={{ backgroundColor: \'#87d068\' }} icon="user" />\n  </div>,\n  mountNode,\n);\n')),(0,l.kt)("h3",{id:"autoset-font-size"},"Autoset Font Size"),(0,l.kt)("p",null,"For letter type Avatar, when the letters are too long to display, the font size can be automatically adjusted according to the width of the Avatar."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const UserList = ['U', 'Lucy', 'Tom', 'Edward'];\nconst colorList = ['#f56a00', '#7265e6', '#ffbf00', '#00a2ae'];\n\nclass Autoset extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: UserList[0],\n      color: colorList[0],\n    };\n  }\n\n  changeUser = () => {\n    const index = UserList.indexOf(this.state.user);\n    this.setState({\n      user: index < UserList.length - 1 ? UserList[index + 1] : UserList[0],\n      color: index < colorList.length - 1 ? colorList[index + 1] : colorList[0],\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Avatar style={{ backgroundColor: this.state.color, verticalAlign: 'middle' }} size=\"large\">\n          {this.state.user}\n        </Avatar>\n        <Button\n          size=\"small\"\n          style={{ marginLeft: 16, verticalAlign: 'middle' }}\n          onClick={this.changeUser}\n        >\n          Change\n        </Button>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Autoset />, mountNode);\n")),(0,l.kt)("h3",{id:"with-badge"},"With Badge"),(0,l.kt)("p",null,"Usually used for reminders and notifications."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'ReactDOM.render(\n  <div>\n    <span style={{ marginRight: 24 }}>\n      <Badge count={1}>\n        <Avatar shape="square" icon="user" />\n      </Badge>\n    </span>\n    <span>\n      <Badge dot>\n        <Avatar shape="square" icon="user" />\n      </Badge>\n    </span>\n  </div>,\n  mountNode,\n);\n')),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Version"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"icon"),(0,l.kt)("td",{parentName:"tr",align:null},"the ",(0,l.kt)("inlineCode",{parentName:"td"},"Icon")," type for an icon avatar, see ",(0,l.kt)("inlineCode",{parentName:"td"},"Icon")," Component or use ReactNode"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"shape"),(0,l.kt)("td",{parentName:"tr",align:null},"the shape of avatar"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"circle")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"square")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"circle"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},"the size of the avatar"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"string: ",(0,l.kt)("inlineCode",{parentName:"td"},"large")," ",(0,l.kt)("inlineCode",{parentName:"td"},"small")," ",(0,l.kt)("inlineCode",{parentName:"td"},"default")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"default"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"src"),(0,l.kt)("td",{parentName:"tr",align:null},"the address of the image for an image avatar"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"srcSet"),(0,l.kt)("td",{parentName:"tr",align:null},"a list of sources to use for different screen resolutions"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.11.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"alt"),(0,l.kt)("td",{parentName:"tr",align:null},"This attribute defines the alternative text describing the image"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.7.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onError"),(0,l.kt)("td",{parentName:"tr",align:null},"handler when img load error, return false to prevent default fallback behavior"),(0,l.kt)("td",{parentName:"tr",align:null},"() => boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.8.0")))))}u.isMDXComponent=!0},30876:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var a=n(2784);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),d=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=d(t.components);return a.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),u=d(n),m=r,g=u["".concat(s,".").concat(m)]||u[m]||c[m]||l;return n?a.createElement(g,i(i({ref:e},p),{},{components:n})):a.createElement(g,i({ref:e},p))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);