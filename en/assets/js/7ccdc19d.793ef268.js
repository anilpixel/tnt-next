"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3400],{77211:(t,e,n)=>{n.r(e),n.d(e,{frontMatter:()=>d,contentTitle:()=>o,metadata:()=>c,toc:()=>p,default:()=>u});var a=n(7896),l=n(31461),r=(n(2784),n(30876)),i=["components"],d={tags:["Components"],type:"Data Entry",title:"Switch"},o=void 0,c={unversionedId:"components/data-entry/switch",id:"components/data-entry/switch",isDocsHomePage:!1,title:"Switch",description:"---",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/data-entry/switch.md",sourceDirName:"components/data-entry",slug:"/components/data-entry/switch",permalink:"/tnt-next/en/docs/components/data-entry/switch",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/components/data-entry/switch.md",tags:[{label:"Components",permalink:"/tnt-next/en/docs/tags/components"}],version:"current",frontMatter:{tags:["Components"],type:"Data Entry",title:"Switch"},sidebar:"componentsSidebar",previous:{title:"Slider",permalink:"/tnt-next/en/docs/components/data-entry/slider"},next:{title:"TimePicker",permalink:"/tnt-next/en/docs/components/data-entry/time-picker"}},p=[{value:"When To Use",id:"when-to-use",children:[],level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",children:[{value:"Basic",id:"basic",children:[],level:3},{value:"Disabled",id:"disabled",children:[],level:3},{value:"Text &amp; icon",id:"text--icon",children:[],level:3},{value:"Two sizes",id:"two-sizes",children:[],level:3},{value:"Loading",id:"loading",children:[],level:3}],level:2},{value:"API",id:"api",children:[],level:2},{value:"Methods",id:"methods",children:[],level:2}],s={toc:p};function u(t){var e=t.components,n=(0,l.Z)(t,i);return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Switching Selector."),(0,r.kt)("h2",{id:"when-to-use"},"When To Use"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you need to represent the switching between two states or on-off state."),(0,r.kt)("li",{parentName:"ul"},"The difference between ",(0,r.kt)("inlineCode",{parentName:"li"},"Switch")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Checkbox")," is that ",(0,r.kt)("inlineCode",{parentName:"li"},"Switch")," will trigger a state change directly when you toggle it, while ",(0,r.kt)("inlineCode",{parentName:"li"},"Checkbox")," is generally used for state marking, which should work in conjunction with submit operation.")),(0,r.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,r.kt)("h3",{id:"basic"},"Basic"),(0,r.kt)("p",null,"The most basic usage."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function onChange(checked) {\n  console.log(`switch to ${checked}`);\n}\n\nReactDOM.render(<Switch defaultChecked onChange={onChange} />, mountNode);\n")),(0,r.kt)("h3",{id:"disabled"},"Disabled"),(0,r.kt)("p",null,"Disabled state of ",(0,r.kt)("inlineCode",{parentName:"p"},"Switch"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'class App extends React.Component {\n  state = {\n    disabled: true,\n  };\n\n  toggle = () => {\n    this.setState({\n      disabled: !this.state.disabled,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Switch disabled={this.state.disabled} defaultChecked />\n        <br />\n        <Button type="primary" onClick={this.toggle}>\n          Toggle disabled\n        </Button>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n')),(0,r.kt)("h3",{id:"text--icon"},"Text & icon"),(0,r.kt)("p",null,"With text and icon."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'ReactDOM.render(\n  <div>\n    <Switch checkedChildren="\u5f00" unCheckedChildren="\u5173" defaultChecked />\n    <br />\n    <Switch checkedChildren="1" unCheckedChildren="0" />\n    <br />\n    <Switch\n      checkedChildren={<Icon type="check" />}\n      unCheckedChildren={<Icon type="close" />}\n      defaultChecked\n    />\n  </div>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"two-sizes"},"Two sizes"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'size="small"')," represents a small sized switch."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'ReactDOM.render(\n  <div>\n    <Switch defaultChecked />\n    <br />\n    <Switch size="small" defaultChecked />\n  </div>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"loading"},"Loading"),(0,r.kt)("p",null,"Mark a pending state of switch."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'ReactDOM.render(\n  <div>\n    <Switch loading defaultChecked />\n    <br />\n    <Switch size="small" loading />\n  </div>,\n  mountNode,\n);\n')),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"autoFocus"),(0,r.kt)("td",{parentName:"tr",align:null},"get focus when component mounted"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"checked"),(0,r.kt)("td",{parentName:"tr",align:null},"determine whether the ",(0,r.kt)("inlineCode",{parentName:"td"},"Switch")," is checked"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"checkedChildren"),(0,r.kt)("td",{parentName:"tr",align:null},"content to be shown when the state is checked"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"defaultChecked"),(0,r.kt)("td",{parentName:"tr",align:null},"to set the initial state"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"disabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Disable switch"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"loading"),(0,r.kt)("td",{parentName:"tr",align:null},"loading state of switch"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"size"),(0,r.kt)("td",{parentName:"tr",align:null},"the size of the ",(0,r.kt)("inlineCode",{parentName:"td"},"Switch"),", options: ",(0,r.kt)("inlineCode",{parentName:"td"},"default")," ",(0,r.kt)("inlineCode",{parentName:"td"},"small")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"default"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"unCheckedChildren"),(0,r.kt)("td",{parentName:"tr",align:null},"content to be shown when the state is unchecked"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onChange"),(0,r.kt)("td",{parentName:"tr",align:null},"trigger when the checked state is changing"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(checked: boolean, event: Event)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onClick"),(0,r.kt)("td",{parentName:"tr",align:null},"trigger when clicked"),(0,r.kt)("td",{parentName:"tr",align:null},"Function(checked: boolean, event: Event)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"3.13.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"className"),(0,r.kt)("td",{parentName:"tr",align:null},"additional class to Switch"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.10.1")))),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"blur()"),(0,r.kt)("td",{parentName:"tr",align:null},"remove focus"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"focus()"),(0,r.kt)("td",{parentName:"tr",align:null},"get focus"),(0,r.kt)("td",{parentName:"tr",align:null})))))}u.isMDXComponent=!0},30876:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var a=n(2784);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function d(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var o=a.createContext({}),c=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=c(t.components);return a.createElement(o.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,o=t.parentName,p=d(t,["components","mdxType","originalType","parentName"]),u=c(n),m=l,k=u["".concat(o,".").concat(m)]||u[m]||s[m]||r;return n?a.createElement(k,i(i({ref:e},p),{},{components:n})):a.createElement(k,i({ref:e},p))}));function m(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,i=new Array(r);i[0]=u;var d={};for(var o in e)hasOwnProperty.call(e,o)&&(d[o]=e[o]);d.originalType=t,d.mdxType="string"==typeof t?t:l,i[1]=d;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);