"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3613],{59347:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>o,contentTitle:()=>d,metadata:()=>p,toc:()=>s,default:()=>u});var a=t(7896),i=t(31461),r=(t(2784),t(30876)),l=["components"],o={tags:["Components"],type:"Feedback",title:"Spin"},d=void 0,p={unversionedId:"components/feedback/spin",id:"components/feedback/spin",isDocsHomePage:!1,title:"Spin",description:"---",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/feedback/spin.md",sourceDirName:"components/feedback",slug:"/components/feedback/spin",permalink:"/tnt-next/en/docs/components/feedback/spin",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/components/feedback/spin.md",tags:[{label:"Components",permalink:"/tnt-next/en/docs/tags/components"}],version:"current",frontMatter:{tags:["Components"],type:"Feedback",title:"Spin"},sidebar:"componentsSidebar",previous:{title:"Skeleton",permalink:"/tnt-next/en/docs/components/feedback/skeleton"},next:{title:"Anchor",permalink:"/tnt-next/en/docs/components/other/anchor"}},s=[{value:"When To Use",id:"when-to-use",children:[],level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",children:[{value:"basic Usage",id:"basic-usage",children:[],level:3},{value:"Size",id:"size",children:[],level:3},{value:"Inside a container",id:"inside-a-container",children:[],level:3},{value:"Embedded mode",id:"embedded-mode",children:[],level:3},{value:"Customized description",id:"customized-description",children:[],level:3},{value:"delay",id:"delay",children:[],level:3},{value:"Custom spinning indicator",id:"custom-spinning-indicator",children:[],level:3}],level:2},{value:"API",id:"api",children:[{value:"Static Method",id:"static-method",children:[],level:3}],level:2}],c={toc:s};function u(e){var n=e.components,t=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("p",null,"A spinner for displaying loading state of a page or a section."),(0,r.kt)("h2",{id:"when-to-use"},"When To Use"),(0,r.kt)("p",null,"When part of the page is waiting for asynchronous data or during a rendering process, an appropriate loading animation can effectively alleviate users' inquietude."),(0,r.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,r.kt)("h3",{id:"basic-usage"},"basic Usage"),(0,r.kt)("p",null,"A simple loading status."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"ReactDOM.render(<Spin />, mountNode);\n")),(0,r.kt)("h3",{id:"size"},"Size"),(0,r.kt)("p",null,"A small ",(0,r.kt)("inlineCode",{parentName:"p"},"Spin")," is used for loading text, default sized ",(0,r.kt)("inlineCode",{parentName:"p"},"Spin")," for loading a card-level block, and large ",(0,r.kt)("inlineCode",{parentName:"p"},"Spin")," used for loading a ","*","*","page","*","*","."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'ReactDOM.render(\n  <div>\n    <Spin size="small" />\n    <Spin />\n    <Spin size="large" />\n  </div>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"inside-a-container"},"Inside a container"),(0,r.kt)("p",null,"Spin in a container."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},".example {\n  text-align: center;\n  background: rgba(0, 0, 0, 0.05);\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding: 30px 50px;\n  margin: 20px 0;\n}\n")),(0,r.kt)("h3",{id:"embedded-mode"},"Embedded mode"),(0,r.kt)("p",null,"Embedding content into ",(0,r.kt)("inlineCode",{parentName:"p"},"Spin")," will set it into loading state."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'class Card extends React.Component {\n  state = { loading: false };\n\n  toggle = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <Spin spinning={this.state.loading}>\n          <Alert\n            message="Alert message title"\n            description="Further details about the context of this alert."\n            type="info"\n          />\n        </Spin>\n        <div style={{ marginTop: 16 }}>\n          Loading state\uff1a\n          <Switch checked={this.state.loading} onChange={this.toggle} />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Card />, mountNode);\n')),(0,r.kt)("h3",{id:"customized-description"},"Customized description"),(0,r.kt)("p",null,"Customized description content."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'ReactDOM.render(\n  <Spin tip="Loading...">\n    <Alert\n      message="Alert message title"\n      description="Further details about the context of this alert."\n      type="info"\n    />\n  </Spin>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"delay"},"delay"),(0,r.kt)("p",null,"Specifies a delay for loading state. If ",(0,r.kt)("inlineCode",{parentName:"p"},"spinning")," ends during delay, loading status won't appear."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'class Card extends React.Component {\n  state = { loading: false };\n\n  toggle = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const container = (\n      <Alert\n        message="Alert message title"\n        description="Further details about the context of this alert."\n        type="info"\n      />\n    );\n    return (\n      <div>\n        <Spin spinning={this.state.loading} delay={500}>\n          {container}\n        </Spin>\n        <div style={{ marginTop: 16 }}>\n          Loading state\uff1a\n          <Switch checked={this.state.loading} onChange={this.toggle} />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Card />, mountNode);\n')),(0,r.kt)("h3",{id:"custom-spinning-indicator"},"Custom spinning indicator"),(0,r.kt)("p",null,"Use custom loading indicator."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const antIcon = <Icon type="loading" style={{ fontSize: 24 }} spin />;\n\nReactDOM.render(<Spin indicator={antIcon} />, mountNode);\n')),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"delay"),(0,r.kt)("td",{parentName:"tr",align:null},"specifies a delay in milliseconds for loading state (prevent flush)"),(0,r.kt)("td",{parentName:"tr",align:null},"number (milliseconds)"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"indicator"),(0,r.kt)("td",{parentName:"tr",align:null},"React node of the spinning indicator"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"size"),(0,r.kt)("td",{parentName:"tr",align:null},"size of Spin, options: ",(0,r.kt)("inlineCode",{parentName:"td"},"small"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"default")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"large")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"default")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"spinning"),(0,r.kt)("td",{parentName:"tr",align:null},"whether Spin is spinning"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tip"),(0,r.kt)("td",{parentName:"tr",align:null},"customize description content when Spin has children"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"wrapperClassName"),(0,r.kt)("td",{parentName:"tr",align:null},"className of wrapper when Spin has children"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"static-method"},"Static Method"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Spin.setDefaultIndicator(indicator: ReactNode)")),(0,r.kt)("p",{parentName:"li"},"You can define default spin element globally."))))}u.isMDXComponent=!0},30876:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var a=t(2784);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=a.createContext({}),p=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(d.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(t),m=i,g=u["".concat(d,".").concat(m)]||u[m]||c[m]||r;return t?a.createElement(g,l(l({ref:n},s),{},{components:t})):a.createElement(g,l({ref:n},s))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,l=new Array(r);l[0]=u;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);