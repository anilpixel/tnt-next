"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4753],{12681:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>i,contentTitle:()=>u,metadata:()=>m,toc:()=>d,default:()=>c});var a=t(7896),r=t(31461),l=(t(2784),t(30876)),o=["components"],i={tags:["Components"],type:"Navigation",title:"Dropdown"},u=void 0,m={unversionedId:"components/navigation/dropdown",id:"components/navigation/dropdown",isDocsHomePage:!1,title:"Dropdown",description:"---",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/navigation/dropdown.md",sourceDirName:"components/navigation",slug:"/components/navigation/dropdown",permalink:"/tnt-next/en/docs/components/navigation/dropdown",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/components/navigation/dropdown.md",tags:[{label:"Components",permalink:"/tnt-next/en/docs/tags/components"}],version:"current",frontMatter:{tags:["Components"],type:"Navigation",title:"Dropdown"},sidebar:"componentsSidebar",previous:{title:"Breadcrumb",permalink:"/tnt-next/en/docs/components/navigation/breadcrumb"},next:{title:"Menu",permalink:"/tnt-next/en/docs/components/navigation/menu"}},d=[{value:"When To Use",id:"when-to-use",children:[],level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",children:[{value:"Basic",id:"basic",children:[],level:3},{value:"Placement",id:"placement",children:[],level:3},{value:"Other elements",id:"other-elements",children:[],level:3},{value:"Trigger mode",id:"trigger-mode",children:[],level:3},{value:"Click event",id:"click-event",children:[],level:3},{value:"Button with dropdown menu",id:"button-with-dropdown-menu",children:[],level:3},{value:"Cascading menu",id:"cascading-menu",children:[],level:3},{value:"The way of hiding menu.",id:"the-way-of-hiding-menu",children:[],level:3},{value:"Context Menu",id:"context-menu",children:[],level:3},{value:"Menu full styles",id:"menu-full-styles",children:[],level:3}],level:2},{value:"API",id:"api",children:[{value:"Dropdown",id:"dropdown",children:[],level:3},{value:"Dropdown.Button",id:"dropdownbutton",children:[],level:3}],level:2}],p={toc:d};function c(e){var n=e.components,t=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("hr",null),(0,l.kt)("p",null,"A dropdown list."),(0,l.kt)("h2",{id:"when-to-use"},"When To Use"),(0,l.kt)("p",null,"When there are more than a few options to choose from, you can wrap them in a ",(0,l.kt)("inlineCode",{parentName:"p"},"Dropdown"),". By hovering or clicking on the trigger, a dropdown menu will appear, which allows you to choose an option and execute the relevant action."),(0,l.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,l.kt)("h3",{id:"basic"},"Basic"),(0,l.kt)("p",null,"The most basic dropdown menu."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const menu = (\n  <Menu>\n    <Menu.Item>\n      <a target="_blank" rel="noopener noreferrer" href="http://www.alipay.com/">\n        1st menu item\n      </a>\n    </Menu.Item>\n    <Menu.Item>\n      <a target="_blank" rel="noopener noreferrer" href="http://www.taobao.com/">\n        2nd menu item\n      </a>\n    </Menu.Item>\n    <Menu.Item>\n      <a target="_blank" rel="noopener noreferrer" href="http://www.tmall.com/">\n        3rd menu item\n      </a>\n    </Menu.Item>\n  </Menu>\n);\n\nReactDOM.render(\n  <Dropdown overlay={menu}>\n    <a className="ant-dropdown-link" onClick={e => e.preventDefault()}>\n      Hover me <Icon type="down" />\n    </a>\n  </Dropdown>,\n  mountNode,\n);\n')),(0,l.kt)("h3",{id:"placement"},"Placement"),(0,l.kt)("p",null,"Support 6 placements."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const menu = (\n  <Menu>\n     <Menu.Item>\n     <a target="_blank" rel="noopener noreferrer" href="http://www.alipay.com/">\n     1st menu item\n     </a>\n     </Menu.Item>\n     <Menu.Item>\n     <a target="_blank" rel="noopener noreferrer" href="http://www.taobao.com/">\n     2nd menu item\n     </a>\n     </Menu.Item>\n     <Menu.Item>\n     <a target="_blank" rel="noopener noreferrer" href="http://www.tmall.com/">\n     3rd menu item\n     </a>\n     </Menu.Item>\n     </Menu>\n);\n\nReactDOM.render(\n  <div>\n    <Dropdown overlay={menu} placement="bottomLeft">\n      <Button>bottomLeft</Button>\n    </Dropdown>\n    <Dropdown overlay={menu} placement="bottomCenter">\n      <Button>bottomCenter</Button>\n    </Dropdown>\n    <Dropdown overlay={menu} placement="bottomRight">\n      <Button>bottomRight</Button>\n    </Dropdown>\n    <br />\n    <Dropdown overlay={menu} placement="topLeft">\n      <Button>topLeft</Button>\n    </Dropdown>\n    <Dropdown overlay={menu} placement="topCenter">\n      <Button>topCenter</Button>\n    </Dropdown>\n    <Dropdown overlay={menu} placement="topRight">\n      <Button>topRight</Button>\n    </Dropdown>\n  </div>,\n  mountNode,\n);\n')),(0,l.kt)("h3",{id:"other-elements"},"Other elements"),(0,l.kt)("p",null,"Divider and disabled menu item."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const menu = (\n  <Menu>\n    <Menu.Item key="0">\n      <a target="_blank" rel="noopener noreferrer" href="http://www.alipay.com/">\n        1st menu item\n      </a>\n    </Menu.Item>\n    <Menu.Item key="1">\n      <a target="_blank" rel="noopener noreferrer" href="http://www.taobao.com/">\n        2nd menu item\n      </a>\n    </Menu.Item>\n    <Menu.Divider />\n    <Menu.Item key="3" disabled>\n      3rd menu item\uff08disabled\uff09\n    </Menu.Item>\n  </Menu>\n);\n\nReactDOM.render(\n  <Dropdown overlay={menu}>\n    <a className="ant-dropdown-link" onClick={e => e.preventDefault()}>\n      Hover me <Icon type="down" />\n    </a>\n  </Dropdown>,\n  mountNode,\n);\n')),(0,l.kt)("h3",{id:"trigger-mode"},"Trigger mode"),(0,l.kt)("p",null,"The default trigger mode is ",(0,l.kt)("inlineCode",{parentName:"p"},"hover"),", you can change it to ",(0,l.kt)("inlineCode",{parentName:"p"},"click"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const menu = (\n  <Menu>\n    <Menu.Item key="0">\n      <a href="http://www.alipay.com/">1st menu item</a>\n    </Menu.Item>\n    <Menu.Item key="1">\n      <a href="http://www.taobao.com/">2nd menu item</a>\n    </Menu.Item>\n    <Menu.Divider />\n    <Menu.Item key="3">3rd menu item</Menu.Item>\n  </Menu>\n);\n\nReactDOM.render(\n  <Dropdown overlay={menu} trigger={[\'click\']}>\n    <a className="ant-dropdown-link" onClick={e => e.preventDefault()}>\n      Click me <Icon type="down" />\n    </a>\n  </Dropdown>,\n  mountNode,\n);\n')),(0,l.kt)("h3",{id:"click-event"},"Click event"),(0,l.kt)("p",null,"An event will be triggered when you click menu items, in which you can make different operations according to item's key."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const onClick = ({ key }) => {\n  message.info(`Click on item ${key}`);\n};\n\nconst menu = (\n  <Menu onClick={onClick}>\n    <Menu.Item key="1">1st menu item</Menu.Item>\n    <Menu.Item key="2">2nd memu item</Menu.Item>\n    <Menu.Item key="3">3rd menu item</Menu.Item>\n  </Menu>\n);\n\nReactDOM.render(\n  <Dropdown overlay={menu}>\n    <a className="ant-dropdown-link" onClick={e => e.preventDefault()}>\n      Hover me, Click menu item <Icon type="down" />\n    </a>\n  </Dropdown>,\n  mountNode,\n);\n')),(0,l.kt)("h3",{id:"button-with-dropdown-menu"},"Button with dropdown menu"),(0,l.kt)("p",null,"A button is on the left, and a related functional menu is on the right. You can set the icon property to modify the icon of right."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function handleButtonClick(e) {\n  message.info(\'Click on left button.\');\n  console.log(\'click left button\', e);\n}\n\nfunction handleMenuClick(e) {\n  message.info(\'Click on menu item.\');\n  console.log(\'click\', e);\n}\n\nconst menu = (\n  <Menu onClick={handleMenuClick}>\n    <Menu.Item key="1">\n      <Icon type="user" />\n      1st menu item\n    </Menu.Item>\n    <Menu.Item key="2">\n      <Icon type="user" />\n      2nd menu item\n    </Menu.Item>\n    <Menu.Item key="3">\n      <Icon type="user" />\n      3rd item\n    </Menu.Item>\n  </Menu>\n);\n\nReactDOM.render(\n  <div id="components-dropdown-demo-dropdown-button">\n    <Dropdown.Button onClick={handleButtonClick} overlay={menu}>\n      Dropdown\n    </Dropdown.Button>\n    <Dropdown.Button overlay={menu} icon={<Icon type="user" />}>\n      Dropdown\n    </Dropdown.Button>\n    <Dropdown.Button onClick={handleButtonClick} overlay={menu} disabled>\n      Dropdown\n    </Dropdown.Button>\n    <Dropdown overlay={menu}>\n      <Button>\n        Button <Icon type="down" />\n      </Button>\n    </Dropdown>\n  </div>,\n  mountNode,\n);\n')),(0,l.kt)("h3",{id:"cascading-menu"},"Cascading menu"),(0,l.kt)("p",null,"The menu has multiple levels."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { SubMenu } = Menu;\n\nconst menu = (\n  <Menu>\n    <Menu.Item>1st menu item</Menu.Item>\n    <Menu.Item>2nd menu item</Menu.Item>\n    <SubMenu title="sub menu">\n      <Menu.Item>3rd menu item</Menu.Item>\n      <Menu.Item>4th menu item</Menu.Item>\n    </SubMenu>\n    <SubMenu title="disabled sub menu" disabled>\n      <Menu.Item>5d menu item</Menu.Item>\n      <Menu.Item>6th menu item</Menu.Item>\n    </SubMenu>\n  </Menu>\n);\n\nReactDOM.render(\n  <Dropdown overlay={menu}>\n    <a className="ant-dropdown-link" onClick={e => e.preventDefault()}>\n      Cascading menu <Icon type="down" />\n    </a>\n  </Dropdown>,\n  mountNode,\n);\n')),(0,l.kt)("h3",{id:"the-way-of-hiding-menu"},"The way of hiding menu."),(0,l.kt)("p",null,"The default is to close the menu when you click on menu items, this feature can be turned off."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'class OverlayVisible extends React.Component {\n  state = {\n    visible: false,\n  };\n\n  handleMenuClick = e => {\n    if (e.key === \'3\') {\n      this.setState({ visible: false });\n    }\n  };\n\n  handleVisibleChange = flag => {\n    this.setState({ visible: flag });\n  };\n\n  render() {\n    const menu = (\n      <Menu onClick={this.handleMenuClick}>\n        <Menu.Item key="1">Clicking me will not close the menu.</Menu.Item>\n        <Menu.Item key="2">Clicking me will not close the menu also.</Menu.Item>\n        <Menu.Item key="3">Clicking me will close the menu</Menu.Item>\n      </Menu>\n    );\n    return (\n      <Dropdown\n        overlay={menu}\n        onVisibleChange={this.handleVisibleChange}\n        visible={this.state.visible}\n      >\n        <a className="ant-dropdown-link" onClick={e => e.preventDefault()}>\n          Hover me <Icon type="down" />\n        </a>\n      </Dropdown>\n    );\n  }\n}\n\nReactDOM.render(<OverlayVisible />, mountNode);\n')),(0,l.kt)("h3",{id:"context-menu"},"Context Menu"),(0,l.kt)("p",null,"The default trigger mode is ",(0,l.kt)("inlineCode",{parentName:"p"},"hover"),", you can change it to ",(0,l.kt)("inlineCode",{parentName:"p"},"contextMenu"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const menu = (\n  <Menu>\n    <Menu.Item key=\"1\">1st menu item</Menu.Item>\n    <Menu.Item key=\"2\">2nd menu item</Menu.Item>\n    <Menu.Item key=\"3\">3rd menu item</Menu.Item>\n  </Menu>\n);\n\nReactDOM.render(\n  <Dropdown overlay={menu} trigger={['contextMenu']}>\n    <div\n      style={{\n        textAlign: 'center',\n        background: '#f7f7f7',\n        height: 200,\n        lineHeight: '200px',\n        color: '#777',\n      }}\n    >\n      Right Click on here\n    </div>\n  </Dropdown>,\n  mountNode,\n);\n")),(0,l.kt)("h3",{id:"menu-full-styles"},"Menu full styles"),(0,l.kt)("p",null,"This demo was created for debugging Menu styles inside Dropdown."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { SubMenu } = Menu;\n\nconst menu = (\n  <Menu selectedKeys={[\'1\']} openKeys={[\'sub1\']}>\n    <Menu.ItemGroup key="group" title="Item Group">\n      <Menu.Item key="01">Option 0</Menu.Item>\n      <Menu.Item key="02">Option 0</Menu.Item>\n    </Menu.ItemGroup>\n    <SubMenu\n      key="sub1"\n      title={\n        <span>\n          <Icon type="mail" />\n          <span>Navigation One</span>\n        </span>\n      }\n    >\n      <Menu.ItemGroup key="g1" title="Item 1">\n        <Menu.Item key="1">Option 1</Menu.Item>\n        <Menu.Item key="2">Option 2</Menu.Item>\n      </Menu.ItemGroup>\n      <Menu.ItemGroup key="g2" title="Item 2">\n        <Menu.Item key="3">Option 3</Menu.Item>\n        <Menu.Item key="4">Option 4</Menu.Item>\n      </Menu.ItemGroup>\n    </SubMenu>\n    <SubMenu\n      key="sub2"\n      title={\n        <span>\n          <Icon type="appstore" />\n          <span>Navigation Two</span>\n        </span>\n      }\n    >\n      <Menu.Item key="5">Option 5</Menu.Item>\n      <Menu.Item key="6">Option 6</Menu.Item>\n      <SubMenu key="sub3" title="Submenu">\n        <Menu.Item key="7">Option 7</Menu.Item>\n        <Menu.Item key="8">Option 8</Menu.Item>\n      </SubMenu>\n    </SubMenu>\n    <SubMenu\n      key="sub4"\n      title={\n        <span>\n          <Icon type="setting" />\n          <span>Navigation Three</span>\n        </span>\n      }\n    >\n      <Menu.Item key="9">Option 9</Menu.Item>\n      <Menu.Item key="10">Option 10</Menu.Item>\n      <Menu.Item key="11">Option 11</Menu.Item>\n      <Menu.Item key="12">Option 12</Menu.Item>\n    </SubMenu>\n  </Menu>\n);\n\nReactDOM.render(\n  <Dropdown overlay={menu}>\n    <a className="ant-dropdown-link" onClick={e => e.preventDefault()}>\n      Hover to check menu style <Icon type="down" />\n    </a>\n  </Dropdown>,\n  mountNode,\n);\n')),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("h3",{id:"dropdown"},"Dropdown"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Version"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"disabled"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the dropdown menu is disabled"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"getPopupContainer"),(0,l.kt)("td",{parentName:"tr",align:null},"To set the container of the dropdown menu. The default is to create a ",(0,l.kt)("inlineCode",{parentName:"td"},"div")," element in ",(0,l.kt)("inlineCode",{parentName:"td"},"body"),", but you can reset it to the scrolling area and make a relative reposition. ",(0,l.kt)("a",{parentName:"td",href:"https://codepen.io/afc163/pen/zEjNOy?editors=0010"},"Example on CodePen"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"Function(triggerNode)"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"() => document.body")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"overlay"),(0,l.kt)("td",{parentName:"tr",align:null},"The dropdown menu"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/components/menu"},"Menu")),(0,l.kt)("td",{parentName:"tr",align:null},"() => Menu"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"overlayClassName"),(0,l.kt)("td",{parentName:"tr",align:null},"Class name of the dropdown root element"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.11.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"overlayStyle"),(0,l.kt)("td",{parentName:"tr",align:null},"Style of the dropdown root element"),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.11.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"placement"),(0,l.kt)("td",{parentName:"tr",align:null},"Placement of popup menu: ",(0,l.kt)("inlineCode",{parentName:"td"},"bottomLeft"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"bottomCenter"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"bottomRight"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"topLeft"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"topCenter")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"topRight")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"bottomLeft")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"trigger"),(0,l.kt)("td",{parentName:"tr",align:null},"The trigger mode which executes the dropdown action. Note that hover can't be used on touchscreens."),(0,l.kt)("td",{parentName:"tr",align:null},"Array<",(0,l.kt)("inlineCode",{parentName:"td"},"click")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"hover")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"contextMenu"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"visible"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the dropdown menu is currently visible"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onVisibleChange"),(0,l.kt)("td",{parentName:"tr",align:null},"Called when the visible state is changed."),(0,l.kt)("td",{parentName:"tr",align:null},"Function(visible)"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("p",null,"You should use ",(0,l.kt)("a",{parentName:"p",href:"/components/menu/"},"Menu")," as ",(0,l.kt)("inlineCode",{parentName:"p"},"overlay"),". The menu items and dividers are also available by using ",(0,l.kt)("inlineCode",{parentName:"p"},"Menu.Item")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Menu.Divider"),"."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Warning: You must set a unique ",(0,l.kt)("inlineCode",{parentName:"p"},"key")," for ",(0,l.kt)("inlineCode",{parentName:"p"},"Menu.Item"),"."),(0,l.kt)("p",{parentName:"blockquote"},"Menu of Dropdown is unselectable by default, you can make it selectable via ",(0,l.kt)("inlineCode",{parentName:"p"},"<Menu selectable>"),".")),(0,l.kt)("h3",{id:"dropdownbutton"},"Dropdown.Button"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Version"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"disabled"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the dropdown menu is disabled"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"icon"),(0,l.kt)("td",{parentName:"tr",align:null},"Icon (appears on the right)"),(0,l.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.17.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"overlay"),(0,l.kt)("td",{parentName:"tr",align:null},"The dropdown menu"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/components/menu"},"Menu")),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"placement"),(0,l.kt)("td",{parentName:"tr",align:null},"Placement of popup menu: ",(0,l.kt)("inlineCode",{parentName:"td"},"bottomLeft")," ",(0,l.kt)("inlineCode",{parentName:"td"},"bottomCenter")," ",(0,l.kt)("inlineCode",{parentName:"td"},"bottomRight")," ",(0,l.kt)("inlineCode",{parentName:"td"},"topLeft")," ",(0,l.kt)("inlineCode",{parentName:"td"},"topCenter")," ",(0,l.kt)("inlineCode",{parentName:"td"},"topRight")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"bottomLeft")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},"Size of the button, the same as ",(0,l.kt)("a",{parentName:"td",href:"/components/button"},"Button")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"default")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"trigger"),(0,l.kt)("td",{parentName:"tr",align:null},"The trigger mode which executes the dropdown action"),(0,l.kt)("td",{parentName:"tr",align:null},"Array<",(0,l.kt)("inlineCode",{parentName:"td"},"click")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"hover")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"contextMenu"),">")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"type"),(0,l.kt)("td",{parentName:"tr",align:null},"Type of the button, the same as ",(0,l.kt)("a",{parentName:"td",href:"/components/button"},"Button")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"default")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"visible"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether the dropdown menu is currently visible"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onClick"),(0,l.kt)("td",{parentName:"tr",align:null},"The same as ",(0,l.kt)("a",{parentName:"td",href:"/components/button"},"Button"),": called when you click the button on the left"),(0,l.kt)("td",{parentName:"tr",align:null},"Function"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onVisibleChange"),(0,l.kt)("td",{parentName:"tr",align:null},"Called when the visible state is changed"),(0,l.kt)("td",{parentName:"tr",align:null},"Function"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null})))))}c.isMDXComponent=!0},30876:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>k});var a=t(2784);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),m=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=m(e.components);return a.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=m(t),k=r,s=c["".concat(u,".").concat(k)]||c[k]||p[k]||l;return t?a.createElement(s,o(o({ref:n},d),{},{components:t})):a.createElement(s,o({ref:n},d))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=c;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var m=2;m<l;m++)o[m]=t[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"}}]);