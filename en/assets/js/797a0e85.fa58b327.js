"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[253],{62390:(n,t,e)=>{e.r(t),e.d(t,{frontMatter:()=>i,contentTitle:()=>p,metadata:()=>s,toc:()=>u,default:()=>d});var a=e(7896),r=e(31461),l=(e(2784),e(30876)),o=["components"],i={tags:["Components"],type:"Data Entry",title:"Mentions"},p=void 0,s={unversionedId:"components/data-entry/mentions",id:"components/data-entry/mentions",isDocsHomePage:!1,title:"Mentions",description:"---",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/data-entry/mentions.md",sourceDirName:"components/data-entry",slug:"/components/data-entry/mentions",permalink:"/tnt-next/en/docs/components/data-entry/mentions",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/components/data-entry/mentions.md",tags:[{label:"Components",permalink:"/tnt-next/en/docs/tags/components"}],version:"current",frontMatter:{tags:["Components"],type:"Data Entry",title:"Mentions"},sidebar:"componentsSidebar",previous:{title:"Input",permalink:"/tnt-next/en/docs/components/data-entry/input"},next:{title:"Radio",permalink:"/tnt-next/en/docs/components/data-entry/radio"}},u=[{value:"When To Use",id:"when-to-use",children:[],level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",children:[{value:"Basic",id:"basic",children:[],level:3},{value:"Asynchronous loading",id:"asynchronous-loading",children:[],level:3},{value:"With Form",id:"with-form",children:[],level:3},{value:"Customize Trigger Token",id:"customize-trigger-token",children:[],level:3},{value:"disabled or readOnly",id:"disabled-or-readonly",children:[],level:3},{value:"Placement",id:"placement",children:[],level:3}],level:2},{value:"API",id:"api",children:[{value:"Mention",id:"mention",children:[],level:3},{value:"Mention methods",id:"mention-methods",children:[],level:3},{value:"Option",id:"option",children:[],level:3}],level:2}],m={toc:u};function d(n){var t=n.components,e=(0,r.Z)(n,o);return(0,l.kt)("wrapper",(0,a.Z)({},m,e,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Mention component."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Mention component is deprecated. Please click ",(0,l.kt)("a",{parentName:"p",href:"/components/mention"},"here")," to view old document.")),(0,l.kt)("h2",{id:"when-to-use"},"When To Use"),(0,l.kt)("p",null,"When need to mention someone or something."),(0,l.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,l.kt)("h3",{id:"basic"},"Basic"),(0,l.kt)("p",null,"Basic usage."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Option } = Mentions;\n\nfunction onChange(value) {\n  console.log(\'Change:\', value);\n}\n\nfunction onSelect(option) {\n  console.log(\'select\', option);\n}\n\nReactDOM.render(\n  <Mentions\n    style={{ width: \'100%\' }}\n    onChange={onChange}\n    onSelect={onSelect}\n    defaultValue="@afc163"\n  >\n    <Option value="afc163">afc163</Option>\n    <Option value="zombieJ">zombieJ</Option>\n    <Option value="yesmeck">yesmeck</Option>\n  </Mentions>,\n  mountNode,\n);\n')),(0,l.kt)("h3",{id:"asynchronous-loading"},"Asynchronous loading"),(0,l.kt)("p",null,"async"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"\nconst { Option } = Mentions;\n\nclass AsyncMention extends React.Component {\n  constructor() {\n    super();\n\n    this.loadGithubUsers = debounce(this.loadGithubUsers, 800);\n  }\n\n  state = {\n    search: '',\n    loading: false,\n    users: [],\n  };\n\n  onSearch = search => {\n    this.setState({ search, loading: !!search, users: [] });\n    console.log('Search:', search);\n    this.loadGithubUsers(search);\n  };\n\n  loadGithubUsers(key) {\n    if (!key) {\n      this.setState({\n        users: [],\n      });\n      return;\n    }\n\n    fetch(`https://api.github.com/search/users?q=${key}`)\n      .then(res => res.json())\n      .then(({ items = [] }) => {\n        const { search } = this.state;\n        if (search !== key) return;\n\n        this.setState({\n          users: items.slice(0, 10),\n          loading: false,\n        });\n      });\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <Mentions style={{ width: '100%' }} loading={loading} onSearch={this.onSearch}>\n        {users.map(({ login, avatar_url: avatar }) => (\n          <Option key={login} value={login} className=\"antd-demo-dynamic-option\">\n            <img src={avatar} alt={login} />\n            <span>{login}</span>\n          </Option>\n        ))}\n      </Mentions>\n    );\n  }\n}\n\nReactDOM.render(<AsyncMention />, mountNode);\n")),(0,l.kt)("h3",{id:"with-form"},"With Form"),(0,l.kt)("p",null,"Controlled mode, for example, to work with ",(0,l.kt)("inlineCode",{parentName:"p"},"Form"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Option, getMentions } = Mentions;\n\nclass App extends React.Component {\n  handleReset = e => {\n    e.preventDefault();\n    this.props.form.resetFields();\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((errors, values) => {\n      if (errors) {\n        console.log(\'Errors in the form!!!\');\n        return;\n      }\n      console.log(\'Submit!!!\');\n      console.log(values);\n    });\n  };\n\n  checkMention = (rule, value, callback) => {\n    const mentions = getMentions(value);\n    if (mentions.length < 2) {\n      callback(new Error(\'More than one must be selected!\'));\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const {\n      form: { getFieldDecorator },\n    } = this.props;\n\n    return (\n      <Form layout="horizontal">\n        <Form.Item label="Top coders" labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\n          {getFieldDecorator(\'coders\', {\n            rules: [{ validator: this.checkMention }],\n          })(\n            <Mentions rows="1">\n              <Option value="afc163">afc163</Option>\n              <Option value="zombieJ">zombieJ</Option>\n              <Option value="yesmeck">yesmeck</Option>\n            </Mentions>,\n          )}\n        </Form.Item>\n        <Form.Item label="Bio" labelCol={{ span: 6 }} wrapperCol={{ span: 16 }}>\n          {getFieldDecorator(\'bio\', {\n            rules: [{ required: true }],\n          })(\n            <Mentions rows="3" placeholder="You can use @ to ref user here">\n              <Option value="afc163">afc163</Option>\n              <Option value="zombieJ">zombieJ</Option>\n              <Option value="yesmeck">yesmeck</Option>\n            </Mentions>,\n          )}\n        </Form.Item>\n        <Form.Item wrapperCol={{ span: 14, offset: 6 }}>\n          <Button type="primary" onClick={this.handleSubmit}>\n            Submit\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Button onClick={this.handleReset}>Reset</Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst FormDemo = Form.create()(App);\n\nReactDOM.render(<FormDemo />, mountNode);\n')),(0,l.kt)("h3",{id:"customize-trigger-token"},"Customize Trigger Token"),(0,l.kt)("p",null,"Customize Trigger Token by ",(0,l.kt)("inlineCode",{parentName:"p"},"prefix")," props. Default to ",(0,l.kt)("inlineCode",{parentName:"p"},"@"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Array\\<string\\>")," also supported."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const { Option } = Mentions;\n\nconst MOCK_DATA = {\n  '@': ['afc163', 'zombiej', 'yesmeck'],\n  '#': ['1.0', '2.0', '3.0'],\n};\n\nclass App extends React.Component {\n  state = {\n    prefix: '@',\n  };\n\n  onSearch = (_, prefix) => {\n    this.setState({ prefix });\n  };\n\n  render() {\n    const { prefix } = this.state;\n\n    return (\n      <Mentions\n        style={{ width: '100%' }}\n        placeholder=\"input @ to mention people, # to mention tag\"\n        prefix={['@', '#']}\n        onSearch={this.onSearch}\n      >\n        {(MOCK_DATA[prefix] || []).map(value => (\n          <Option key={value} value={value}>\n            {value}\n          </Option>\n        ))}\n      </Mentions>\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,l.kt)("h3",{id:"disabled-or-readonly"},"disabled or readOnly"),(0,l.kt)("p",null,"Configurate ",(0,l.kt)("inlineCode",{parentName:"p"},"disabled")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"readOnly"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"const { Option } = Mentions;\n\nfunction getOptions() {\n  return ['afc163', 'zombiej', 'yesmeck'].map(value => (\n    <Option key={value} value={value}>\n      {value}\n    </Option>\n  ));\n}\n\nfunction App() {\n  return (\n    <div>\n      <div style={{ marginBottom: 10 }}>\n        <Mentions style={{ width: '100%' }} placeholder=\"this is disabled Mentions\" disabled>\n          {getOptions()}\n        </Mentions>\n      </div>\n      <Mentions style={{ width: '100%' }} placeholder=\"this is readOnly Mentions\" readOnly>\n        {getOptions()}\n      </Mentions>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,l.kt)("h3",{id:"placement"},"Placement"),(0,l.kt)("p",null,"Change the suggestions placement."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Option } = Mentions;\n\nReactDOM.render(\n  <Mentions style={{ width: \'100%\' }} placement="top">\n    <Option value="afc163">afc163</Option>\n    <Option value="zombieJ">zombieJ</Option>\n    <Option value="yesmeck">yesmeck</Option>\n  </Mentions>,\n  mountNode,\n);\n')),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Mentions onChange={onChange}>\n  <Mentions.Option value="sample">Sample</Mentions.Option>\n</Mentions>\n')),(0,l.kt)("h3",{id:"mention"},"Mention"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Version"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"autoFocus"),(0,l.kt)("td",{parentName:"tr",align:null},"Auto get focus when component mounted"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"defaultValue"),(0,l.kt)("td",{parentName:"tr",align:null},"Default value"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"filterOption"),(0,l.kt)("td",{parentName:"tr",align:null},"Customize filter option logic"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"(input: string, option: OptionProps) => boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"notFoundContent"),(0,l.kt)("td",{parentName:"tr",align:null},"Set mentions content when not match"),(0,l.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,l.kt)("td",{parentName:"tr",align:null},"'Not Found'"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"placement"),(0,l.kt)("td",{parentName:"tr",align:null},"Set popup placement"),(0,l.kt)("td",{parentName:"tr",align:null},"'top'"),(0,l.kt)("td",{parentName:"tr",align:null},"'bottom'"),(0,l.kt)("td",{parentName:"tr",align:null},"'bottom'")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"prefix"),(0,l.kt)("td",{parentName:"tr",align:null},"Set trigger prefix keyword"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,l.kt)("td",{parentName:"tr",align:null},"'@'")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"split"),(0,l.kt)("td",{parentName:"tr",align:null},"Set split string before and after selected mention"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"' '"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"validateSearch"),(0,l.kt)("td",{parentName:"tr",align:null},"Customize trigger search logic"),(0,l.kt)("td",{parentName:"tr",align:null},"(text: string, props: MentionsProps) => void"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"Set value of mentions"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onChange"),(0,l.kt)("td",{parentName:"tr",align:null},"Trigger when value changed"),(0,l.kt)("td",{parentName:"tr",align:null},"(text: string) => void"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onSelect"),(0,l.kt)("td",{parentName:"tr",align:null},"Trigger when user select the option"),(0,l.kt)("td",{parentName:"tr",align:null},"(option: OptionProps, prefix: string) => void"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onSearch"),(0,l.kt)("td",{parentName:"tr",align:null},"Trigger when prefix hit"),(0,l.kt)("td",{parentName:"tr",align:null},"(text: string, prefix: string) => void"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onFocus"),(0,l.kt)("td",{parentName:"tr",align:null},"Trigger when mentions get focus"),(0,l.kt)("td",{parentName:"tr",align:null},"() => void"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onBlur"),(0,l.kt)("td",{parentName:"tr",align:null},"Trigger when mentions lose focus"),(0,l.kt)("td",{parentName:"tr",align:null},"() => void"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"getPopupContainer"),(0,l.kt)("td",{parentName:"tr",align:null},"Set the mount HTML node for suggestions"),(0,l.kt)("td",{parentName:"tr",align:null},"() => HTMLElement"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.22.0")))),(0,l.kt)("h3",{id:"mention-methods"},"Mention methods"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Version"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"blur()"),(0,l.kt)("td",{parentName:"tr",align:null},"remove focus"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"focus()"),(0,l.kt)("td",{parentName:"tr",align:null},"get focus"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")))),(0,l.kt)("h3",{id:"option"},"Option"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Version"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"children"),(0,l.kt)("td",{parentName:"tr",align:null},"suggestion content"),(0,l.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"value of suggestion, the value will insert into input filed while selected"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"''"),(0,l.kt)("td",{parentName:"tr",align:null},"3.19.0")))))}d.isMDXComponent=!0},30876:(n,t,e)=>{e.d(t,{Zo:()=>u,kt:()=>c});var a=e(2784);function r(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function l(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function o(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?l(Object(e),!0).forEach((function(t){r(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function i(n,t){if(null==n)return{};var e,a,r=function(n,t){if(null==n)return{};var e,a,r={},l=Object.keys(n);for(a=0;a<l.length;a++)e=l[a],t.indexOf(e)>=0||(r[e]=n[e]);return r}(n,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(a=0;a<l.length;a++)e=l[a],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(r[e]=n[e])}return r}var p=a.createContext({}),s=function(n){var t=a.useContext(p),e=t;return n&&(e="function"==typeof n?n(t):o(o({},t),n)),e},u=function(n){var t=s(n.components);return a.createElement(p.Provider,{value:t},n.children)},m={inlineCode:"code",wrapper:function(n){var t=n.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(n,t){var e=n.components,r=n.mdxType,l=n.originalType,p=n.parentName,u=i(n,["components","mdxType","originalType","parentName"]),d=s(e),c=r,g=d["".concat(p,".").concat(c)]||d[c]||m[c]||l;return e?a.createElement(g,o(o({ref:t},u),{},{components:e})):a.createElement(g,o({ref:t},u))}));function c(n,t){var e=arguments,r=t&&t.mdxType;if("string"==typeof n||r){var l=e.length,o=new Array(l);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=n,i.mdxType="string"==typeof n?n:r,o[1]=i;for(var s=2;s<l;s++)o[s]=e[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,e)}d.displayName="MDXCreateElement"}}]);