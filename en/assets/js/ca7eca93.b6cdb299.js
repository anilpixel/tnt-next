"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7484],{25029:(n,t,e)=>{e.r(t),e.d(t,{frontMatter:()=>i,contentTitle:()=>s,metadata:()=>m,toc:()=>p,default:()=>d});var a=e(7896),o=e(31461),r=(e(2784),e(30876)),l=["components"],i={tags:["Components"],type:"Data Display",title:"Comment",cols:1},s=void 0,m={unversionedId:"components/data-display/comment",id:"components/data-display/comment",isDocsHomePage:!1,title:"Comment",description:"----",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/data-display/comment.md",sourceDirName:"components/data-display",slug:"/components/data-display/comment",permalink:"/tnt-next/en/docs/components/data-display/comment",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/components/data-display/comment.md",tags:[{label:"Components",permalink:"/tnt-next/en/docs/tags/components"}],version:"current",frontMatter:{tags:["Components"],type:"Data Display",title:"Comment",cols:1},sidebar:"componentsSidebar",previous:{title:"Collapse",permalink:"/tnt-next/en/docs/components/data-display/collapse"},next:{title:"Descriptions",permalink:"/tnt-next/en/docs/components/data-display/descriptions"}},p=[{value:"When To Use",id:"when-to-use",children:[],level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",children:[{value:"Basic comment",id:"basic-comment",children:[],level:3},{value:"Usage with list",id:"usage-with-list",children:[],level:3},{value:"Nested comments",id:"nested-comments",children:[],level:3},{value:"Reply Editor",id:"reply-editor",children:[],level:3}],level:2},{value:"API",id:"api",children:[],level:2}],c={toc:p};function d(n){var t=n.components,e=(0,o.Z)(n,l);return(0,r.kt)("wrapper",(0,a.Z)({},c,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("p",null,"A comment displays user feedback and discussion to website content."),(0,r.kt)("h2",{id:"when-to-use"},"When To Use"),(0,r.kt)("p",null,"Comments can be used to enable discussions on an entity such as a page, blog post, issue or other."),(0,r.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,r.kt)("h3",{id:"basic-comment"},"Basic comment"),(0,r.kt)("p",null,"A basic comment with author, avatar, time and actions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"\nclass App extends React.Component {\n  state = {\n    likes: 0,\n    dislikes: 0,\n    action: null,\n  };\n\n  like = () => {\n    this.setState({\n      likes: 1,\n      dislikes: 0,\n      action: 'liked',\n    });\n  };\n\n  dislike = () => {\n    this.setState({\n      likes: 0,\n      dislikes: 1,\n      action: 'disliked',\n    });\n  };\n\n  render() {\n    const { likes, dislikes, action } = this.state;\n\n    const actions = [\n      <span key=\"comment-basic-like\">\n        <Tooltip title=\"Like\">\n          <Icon\n            type=\"like\"\n            theme={action === 'liked' ? 'filled' : 'outlined'}\n            onClick={this.like}\n          />\n        </Tooltip>\n        <span style={{ paddingLeft: 8, cursor: 'auto' }}>{likes}</span>\n      </span>,\n      <span key=' key=\"comment-basic-dislike\"'>\n        <Tooltip title=\"Dislike\">\n          <Icon\n            type=\"dislike\"\n            theme={action === 'disliked' ? 'filled' : 'outlined'}\n            onClick={this.dislike}\n          />\n        </Tooltip>\n        <span style={{ paddingLeft: 8, cursor: 'auto' }}>{dislikes}</span>\n      </span>,\n      <span key=\"comment-basic-reply-to\">Reply to</span>,\n    ];\n\n    return (\n      <Comment\n        actions={actions}\n        author={<a>Han Solo</a>}\n        avatar={\n          <Avatar\n            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n            alt=\"Han Solo\"\n          />\n        }\n        content={\n          <p>\n            We supply a series of design principles, practical patterns and high quality design\n            resources (Sketch and Axure), to help people create their product prototypes beautifully\n            and efficiently.\n          </p>\n        }\n        datetime={\n          <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n            <span>{moment().fromNow()}</span>\n          </Tooltip>\n        }\n      />\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,r.kt)("h3",{id:"usage-with-list"},"Usage with list"),(0,r.kt)("p",null,"Displaying a series of comments using the ",(0,r.kt)("inlineCode",{parentName:"p"},"antd")," List Component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"\nconst data = [\n  {\n    actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n    author: 'Han Solo',\n    avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n    content: (\n      <p>\n        We supply a series of design principles, practical patterns and high quality design\n        resources (Sketch and Axure), to help people create their product prototypes beautifully and\n        efficiently.\n      </p>\n    ),\n    datetime: (\n      <Tooltip\n        title={moment()\n          .subtract(1, 'days')\n          .format('YYYY-MM-DD HH:mm:ss')}\n      >\n        <span>\n          {moment()\n            .subtract(1, 'days')\n            .fromNow()}\n        </span>\n      </Tooltip>\n    ),\n  },\n  {\n    actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n    author: 'Han Solo',\n    avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n    content: (\n      <p>\n        We supply a series of design principles, practical patterns and high quality design\n        resources (Sketch and Axure), to help people create their product prototypes beautifully and\n        efficiently.\n      </p>\n    ),\n    datetime: (\n      <Tooltip\n        title={moment()\n          .subtract(2, 'days')\n          .format('YYYY-MM-DD HH:mm:ss')}\n      >\n        <span>\n          {moment()\n            .subtract(2, 'days')\n            .fromNow()}\n        </span>\n      </Tooltip>\n    ),\n  },\n];\n\nReactDOM.render(\n  <List\n    className=\"comment-list\"\n    header={`${data.length} replies`}\n    itemLayout=\"horizontal\"\n    dataSource={data}\n    renderItem={item => (\n      <li>\n        <Comment\n          actions={item.actions}\n          author={item.author}\n          avatar={item.avatar}\n          content={item.content}\n          datetime={item.datetime}\n        />\n      </li>\n    )}\n  />,\n  mountNode,\n);\n")),(0,r.kt)("h3",{id:"nested-comments"},"Nested comments"),(0,r.kt)("p",null,"Comments can be nested."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const ExampleComment = ({ children }) => (\n  <Comment\n    actions={[<span key="comment-nested-reply-to">Reply to</span>]}\n    author={<a>Han Solo</a>}\n    avatar={\n      <Avatar\n        src="https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png"\n        alt="Han Solo"\n      />\n    }\n    content={\n      <p>\n        We supply a series of design principles, practical patterns and high quality design\n        resources (Sketch and Axure).\n      </p>\n    }\n  >\n    {children}\n  </Comment>\n);\n\nReactDOM.render(\n  <ExampleComment>\n    <ExampleComment>\n      <ExampleComment />\n      <ExampleComment />\n    </ExampleComment>\n  </ExampleComment>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"reply-editor"},"Reply Editor"),(0,r.kt)("p",null,"Comment can be used as an editor, so the user can customize the contents of the component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"\nconst { TextArea } = Input;\n\nconst CommentList = ({ comments }) => (\n  <List\n    dataSource={comments}\n    header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n    itemLayout=\"horizontal\"\n    renderItem={props => <Comment {...props} />}\n  />\n);\n\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\n  <div>\n    <Form.Item>\n      <TextArea rows={4} onChange={onChange} value={value} />\n    </Form.Item>\n    <Form.Item>\n      <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n        Add Comment\n      </Button>\n    </Form.Item>\n  </div>\n);\n\nclass App extends React.Component {\n  state = {\n    comments: [],\n    submitting: false,\n    value: '',\n  };\n\n  handleSubmit = () => {\n    if (!this.state.value) {\n      return;\n    }\n\n    this.setState({\n      submitting: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        submitting: false,\n        value: '',\n        comments: [\n          {\n            author: 'Han Solo',\n            avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n            content: <p>{this.state.value}</p>,\n            datetime: moment().fromNow(),\n          },\n          ...this.state.comments,\n        ],\n      });\n    }, 1000);\n  };\n\n  handleChange = e => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  render() {\n    const { comments, submitting, value } = this.state;\n\n    return (\n      <div>\n        {comments.length > 0 && <CommentList comments={comments} />}\n        <Comment\n          avatar={\n            <Avatar\n              src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n              alt=\"Han Solo\"\n            />\n          }\n          content={\n            <Editor\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              submitting={submitting}\n              value={value}\n            />\n          }\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"actions"),(0,r.kt)("td",{parentName:"tr",align:null},"List of action items rendered below the comment content"),(0,r.kt)("td",{parentName:"tr",align:null},"Array\\<ReactNode",">"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.11.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"author"),(0,r.kt)("td",{parentName:"tr",align:null},"The element to display as the comment author"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"avatar"),(0,r.kt)("td",{parentName:"tr",align:null},"The element to display as the comment avatar - generally an antd ",(0,r.kt)("inlineCode",{parentName:"td"},"Avatar")," or src"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"children"),(0,r.kt)("td",{parentName:"tr",align:null},"Nested comments should be provided as children of the Comment"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.11.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"content"),(0,r.kt)("td",{parentName:"tr",align:null},"The main content of the comment"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"datetime"),(0,r.kt)("td",{parentName:"tr",align:null},"A datetime element containing the time to be displayed"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-")))))}d.isMDXComponent=!0},30876:(n,t,e)=>{e.d(t,{Zo:()=>p,kt:()=>u});var a=e(2784);function o(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function r(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function l(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?r(Object(e),!0).forEach((function(t){o(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function i(n,t){if(null==n)return{};var e,a,o=function(n,t){if(null==n)return{};var e,a,o={},r=Object.keys(n);for(a=0;a<r.length;a++)e=r[a],t.indexOf(e)>=0||(o[e]=n[e]);return o}(n,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)e=r[a],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(o[e]=n[e])}return o}var s=a.createContext({}),m=function(n){var t=a.useContext(s),e=t;return n&&(e="function"==typeof n?n(t):l(l({},t),n)),e},p=function(n){var t=m(n.components);return a.createElement(s.Provider,{value:t},n.children)},c={inlineCode:"code",wrapper:function(n){var t=n.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(n,t){var e=n.components,o=n.mdxType,r=n.originalType,s=n.parentName,p=i(n,["components","mdxType","originalType","parentName"]),d=m(e),u=o,h=d["".concat(s,".").concat(u)]||d[u]||c[u]||r;return e?a.createElement(h,l(l({ref:t},p),{},{components:e})):a.createElement(h,l({ref:t},p))}));function u(n,t){var e=arguments,o=t&&t.mdxType;if("string"==typeof n||o){var r=e.length,l=new Array(r);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=n,i.mdxType="string"==typeof n?n:o,l[1]=i;for(var m=2;m<r;m++)l[m]=e[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,e)}d.displayName="MDXCreateElement"}}]);