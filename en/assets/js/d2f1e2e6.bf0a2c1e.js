"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6816],{97721:(t,e,n)=>{n.r(e),n.d(e,{frontMatter:()=>s,contentTitle:()=>o,metadata:()=>p,toc:()=>d,default:()=>u});var i=n(7896),a=n(31461),r=(n(2784),n(30876)),l=["components"],s={tags:["Components"],type:"Navigation",cols:1,title:"Steps"},o=void 0,p={unversionedId:"components/navigation/steps",id:"components/navigation/steps",isDocsHomePage:!1,title:"Steps",description:"---",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/navigation/steps.md",sourceDirName:"components/navigation",slug:"/components/navigation/steps",permalink:"/tnt-next/en/docs/components/navigation/steps",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/components/navigation/steps.md",tags:[{label:"Components",permalink:"/tnt-next/en/docs/tags/components"}],version:"current",frontMatter:{tags:["Components"],type:"Navigation",cols:1,title:"Steps"},sidebar:"componentsSidebar",previous:{title:"Pagination",permalink:"/tnt-next/en/docs/components/navigation/pagination"},next:{title:"AutoComplete",permalink:"/tnt-next/en/docs/components/data-entry/auto-complete"}},d=[{value:"When To Use",id:"when-to-use",children:[],level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",children:[{value:"Basic",id:"basic",children:[],level:3},{value:"Mini version",id:"mini-version",children:[],level:3},{value:"With icon",id:"with-icon",children:[],level:3},{value:"Switch Step",id:"switch-step",children:[],level:3},{value:"Vertical",id:"vertical",children:[],level:3},{value:"Vertical mini version",id:"vertical-mini-version",children:[],level:3},{value:"Error status",id:"error-status",children:[],level:3},{value:"Dot Style",id:"dot-style",children:[],level:3},{value:"Customized Dot Style",id:"customized-dot-style",children:[],level:3},{value:"Clickable",id:"clickable",children:[],level:3},{value:"Navigation Steps",id:"navigation-steps",children:[],level:3}],level:2},{value:"API",id:"api",children:[{value:"Steps",id:"steps",children:[],level:3},{value:"Steps.Step",id:"stepsstep",children:[],level:3}],level:2}],c={toc:d};function u(t){var e=t.components,n=(0,a.Z)(t,l);return(0,r.kt)("wrapper",(0,i.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Steps")," is a navigation bar that guides users through the steps of a task."),(0,r.kt)("h2",{id:"when-to-use"},"When To Use"),(0,r.kt)("p",null,"When a given task is complicated or has a certain sequence in the series of subtasks, we can decompose it into several steps to make things easier."),(0,r.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,r.kt)("h3",{id:"basic"},"Basic"),(0,r.kt)("p",null,"The most basic step bar."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Step } = Steps;\n\nReactDOM.render(\n  <Steps current={1}>\n    <Step title="Finished" description="This is a description." />\n    <Step title="In Progress" subTitle="Left 00:00:08" description="This is a description." />\n    <Step title="Waiting" description="This is a description." />\n  </Steps>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"mini-version"},"Mini version"),(0,r.kt)("p",null,"By setting like this: ",(0,r.kt)("inlineCode",{parentName:"p"},'\\<Steps size="small">'),", you can get a mini version."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Step } = Steps;\n\nReactDOM.render(\n  <Steps size="small" current={1}>\n    <Step title="Finished" />\n    <Step title="In Progress" />\n    <Step title="Waiting" />\n  </Steps>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"with-icon"},"With icon"),(0,r.kt)("p",null,"You can use your own custom icons by setting the property ",(0,r.kt)("inlineCode",{parentName:"p"},"icon")," for ",(0,r.kt)("inlineCode",{parentName:"p"},"Steps.Step"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Step } = Steps;\n\nReactDOM.render(\n  <Steps>\n    <Step status="finish" title="Login" icon={<Icon type="user" />} />\n    <Step status="finish" title="Verification" icon={<Icon type="solution" />} />\n    <Step status="process" title="Pay" icon={<Icon type="loading" />} />\n    <Step status="wait" title="Done" icon={<Icon type="smile-o" />} />\n  </Steps>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"switch-step"},"Switch Step"),(0,r.kt)("p",null,"Cooperate with the content and buttons, to represent the progress of a process."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"class App extends React.Component {\n  state = {\n    current: 0,\n  }\n\n  next = () => {\n    const current = this.state.current + 1;\n    this.setState({ current });\n  }\n\n  prev = () => {\n    const current = this.state.current - 1;\n    this.setState({ current });\n  }\n\n  render() {\n    const { current } = this.state;\n    const steps = [\n      {\n        title: 'First',\n        content: 'First-content',\n      },\n      {\n        title: 'Second',\n        content: 'Second-content',\n      },\n      {\n        title: 'Last',\n        content: 'Last-content',\n      },\n    ];\n\n    return (\n      <div>\n        <Steps current={current}>\n          {steps.map(item => (\n            <Steps.Step key={item.title} title={item.title} />\n          ))}\n        </Steps>\n        <div className=\"steps-content\">{steps[current].content}</div>\n        <div className=\"steps-action\">\n          {current < steps.length - 1 && (\n            <Button type=\"primary\" onClick={() => this.next()}>\n              Next\n            </Button>\n          )}\n          {current === steps.length - 1 && (\n            <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\n              Done\n            </Button>\n          )}\n          {current > 0 && (\n            <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\n              Previous\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,r.kt)("h3",{id:"vertical"},"Vertical"),(0,r.kt)("p",null,"A simple step bar in the vertical direction."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Step } = Steps;\n\nReactDOM.render(\n  <Steps direction="vertical" current={1}>\n    <Step title="Finished" description="This is a description." />\n    <Step title="In Progress" description="This is a description." />\n    <Step title="Waiting" description="This is a description." />\n  </Steps>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"vertical-mini-version"},"Vertical mini version"),(0,r.kt)("p",null,"A simple mini version step bar in the vertical direction."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Step } = Steps;\n\nReactDOM.render(\n  <Steps direction="vertical" size="small" current={1}>\n    <Step title="Finished" description="This is a description." />\n    <Step title="In Progress" description="This is a description." />\n    <Step title="Waiting" description="This is a description." />\n  </Steps>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"error-status"},"Error status"),(0,r.kt)("p",null,"By using ",(0,r.kt)("inlineCode",{parentName:"p"},"status")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"Steps"),", you can specify the state for current step."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Step } = Steps;\n\nReactDOM.render(\n  <Steps current={1} status="error">\n    <Step title="Finished" description="This is a description" />\n    <Step title="In Process" description="This is a description" />\n    <Step title="Waiting" description="This is a description" />\n  </Steps>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"dot-style"},"Dot Style"),(0,r.kt)("p",null,"Steps with progress dot style."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Step } = Steps;\n\nReactDOM.render(\n  <div>\n    <Steps progressDot current={1}>\n      <Step title="Finished" description="This is a description." />\n      <Step title="In Progress" description="This is a description." />\n      <Step title="Waiting" description="This is a description." />\n    </Steps>\n    <Divider />\n    <Steps progressDot current={1} direction="vertical">\n      <Step title="Finished" description="This is a description. This is a description." />\n      <Step title="Finished" description="This is a description. This is a description." />\n      <Step title="In Progress" description="This is a description. This is a description." />\n      <Step title="Waiting" description="This is a description." />\n      <Step title="Waiting" description="This is a description." />\n    </Steps>\n  </div>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"customized-dot-style"},"Customized Dot Style"),(0,r.kt)("p",null,"You can customize the display for Steps with progress dot style."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Step } = Steps;\n\nconst customDot = (dot, { status, index }) => (\n  <Popover\n    content={\n      <span>\n        step {index} status: {status}\n      </span>\n    }\n  >\n    {dot}\n  </Popover>\n);\n\nReactDOM.render(\n  <Steps current={1} progressDot={customDot}>\n    <Step title="Finished" description="You can hover on the dot." />\n    <Step title="In Progress" description="You can hover on the dot." />\n    <Step title="Waiting" description="You can hover on the dot." />\n    <Step title="Waiting" description="You can hover on the dot." />\n  </Steps>,\n  mountNode,\n);\n')),(0,r.kt)("h3",{id:"clickable"},"Clickable"),(0,r.kt)("p",null,"Setting ",(0,r.kt)("inlineCode",{parentName:"p"},"onChange")," makes Steps clickable."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Step } = Steps;\n\nclass Demo extends React.Component {\n  state = {\n    current: 0,\n  };\n\n  onChange = current => {\n    console.log(\'onChange:\', current);\n    this.setState({ current });\n  };\n\n  render() {\n    const { current } = this.state;\n\n    return (\n      <div>\n        <Steps current={current} onChange={this.onChange}>\n          <Step title="Step 1" description="This is a description." />\n          <Step title="Step 2" description="This is a description." />\n          <Step title="Step 3" description="This is a description." />\n        </Steps>\n\n        <Divider />\n\n        <Steps current={current} onChange={this.onChange} direction="vertical">\n          <Step title="Step 1" description="This is a description." />\n          <Step title="Step 2" description="This is a description." />\n          <Step title="Step 3" description="This is a description." />\n        </Steps>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n')),(0,r.kt)("h3",{id:"navigation-steps"},"Navigation Steps"),(0,r.kt)("p",null,"Navigation steps."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Step } = Steps;\n\nconst stepStyle = {\n  marginBottom: 60,\n  boxShadow: \'0px -1px 0 0 #e8e8e8 inset\',\n};\n\nclass Demo extends React.Component {\n  state = {\n    current: 0,\n  };\n\n  onChange = current => {\n    console.log(\'onChange:\', current);\n    this.setState({ current });\n  };\n\n  render() {\n    const { current } = this.state;\n    return (\n      <div>\n        <Steps\n          type="navigation"\n          size="small"\n          current={current}\n          onChange={this.onChange}\n          style={stepStyle}\n        >\n          <Step\n            title="Step 1"\n            subTitle="00:00:05"\n            status="finish"\n            description="This is a description."\n          />\n          <Step\n            title="Step 2"\n            subTitle="00:01:02"\n            status="process"\n            description="This is a description."\n          />\n          <Step\n            title="Step 3"\n            subTitle="waiting for longlong time"\n            status="wait"\n            description="This is a description."\n          />\n        </Steps>\n        <Steps type="navigation" current={current} onChange={this.onChange} style={stepStyle}>\n          <Step status="finish" title="Step 1" />\n          <Step status="process" title="Step 2" />\n          <Step status="wait" title="Step 3" />\n          <Step status="wait" title="Step 4" />\n        </Steps>\n        <Steps\n          type="navigation"\n          size="small"\n          current={current}\n          onChange={this.onChange}\n          style={stepStyle}\n        >\n          <Step status="finish" title="finish 1" />\n          <Step status="finish" title="finish 2" />\n          <Step status="process" title="current process" />\n          <Step status="wait" title="wait" disabled />\n        </Steps>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n')),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'<Steps>\n  <Step title="first step" />\n  <Step title="second step" />\n  <Step title="third step" />\n</Steps>\n')),(0,r.kt)("h3",{id:"steps"},"Steps"),(0,r.kt)("p",null,"The whole of the step bar."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"className"),(0,r.kt)("td",{parentName:"tr",align:null},"Additional class to Steps"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.11.3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"Type of steps, can be set to one of the following values: ",(0,r.kt)("inlineCode",{parentName:"td"},"default"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"navigation")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"default")),(0,r.kt)("td",{parentName:"tr",align:null},"3.22.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"current"),(0,r.kt)("td",{parentName:"tr",align:null},"To set the current step, counting from 0. You can overwrite this state by using ",(0,r.kt)("inlineCode",{parentName:"td"},"status")," of ",(0,r.kt)("inlineCode",{parentName:"td"},"Step")),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"direction"),(0,r.kt)("td",{parentName:"tr",align:null},"To specify the direction of the step bar, ",(0,r.kt)("inlineCode",{parentName:"td"},"horizontal")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"vertical")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"horizontal")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"labelPlacement"),(0,r.kt)("td",{parentName:"tr",align:null},"Place title and description with ",(0,r.kt)("inlineCode",{parentName:"td"},"horizontal")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"vertical")," direction"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"horizontal")),(0,r.kt)("td",{parentName:"tr",align:null},"3.7.3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"progressDot"),(0,r.kt)("td",{parentName:"tr",align:null},"Steps with progress dot style, customize the progress dot by setting it to a function. labelPlacement will be ",(0,r.kt)("inlineCode",{parentName:"td"},"vertical")),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean or (iconDot, {index, status, title, description}) => ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"size"),(0,r.kt)("td",{parentName:"tr",align:null},"To specify the size of the step bar, ",(0,r.kt)("inlineCode",{parentName:"td"},"default")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"small")," are currently supported"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"default")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"To specify the status of current step, can be set to one of the following values: ",(0,r.kt)("inlineCode",{parentName:"td"},"wait")," ",(0,r.kt)("inlineCode",{parentName:"td"},"process")," ",(0,r.kt)("inlineCode",{parentName:"td"},"finish")," ",(0,r.kt)("inlineCode",{parentName:"td"},"error")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"process")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"initial"),(0,r.kt)("td",{parentName:"tr",align:null},"Set the initial step, counting from 0"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"3.9.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onChange"),(0,r.kt)("td",{parentName:"tr",align:null},"Trigger when Step is changed"),(0,r.kt)("td",{parentName:"tr",align:null},"(current) => void"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.19.0")))),(0,r.kt)("h3",{id:"stepsstep"},"Steps.Step"),(0,r.kt)("p",null,"A single step in the step bar."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the step, optional property"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"icon"),(0,r.kt)("td",{parentName:"tr",align:null},"Icon of the step, optional property"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"To specify the status. It will be automatically set by ",(0,r.kt)("inlineCode",{parentName:"td"},"current")," of ",(0,r.kt)("inlineCode",{parentName:"td"},"Steps")," if not configured. Optional values are: ",(0,r.kt)("inlineCode",{parentName:"td"},"wait")," ",(0,r.kt)("inlineCode",{parentName:"td"},"process")," ",(0,r.kt)("inlineCode",{parentName:"td"},"finish")," ",(0,r.kt)("inlineCode",{parentName:"td"},"error")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"wait")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"title"),(0,r.kt)("td",{parentName:"tr",align:null},"Title of the step"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subTitle"),(0,r.kt)("td",{parentName:"tr",align:null},"Subtitle of the step"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"disabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Disable click"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"3.22.0")))))}u.isMDXComponent=!0},30876:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>m});var i=n(2784);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,i,a=function(t,e){if(null==t)return{};var n,i,a={},r=Object.keys(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var o=i.createContext({}),p=function(t){var e=i.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},d=function(t){var e=p(t.components);return i.createElement(o.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},u=i.forwardRef((function(t,e){var n=t.components,a=t.mdxType,r=t.originalType,o=t.parentName,d=s(t,["components","mdxType","originalType","parentName"]),u=p(n),m=a,g=u["".concat(o,".").concat(m)]||u[m]||c[m]||r;return n?i.createElement(g,l(l({ref:e},d),{},{components:n})):i.createElement(g,l({ref:e},d))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=n.length,l=new Array(r);l[0]=u;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=t,s.mdxType="string"==typeof t?t:a,l[1]=s;for(var p=2;p<r;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);