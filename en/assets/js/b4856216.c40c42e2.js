"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8828],{51430:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>d,contentTitle:()=>i,metadata:()=>m,toc:()=>p,default:()=>s});var a=n(7896),l=n(31461),r=(n(2784),n(30876)),o=["components"],d={tags:["Components"],type:"Data Display",cols:1,title:"Calendar"},i=void 0,m={unversionedId:"components/data-display/calendar",id:"components/data-display/calendar",isDocsHomePage:!1,title:"Calendar",description:"---",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/data-display/calendar.md",sourceDirName:"components/data-display",slug:"/components/data-display/calendar",permalink:"/tnt-next/en/docs/components/data-display/calendar",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/components/data-display/calendar.md",tags:[{label:"Components",permalink:"/tnt-next/en/docs/tags/components"}],version:"current",frontMatter:{tags:["Components"],type:"Data Display",cols:1,title:"Calendar"},sidebar:"componentsSidebar",previous:{title:"Badge",permalink:"/tnt-next/en/docs/components/data-display/badge"},next:{title:"Card",permalink:"/tnt-next/en/docs/components/data-display/card"}},p=[{value:"When To Use",id:"when-to-use",children:[],level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",children:[{value:"Basic",id:"basic",children:[],level:3},{value:"Notice Calendar",id:"notice-calendar",children:[],level:3},{value:"Card",id:"card",children:[],level:3},{value:"Selectable Calendar",id:"selectable-calendar",children:[],level:3},{value:"Customize Header",id:"customize-header",children:[],level:3}],level:2},{value:"API",id:"api",children:[],level:2}],c={toc:p};function s(e){var t=e.components,n=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Container for displaying data in calendar form."),(0,r.kt)("h2",{id:"when-to-use"},"When To Use"),(0,r.kt)("p",null,"When data is in the form of dates, such as schedules, timetables, prices calendar, lunar calendar. This component also supports Year/Month switch."),(0,r.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,r.kt)("h3",{id:"basic"},"Basic"),(0,r.kt)("p",null,"A basic calendar component with Year/Month switch."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function onPanelChange(value, mode) {\n  console.log(value, mode);\n}\n\nReactDOM.render(<Calendar onPanelChange={onPanelChange} />, mountNode);\n")),(0,r.kt)("h3",{id:"notice-calendar"},"Notice Calendar"),(0,r.kt)("p",null,"This component can be rendered by using ",(0,r.kt)("inlineCode",{parentName:"p"},"dateCellRender")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"monthCellRender")," with the data you need."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},".events {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n.events .ant-badge-status {\n  overflow: hidden;\n  white-space: nowrap;\n  width: 100%;\n  text-overflow: ellipsis;\n  font-size: 12px;\n}\n.notes-month {\n  text-align: center;\n  font-size: 28px;\n}\n.notes-month section {\n  font-size: 28px;\n}\n")),(0,r.kt)("h3",{id:"card"},"Card"),(0,r.kt)("p",null,"Nested inside a container element for rendering in limited space."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function onPanelChange(value, mode) {\n  console.log(value, mode);\n}\n\nReactDOM.render(\n  <div style={{ width: 300, border: '1px solid #d9d9d9', borderRadius: 4 }}>\n    <Calendar fullscreen={false} onPanelChange={onPanelChange} />\n  </div>,\n  mountNode,\n);\n")),(0,r.kt)("h3",{id:"selectable-calendar"},"Selectable Calendar"),(0,r.kt)("p",null,"A basic calendar component with Year/Month switch."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"\nclass App extends React.Component {\n  state = {\n    value: moment('2017-01-25'),\n    selectedValue: moment('2017-01-25'),\n  };\n\n  onSelect = value => {\n    this.setState({\n      value,\n      selectedValue: value,\n    });\n  };\n\n  onPanelChange = value => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { value, selectedValue } = this.state;\n    return (\n      <div>\n        <Alert\n          message={`You selected date: ${selectedValue && selectedValue.format('YYYY-MM-DD')}`}\n        />\n        <Calendar value={value} onSelect={this.onSelect} onPanelChange={this.onPanelChange} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n")),(0,r.kt)("h3",{id:"customize-header"},"Customize Header"),(0,r.kt)("p",null,"Customize Calendar header content."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'const { Group, Button } = Radio;\n\nfunction onPanelChange(value, mode) {\n  console.log(value, mode);\n}\n\nReactDOM.render(\n  <div style={{ width: 300, border: \'1px solid #d9d9d9\', borderRadius: 4 }}>\n    <Calendar\n      fullscreen={false}\n      headerRender={({ value, type, onChange, onTypeChange }) => {\n        const start = 0;\n        const end = 12;\n        const monthOptions = [];\n\n        const current = value.clone();\n        const localeData = value.localeData();\n        const months = [];\n        for (let i = 0; i < 12; i++) {\n          current.month(i);\n          months.push(localeData.monthsShort(current));\n        }\n\n        for (let index = start; index < end; index++) {\n          monthOptions.push(\n            <Select.Option className="month-item" key={`${index}`}>\n              {months[index]}\n            </Select.Option>,\n          );\n        }\n        const month = value.month();\n\n        const year = value.year();\n        const options = [];\n        for (let i = year - 10; i < year + 10; i += 1) {\n          options.push(\n            <Select.Option key={i} value={i} className="year-item">\n              {i}\n            </Select.Option>,\n          );\n        }\n        return (\n          <div style={{ padding: 10 }}>\n            <div style={{ marginBottom: \'10px\' }}>Custom header </div>\n            <Row type="flex" justify="space-between">\n              <Col>\n                <Group size="small" onChange={e => onTypeChange(e.target.value)} value={type}>\n                  <Button value="month">Month</Button>\n                  <Button value="year">Year</Button>\n                </Group>\n              </Col>\n              <Col>\n                <Select\n                  size="small"\n                  dropdownMatchSelectWidth={false}\n                  className="my-year-select"\n                  onChange={newYear => {\n                    const now = value.clone().year(newYear);\n                    onChange(now);\n                  }}\n                  value={String(year)}\n                >\n                  {options}\n                </Select>\n              </Col>\n              <Col>\n                <Select\n                  size="small"\n                  dropdownMatchSelectWidth={false}\n                  value={String(month)}\n                  onChange={selectedMonth => {\n                    const newValue = value.clone();\n                    newValue.month(parseInt(selectedMonth, 10));\n                    onChange(newValue);\n                  }}\n                >\n                  {monthOptions}\n                </Select>\n              </Col>\n            </Row>\n          </div>\n        );\n      }}\n      onPanelChange={onPanelChange}\n    />\n  </div>,\n  mountNode,\n);\n')),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," Part of the Calendar's locale is read from ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),". So, please set the locale of ",(0,r.kt)("inlineCode",{parentName:"p"},"moment")," correctly."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"// The default locale is en-US, if you want to use other locale, just set locale in entry file globally.\n// import moment from 'moment';\n// import 'moment/locale/zh-cn';\n// moment.locale('zh-cn');\n\n<Calendar\n  dateCellRender={dateCellRender}\n  monthCellRender={monthCellRender}\n  onPanelChange={onPanelChange}\n  onSelect={onSelect}\n/>\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dateCellRender"),(0,r.kt)("td",{parentName:"tr",align:null},"Customize the display of the date cell, the returned content will be appended to the cell"),(0,r.kt)("td",{parentName:"tr",align:null},"function(date: moment): ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dateFullCellRender"),(0,r.kt)("td",{parentName:"tr",align:null},"Customize the display of the date cell, the returned content will override the cell"),(0,r.kt)("td",{parentName:"tr",align:null},"function(date: moment): ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"defaultValue"),(0,r.kt)("td",{parentName:"tr",align:null},"The date selected by default"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://momentjs.com/"},"moment")),(0,r.kt)("td",{parentName:"tr",align:null},"default date"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"disabledDate"),(0,r.kt)("td",{parentName:"tr",align:null},"Function that specifies the dates that cannot be selected"),(0,r.kt)("td",{parentName:"tr",align:null},"(currentDate: moment) => boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fullscreen"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to display in full-screen"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"locale"),(0,r.kt)("td",{parentName:"tr",align:null},"The calendar's locale"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/ant-design/ant-design/blob/master/components/date-picker/locale/example.json"},"default")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mode"),(0,r.kt)("td",{parentName:"tr",align:null},"The display mode of the calendar"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"month")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"year")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"month"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"monthCellRender"),(0,r.kt)("td",{parentName:"tr",align:null},"Customize the display of the month cell, the returned content will be appended to the cell"),(0,r.kt)("td",{parentName:"tr",align:null},"function(date: moment): ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"monthFullCellRender"),(0,r.kt)("td",{parentName:"tr",align:null},"Customize the display of the month cell, the returned content will override the cell"),(0,r.kt)("td",{parentName:"tr",align:null},"function(date: moment): ReactNode"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"validRange"),(0,r.kt)("td",{parentName:"tr",align:null},"to set valid range"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("a",{parentName:"td",href:"http://momentjs.com/"},"moment"),", ",(0,r.kt)("a",{parentName:"td",href:"http://momentjs.com/"},"moment"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.3.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},"The current selected date"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://momentjs.com/"},"moment")),(0,r.kt)("td",{parentName:"tr",align:null},"current date"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onPanelChange"),(0,r.kt)("td",{parentName:"tr",align:null},"Callback for when panel changes"),(0,r.kt)("td",{parentName:"tr",align:null},"function(date: moment, mode: string)"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onSelect"),(0,r.kt)("td",{parentName:"tr",align:null},"Callback for when a date is selected"),(0,r.kt)("td",{parentName:"tr",align:null},"function(date: moment\uff09"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onChange"),(0,r.kt)("td",{parentName:"tr",align:null},"Callback for when date changes"),(0,r.kt)("td",{parentName:"tr",align:null},"function(date: moment\uff09"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.8.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"headerRender"),(0,r.kt)("td",{parentName:"tr",align:null},"render custom header in panel"),(0,r.kt)("td",{parentName:"tr",align:null},"function(object:{value: moment, type: string, onChange: f(), onTypeChange: f()})"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"3.19.0")))))}s.isMDXComponent=!0},30876:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(2784);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),m=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=m(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),s=m(n),u=l,h=s["".concat(i,".").concat(u)]||s[u]||c[u]||r;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function u(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=s;var d={};for(var i in t)hasOwnProperty.call(t,i)&&(d[i]=t[i]);d.originalType=e,d.mdxType="string"==typeof e?e:l,o[1]=d;for(var m=2;m<r;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);